// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package computing

import (
	"time"

	"github.com/alice02/nifcloud-sdk-go/nifcloud"
	"github.com/alice02/nifcloud-sdk-go/nifcloud/awsutil"
	"github.com/alice02/nifcloud-sdk-go/nifcloud/request"
)

const opAllocateAddress = "AllocateAddress"

// AllocateAddressRequest generates a "nifcloud/request.Request" representing the
// client's request for the AllocateAddress operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See AllocateAddress for more information on using the AllocateAddress
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the AllocateAddressRequest method.
//    req, resp := client.AllocateAddressRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/AllocateAddress
func (c *Computing) AllocateAddressRequest(input *AllocateAddressInput) (req *request.Request, output *AllocateAddressOutput) {
	op := &request.Operation{
		Name:       opAllocateAddress,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &AllocateAddressInput{}
	}

	output = &AllocateAddressOutput{}
	req = c.newRequest(op, input, output)
	return
}

// AllocateAddress API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation AllocateAddress for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/AllocateAddress
func (c *Computing) AllocateAddress(input *AllocateAddressInput) (*AllocateAddressOutput, error) {
	req, out := c.AllocateAddressRequest(input)
	return out, req.Send()
}

// AllocateAddressWithContext is the same as AllocateAddress with the addition of
// the ability to pass a context and additional request options.
//
// See AllocateAddress for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) AllocateAddressWithContext(ctx nifcloud.Context, input *AllocateAddressInput, opts ...request.Option) (*AllocateAddressOutput, error) {
	req, out := c.AllocateAddressRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opAssociateAddress = "AssociateAddress"

// AssociateAddressRequest generates a "nifcloud/request.Request" representing the
// client's request for the AssociateAddress operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See AssociateAddress for more information on using the AssociateAddress
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the AssociateAddressRequest method.
//    req, resp := client.AssociateAddressRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/AssociateAddress
func (c *Computing) AssociateAddressRequest(input *AssociateAddressInput) (req *request.Request, output *AssociateAddressOutput) {
	op := &request.Operation{
		Name:       opAssociateAddress,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &AssociateAddressInput{}
	}

	output = &AssociateAddressOutput{}
	req = c.newRequest(op, input, output)
	return
}

// AssociateAddress API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation AssociateAddress for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/AssociateAddress
func (c *Computing) AssociateAddress(input *AssociateAddressInput) (*AssociateAddressOutput, error) {
	req, out := c.AssociateAddressRequest(input)
	return out, req.Send()
}

// AssociateAddressWithContext is the same as AssociateAddress with the addition of
// the ability to pass a context and additional request options.
//
// See AssociateAddress for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) AssociateAddressWithContext(ctx nifcloud.Context, input *AssociateAddressInput, opts ...request.Option) (*AssociateAddressOutput, error) {
	req, out := c.AssociateAddressRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opAssociateRouteTable = "AssociateRouteTable"

// AssociateRouteTableRequest generates a "nifcloud/request.Request" representing the
// client's request for the AssociateRouteTable operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See AssociateRouteTable for more information on using the AssociateRouteTable
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the AssociateRouteTableRequest method.
//    req, resp := client.AssociateRouteTableRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/AssociateRouteTable
func (c *Computing) AssociateRouteTableRequest(input *AssociateRouteTableInput) (req *request.Request, output *AssociateRouteTableOutput) {
	op := &request.Operation{
		Name:       opAssociateRouteTable,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &AssociateRouteTableInput{}
	}

	output = &AssociateRouteTableOutput{}
	req = c.newRequest(op, input, output)
	return
}

// AssociateRouteTable API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation AssociateRouteTable for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/AssociateRouteTable
func (c *Computing) AssociateRouteTable(input *AssociateRouteTableInput) (*AssociateRouteTableOutput, error) {
	req, out := c.AssociateRouteTableRequest(input)
	return out, req.Send()
}

// AssociateRouteTableWithContext is the same as AssociateRouteTable with the addition of
// the ability to pass a context and additional request options.
//
// See AssociateRouteTable for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) AssociateRouteTableWithContext(ctx nifcloud.Context, input *AssociateRouteTableInput, opts ...request.Option) (*AssociateRouteTableOutput, error) {
	req, out := c.AssociateRouteTableRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opAssociateUsers = "AssociateUsers"

// AssociateUsersRequest generates a "nifcloud/request.Request" representing the
// client's request for the AssociateUsers operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See AssociateUsers for more information on using the AssociateUsers
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the AssociateUsersRequest method.
//    req, resp := client.AssociateUsersRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/AssociateUsers
func (c *Computing) AssociateUsersRequest(input *AssociateUsersInput) (req *request.Request, output *AssociateUsersOutput) {
	op := &request.Operation{
		Name:       opAssociateUsers,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &AssociateUsersInput{}
	}

	output = &AssociateUsersOutput{}
	req = c.newRequest(op, input, output)
	return
}

// AssociateUsers API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation AssociateUsers for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/AssociateUsers
func (c *Computing) AssociateUsers(input *AssociateUsersInput) (*AssociateUsersOutput, error) {
	req, out := c.AssociateUsersRequest(input)
	return out, req.Send()
}

// AssociateUsersWithContext is the same as AssociateUsers with the addition of
// the ability to pass a context and additional request options.
//
// See AssociateUsers for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) AssociateUsersWithContext(ctx nifcloud.Context, input *AssociateUsersInput, opts ...request.Option) (*AssociateUsersOutput, error) {
	req, out := c.AssociateUsersRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opAttachVolume = "AttachVolume"

// AttachVolumeRequest generates a "nifcloud/request.Request" representing the
// client's request for the AttachVolume operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See AttachVolume for more information on using the AttachVolume
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the AttachVolumeRequest method.
//    req, resp := client.AttachVolumeRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/AttachVolume
func (c *Computing) AttachVolumeRequest(input *AttachVolumeInput) (req *request.Request, output *AttachVolumeOutput) {
	op := &request.Operation{
		Name:       opAttachVolume,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &AttachVolumeInput{}
	}

	output = &AttachVolumeOutput{}
	req = c.newRequest(op, input, output)
	return
}

// AttachVolume API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation AttachVolume for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/AttachVolume
func (c *Computing) AttachVolume(input *AttachVolumeInput) (*AttachVolumeOutput, error) {
	req, out := c.AttachVolumeRequest(input)
	return out, req.Send()
}

// AttachVolumeWithContext is the same as AttachVolume with the addition of
// the ability to pass a context and additional request options.
//
// See AttachVolume for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) AttachVolumeWithContext(ctx nifcloud.Context, input *AttachVolumeInput, opts ...request.Option) (*AttachVolumeOutput, error) {
	req, out := c.AttachVolumeRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opAuthorizeSecurityGroupIngress = "AuthorizeSecurityGroupIngress"

// AuthorizeSecurityGroupIngressRequest generates a "nifcloud/request.Request" representing the
// client's request for the AuthorizeSecurityGroupIngress operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See AuthorizeSecurityGroupIngress for more information on using the AuthorizeSecurityGroupIngress
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the AuthorizeSecurityGroupIngressRequest method.
//    req, resp := client.AuthorizeSecurityGroupIngressRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/AuthorizeSecurityGroupIngress
func (c *Computing) AuthorizeSecurityGroupIngressRequest(input *AuthorizeSecurityGroupIngressInput) (req *request.Request, output *AuthorizeSecurityGroupIngressOutput) {
	op := &request.Operation{
		Name:       opAuthorizeSecurityGroupIngress,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &AuthorizeSecurityGroupIngressInput{}
	}

	output = &AuthorizeSecurityGroupIngressOutput{}
	req = c.newRequest(op, input, output)
	return
}

// AuthorizeSecurityGroupIngress API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation AuthorizeSecurityGroupIngress for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/AuthorizeSecurityGroupIngress
func (c *Computing) AuthorizeSecurityGroupIngress(input *AuthorizeSecurityGroupIngressInput) (*AuthorizeSecurityGroupIngressOutput, error) {
	req, out := c.AuthorizeSecurityGroupIngressRequest(input)
	return out, req.Send()
}

// AuthorizeSecurityGroupIngressWithContext is the same as AuthorizeSecurityGroupIngress with the addition of
// the ability to pass a context and additional request options.
//
// See AuthorizeSecurityGroupIngress for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) AuthorizeSecurityGroupIngressWithContext(ctx nifcloud.Context, input *AuthorizeSecurityGroupIngressInput, opts ...request.Option) (*AuthorizeSecurityGroupIngressOutput, error) {
	req, out := c.AuthorizeSecurityGroupIngressRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCancelCopyInstances = "CancelCopyInstances"

// CancelCopyInstancesRequest generates a "nifcloud/request.Request" representing the
// client's request for the CancelCopyInstances operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See CancelCopyInstances for more information on using the CancelCopyInstances
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the CancelCopyInstancesRequest method.
//    req, resp := client.CancelCopyInstancesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/CancelCopyInstances
func (c *Computing) CancelCopyInstancesRequest(input *CancelCopyInstancesInput) (req *request.Request, output *CancelCopyInstancesOutput) {
	op := &request.Operation{
		Name:       opCancelCopyInstances,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &CancelCopyInstancesInput{}
	}

	output = &CancelCopyInstancesOutput{}
	req = c.newRequest(op, input, output)
	return
}

// CancelCopyInstances API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation CancelCopyInstances for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/CancelCopyInstances
func (c *Computing) CancelCopyInstances(input *CancelCopyInstancesInput) (*CancelCopyInstancesOutput, error) {
	req, out := c.CancelCopyInstancesRequest(input)
	return out, req.Send()
}

// CancelCopyInstancesWithContext is the same as CancelCopyInstances with the addition of
// the ability to pass a context and additional request options.
//
// See CancelCopyInstances for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) CancelCopyInstancesWithContext(ctx nifcloud.Context, input *CancelCopyInstancesInput, opts ...request.Option) (*CancelCopyInstancesOutput, error) {
	req, out := c.CancelCopyInstancesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCancelUpload = "CancelUpload"

// CancelUploadRequest generates a "nifcloud/request.Request" representing the
// client's request for the CancelUpload operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See CancelUpload for more information on using the CancelUpload
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the CancelUploadRequest method.
//    req, resp := client.CancelUploadRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/CancelUpload
func (c *Computing) CancelUploadRequest(input *CancelUploadInput) (req *request.Request, output *CancelUploadOutput) {
	op := &request.Operation{
		Name:       opCancelUpload,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &CancelUploadInput{}
	}

	output = &CancelUploadOutput{}
	req = c.newRequest(op, input, output)
	return
}

// CancelUpload API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation CancelUpload for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/CancelUpload
func (c *Computing) CancelUpload(input *CancelUploadInput) (*CancelUploadOutput, error) {
	req, out := c.CancelUploadRequest(input)
	return out, req.Send()
}

// CancelUploadWithContext is the same as CancelUpload with the addition of
// the ability to pass a context and additional request options.
//
// See CancelUpload for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) CancelUploadWithContext(ctx nifcloud.Context, input *CancelUploadInput, opts ...request.Option) (*CancelUploadOutput, error) {
	req, out := c.CancelUploadRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opClearLoadBalancerSession = "ClearLoadBalancerSession"

// ClearLoadBalancerSessionRequest generates a "nifcloud/request.Request" representing the
// client's request for the ClearLoadBalancerSession operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See ClearLoadBalancerSession for more information on using the ClearLoadBalancerSession
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the ClearLoadBalancerSessionRequest method.
//    req, resp := client.ClearLoadBalancerSessionRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/ClearLoadBalancerSession
func (c *Computing) ClearLoadBalancerSessionRequest(input *ClearLoadBalancerSessionInput) (req *request.Request, output *ClearLoadBalancerSessionOutput) {
	op := &request.Operation{
		Name:       opClearLoadBalancerSession,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &ClearLoadBalancerSessionInput{}
	}

	output = &ClearLoadBalancerSessionOutput{}
	req = c.newRequest(op, input, output)
	return
}

// ClearLoadBalancerSession API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation ClearLoadBalancerSession for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/ClearLoadBalancerSession
func (c *Computing) ClearLoadBalancerSession(input *ClearLoadBalancerSessionInput) (*ClearLoadBalancerSessionOutput, error) {
	req, out := c.ClearLoadBalancerSessionRequest(input)
	return out, req.Send()
}

// ClearLoadBalancerSessionWithContext is the same as ClearLoadBalancerSession with the addition of
// the ability to pass a context and additional request options.
//
// See ClearLoadBalancerSession for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) ClearLoadBalancerSessionWithContext(ctx nifcloud.Context, input *ClearLoadBalancerSessionInput, opts ...request.Option) (*ClearLoadBalancerSessionOutput, error) {
	req, out := c.ClearLoadBalancerSessionRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opConfigureHealthCheck = "ConfigureHealthCheck"

// ConfigureHealthCheckRequest generates a "nifcloud/request.Request" representing the
// client's request for the ConfigureHealthCheck operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See ConfigureHealthCheck for more information on using the ConfigureHealthCheck
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the ConfigureHealthCheckRequest method.
//    req, resp := client.ConfigureHealthCheckRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/ConfigureHealthCheck
func (c *Computing) ConfigureHealthCheckRequest(input *ConfigureHealthCheckInput) (req *request.Request, output *ConfigureHealthCheckOutput) {
	op := &request.Operation{
		Name:       opConfigureHealthCheck,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &ConfigureHealthCheckInput{}
	}

	output = &ConfigureHealthCheckOutput{}
	req = c.newRequest(op, input, output)
	return
}

// ConfigureHealthCheck API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation ConfigureHealthCheck for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/ConfigureHealthCheck
func (c *Computing) ConfigureHealthCheck(input *ConfigureHealthCheckInput) (*ConfigureHealthCheckOutput, error) {
	req, out := c.ConfigureHealthCheckRequest(input)
	return out, req.Send()
}

// ConfigureHealthCheckWithContext is the same as ConfigureHealthCheck with the addition of
// the ability to pass a context and additional request options.
//
// See ConfigureHealthCheck for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) ConfigureHealthCheckWithContext(ctx nifcloud.Context, input *ConfigureHealthCheckInput, opts ...request.Option) (*ConfigureHealthCheckOutput, error) {
	req, out := c.ConfigureHealthCheckRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCopyInstances = "CopyInstances"

// CopyInstancesRequest generates a "nifcloud/request.Request" representing the
// client's request for the CopyInstances operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See CopyInstances for more information on using the CopyInstances
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the CopyInstancesRequest method.
//    req, resp := client.CopyInstancesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/CopyInstances
func (c *Computing) CopyInstancesRequest(input *CopyInstancesInput) (req *request.Request, output *CopyInstancesOutput) {
	op := &request.Operation{
		Name:       opCopyInstances,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &CopyInstancesInput{}
	}

	output = &CopyInstancesOutput{}
	req = c.newRequest(op, input, output)
	return
}

// CopyInstances API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation CopyInstances for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/CopyInstances
func (c *Computing) CopyInstances(input *CopyInstancesInput) (*CopyInstancesOutput, error) {
	req, out := c.CopyInstancesRequest(input)
	return out, req.Send()
}

// CopyInstancesWithContext is the same as CopyInstances with the addition of
// the ability to pass a context and additional request options.
//
// See CopyInstances for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) CopyInstancesWithContext(ctx nifcloud.Context, input *CopyInstancesInput, opts ...request.Option) (*CopyInstancesOutput, error) {
	req, out := c.CopyInstancesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateCustomerGateway = "CreateCustomerGateway"

// CreateCustomerGatewayRequest generates a "nifcloud/request.Request" representing the
// client's request for the CreateCustomerGateway operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See CreateCustomerGateway for more information on using the CreateCustomerGateway
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the CreateCustomerGatewayRequest method.
//    req, resp := client.CreateCustomerGatewayRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/CreateCustomerGateway
func (c *Computing) CreateCustomerGatewayRequest(input *CreateCustomerGatewayInput) (req *request.Request, output *CreateCustomerGatewayOutput) {
	op := &request.Operation{
		Name:       opCreateCustomerGateway,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &CreateCustomerGatewayInput{}
	}

	output = &CreateCustomerGatewayOutput{}
	req = c.newRequest(op, input, output)
	return
}

// CreateCustomerGateway API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation CreateCustomerGateway for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/CreateCustomerGateway
func (c *Computing) CreateCustomerGateway(input *CreateCustomerGatewayInput) (*CreateCustomerGatewayOutput, error) {
	req, out := c.CreateCustomerGatewayRequest(input)
	return out, req.Send()
}

// CreateCustomerGatewayWithContext is the same as CreateCustomerGateway with the addition of
// the ability to pass a context and additional request options.
//
// See CreateCustomerGateway for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) CreateCustomerGatewayWithContext(ctx nifcloud.Context, input *CreateCustomerGatewayInput, opts ...request.Option) (*CreateCustomerGatewayOutput, error) {
	req, out := c.CreateCustomerGatewayRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateDhcpOptions = "CreateDhcpOptions"

// CreateDhcpOptionsRequest generates a "nifcloud/request.Request" representing the
// client's request for the CreateDhcpOptions operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See CreateDhcpOptions for more information on using the CreateDhcpOptions
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the CreateDhcpOptionsRequest method.
//    req, resp := client.CreateDhcpOptionsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/CreateDhcpOptions
func (c *Computing) CreateDhcpOptionsRequest(input *CreateDhcpOptionsInput) (req *request.Request, output *CreateDhcpOptionsOutput) {
	op := &request.Operation{
		Name:       opCreateDhcpOptions,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &CreateDhcpOptionsInput{}
	}

	output = &CreateDhcpOptionsOutput{}
	req = c.newRequest(op, input, output)
	return
}

// CreateDhcpOptions API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation CreateDhcpOptions for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/CreateDhcpOptions
func (c *Computing) CreateDhcpOptions(input *CreateDhcpOptionsInput) (*CreateDhcpOptionsOutput, error) {
	req, out := c.CreateDhcpOptionsRequest(input)
	return out, req.Send()
}

// CreateDhcpOptionsWithContext is the same as CreateDhcpOptions with the addition of
// the ability to pass a context and additional request options.
//
// See CreateDhcpOptions for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) CreateDhcpOptionsWithContext(ctx nifcloud.Context, input *CreateDhcpOptionsInput, opts ...request.Option) (*CreateDhcpOptionsOutput, error) {
	req, out := c.CreateDhcpOptionsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateImage = "CreateImage"

// CreateImageRequest generates a "nifcloud/request.Request" representing the
// client's request for the CreateImage operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See CreateImage for more information on using the CreateImage
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the CreateImageRequest method.
//    req, resp := client.CreateImageRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/CreateImage
func (c *Computing) CreateImageRequest(input *CreateImageInput) (req *request.Request, output *CreateImageOutput) {
	op := &request.Operation{
		Name:       opCreateImage,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &CreateImageInput{}
	}

	output = &CreateImageOutput{}
	req = c.newRequest(op, input, output)
	return
}

// CreateImage API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation CreateImage for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/CreateImage
func (c *Computing) CreateImage(input *CreateImageInput) (*CreateImageOutput, error) {
	req, out := c.CreateImageRequest(input)
	return out, req.Send()
}

// CreateImageWithContext is the same as CreateImage with the addition of
// the ability to pass a context and additional request options.
//
// See CreateImage for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) CreateImageWithContext(ctx nifcloud.Context, input *CreateImageInput, opts ...request.Option) (*CreateImageOutput, error) {
	req, out := c.CreateImageRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateKeyPair = "CreateKeyPair"

// CreateKeyPairRequest generates a "nifcloud/request.Request" representing the
// client's request for the CreateKeyPair operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See CreateKeyPair for more information on using the CreateKeyPair
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the CreateKeyPairRequest method.
//    req, resp := client.CreateKeyPairRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/CreateKeyPair
func (c *Computing) CreateKeyPairRequest(input *CreateKeyPairInput) (req *request.Request, output *CreateKeyPairOutput) {
	op := &request.Operation{
		Name:       opCreateKeyPair,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &CreateKeyPairInput{}
	}

	output = &CreateKeyPairOutput{}
	req = c.newRequest(op, input, output)
	return
}

// CreateKeyPair API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation CreateKeyPair for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/CreateKeyPair
func (c *Computing) CreateKeyPair(input *CreateKeyPairInput) (*CreateKeyPairOutput, error) {
	req, out := c.CreateKeyPairRequest(input)
	return out, req.Send()
}

// CreateKeyPairWithContext is the same as CreateKeyPair with the addition of
// the ability to pass a context and additional request options.
//
// See CreateKeyPair for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) CreateKeyPairWithContext(ctx nifcloud.Context, input *CreateKeyPairInput, opts ...request.Option) (*CreateKeyPairOutput, error) {
	req, out := c.CreateKeyPairRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateLoadBalancer = "CreateLoadBalancer"

// CreateLoadBalancerRequest generates a "nifcloud/request.Request" representing the
// client's request for the CreateLoadBalancer operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See CreateLoadBalancer for more information on using the CreateLoadBalancer
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the CreateLoadBalancerRequest method.
//    req, resp := client.CreateLoadBalancerRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/CreateLoadBalancer
func (c *Computing) CreateLoadBalancerRequest(input *CreateLoadBalancerInput) (req *request.Request, output *CreateLoadBalancerOutput) {
	op := &request.Operation{
		Name:       opCreateLoadBalancer,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &CreateLoadBalancerInput{}
	}

	output = &CreateLoadBalancerOutput{}
	req = c.newRequest(op, input, output)
	return
}

// CreateLoadBalancer API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation CreateLoadBalancer for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/CreateLoadBalancer
func (c *Computing) CreateLoadBalancer(input *CreateLoadBalancerInput) (*CreateLoadBalancerOutput, error) {
	req, out := c.CreateLoadBalancerRequest(input)
	return out, req.Send()
}

// CreateLoadBalancerWithContext is the same as CreateLoadBalancer with the addition of
// the ability to pass a context and additional request options.
//
// See CreateLoadBalancer for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) CreateLoadBalancerWithContext(ctx nifcloud.Context, input *CreateLoadBalancerInput, opts ...request.Option) (*CreateLoadBalancerOutput, error) {
	req, out := c.CreateLoadBalancerRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateRoute = "CreateRoute"

// CreateRouteRequest generates a "nifcloud/request.Request" representing the
// client's request for the CreateRoute operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See CreateRoute for more information on using the CreateRoute
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the CreateRouteRequest method.
//    req, resp := client.CreateRouteRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/CreateRoute
func (c *Computing) CreateRouteRequest(input *CreateRouteInput) (req *request.Request, output *CreateRouteOutput) {
	op := &request.Operation{
		Name:       opCreateRoute,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &CreateRouteInput{}
	}

	output = &CreateRouteOutput{}
	req = c.newRequest(op, input, output)
	return
}

// CreateRoute API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation CreateRoute for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/CreateRoute
func (c *Computing) CreateRoute(input *CreateRouteInput) (*CreateRouteOutput, error) {
	req, out := c.CreateRouteRequest(input)
	return out, req.Send()
}

// CreateRouteWithContext is the same as CreateRoute with the addition of
// the ability to pass a context and additional request options.
//
// See CreateRoute for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) CreateRouteWithContext(ctx nifcloud.Context, input *CreateRouteInput, opts ...request.Option) (*CreateRouteOutput, error) {
	req, out := c.CreateRouteRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateRouteTable = "CreateRouteTable"

// CreateRouteTableRequest generates a "nifcloud/request.Request" representing the
// client's request for the CreateRouteTable operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See CreateRouteTable for more information on using the CreateRouteTable
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the CreateRouteTableRequest method.
//    req, resp := client.CreateRouteTableRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/CreateRouteTable
func (c *Computing) CreateRouteTableRequest(input *CreateRouteTableInput) (req *request.Request, output *CreateRouteTableOutput) {
	op := &request.Operation{
		Name:       opCreateRouteTable,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &CreateRouteTableInput{}
	}

	output = &CreateRouteTableOutput{}
	req = c.newRequest(op, input, output)
	return
}

// CreateRouteTable API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation CreateRouteTable for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/CreateRouteTable
func (c *Computing) CreateRouteTable(input *CreateRouteTableInput) (*CreateRouteTableOutput, error) {
	req, out := c.CreateRouteTableRequest(input)
	return out, req.Send()
}

// CreateRouteTableWithContext is the same as CreateRouteTable with the addition of
// the ability to pass a context and additional request options.
//
// See CreateRouteTable for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) CreateRouteTableWithContext(ctx nifcloud.Context, input *CreateRouteTableInput, opts ...request.Option) (*CreateRouteTableOutput, error) {
	req, out := c.CreateRouteTableRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateSecurityGroup = "CreateSecurityGroup"

// CreateSecurityGroupRequest generates a "nifcloud/request.Request" representing the
// client's request for the CreateSecurityGroup operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See CreateSecurityGroup for more information on using the CreateSecurityGroup
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the CreateSecurityGroupRequest method.
//    req, resp := client.CreateSecurityGroupRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/CreateSecurityGroup
func (c *Computing) CreateSecurityGroupRequest(input *CreateSecurityGroupInput) (req *request.Request, output *CreateSecurityGroupOutput) {
	op := &request.Operation{
		Name:       opCreateSecurityGroup,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &CreateSecurityGroupInput{}
	}

	output = &CreateSecurityGroupOutput{}
	req = c.newRequest(op, input, output)
	return
}

// CreateSecurityGroup API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation CreateSecurityGroup for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/CreateSecurityGroup
func (c *Computing) CreateSecurityGroup(input *CreateSecurityGroupInput) (*CreateSecurityGroupOutput, error) {
	req, out := c.CreateSecurityGroupRequest(input)
	return out, req.Send()
}

// CreateSecurityGroupWithContext is the same as CreateSecurityGroup with the addition of
// the ability to pass a context and additional request options.
//
// See CreateSecurityGroup for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) CreateSecurityGroupWithContext(ctx nifcloud.Context, input *CreateSecurityGroupInput, opts ...request.Option) (*CreateSecurityGroupOutput, error) {
	req, out := c.CreateSecurityGroupRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateSslCertificate = "CreateSslCertificate"

// CreateSslCertificateRequest generates a "nifcloud/request.Request" representing the
// client's request for the CreateSslCertificate operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See CreateSslCertificate for more information on using the CreateSslCertificate
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the CreateSslCertificateRequest method.
//    req, resp := client.CreateSslCertificateRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/CreateSslCertificate
func (c *Computing) CreateSslCertificateRequest(input *CreateSslCertificateInput) (req *request.Request, output *CreateSslCertificateOutput) {
	op := &request.Operation{
		Name:       opCreateSslCertificate,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &CreateSslCertificateInput{}
	}

	output = &CreateSslCertificateOutput{}
	req = c.newRequest(op, input, output)
	return
}

// CreateSslCertificate API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation CreateSslCertificate for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/CreateSslCertificate
func (c *Computing) CreateSslCertificate(input *CreateSslCertificateInput) (*CreateSslCertificateOutput, error) {
	req, out := c.CreateSslCertificateRequest(input)
	return out, req.Send()
}

// CreateSslCertificateWithContext is the same as CreateSslCertificate with the addition of
// the ability to pass a context and additional request options.
//
// See CreateSslCertificate for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) CreateSslCertificateWithContext(ctx nifcloud.Context, input *CreateSslCertificateInput, opts ...request.Option) (*CreateSslCertificateOutput, error) {
	req, out := c.CreateSslCertificateRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateVolume = "CreateVolume"

// CreateVolumeRequest generates a "nifcloud/request.Request" representing the
// client's request for the CreateVolume operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See CreateVolume for more information on using the CreateVolume
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the CreateVolumeRequest method.
//    req, resp := client.CreateVolumeRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/CreateVolume
func (c *Computing) CreateVolumeRequest(input *CreateVolumeInput) (req *request.Request, output *CreateVolumeOutput) {
	op := &request.Operation{
		Name:       opCreateVolume,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &CreateVolumeInput{}
	}

	output = &CreateVolumeOutput{}
	req = c.newRequest(op, input, output)
	return
}

// CreateVolume API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation CreateVolume for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/CreateVolume
func (c *Computing) CreateVolume(input *CreateVolumeInput) (*CreateVolumeOutput, error) {
	req, out := c.CreateVolumeRequest(input)
	return out, req.Send()
}

// CreateVolumeWithContext is the same as CreateVolume with the addition of
// the ability to pass a context and additional request options.
//
// See CreateVolume for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) CreateVolumeWithContext(ctx nifcloud.Context, input *CreateVolumeInput, opts ...request.Option) (*CreateVolumeOutput, error) {
	req, out := c.CreateVolumeRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateVpnConnection = "CreateVpnConnection"

// CreateVpnConnectionRequest generates a "nifcloud/request.Request" representing the
// client's request for the CreateVpnConnection operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See CreateVpnConnection for more information on using the CreateVpnConnection
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the CreateVpnConnectionRequest method.
//    req, resp := client.CreateVpnConnectionRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/CreateVpnConnection
func (c *Computing) CreateVpnConnectionRequest(input *CreateVpnConnectionInput) (req *request.Request, output *CreateVpnConnectionOutput) {
	op := &request.Operation{
		Name:       opCreateVpnConnection,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &CreateVpnConnectionInput{}
	}

	output = &CreateVpnConnectionOutput{}
	req = c.newRequest(op, input, output)
	return
}

// CreateVpnConnection API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation CreateVpnConnection for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/CreateVpnConnection
func (c *Computing) CreateVpnConnection(input *CreateVpnConnectionInput) (*CreateVpnConnectionOutput, error) {
	req, out := c.CreateVpnConnectionRequest(input)
	return out, req.Send()
}

// CreateVpnConnectionWithContext is the same as CreateVpnConnection with the addition of
// the ability to pass a context and additional request options.
//
// See CreateVpnConnection for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) CreateVpnConnectionWithContext(ctx nifcloud.Context, input *CreateVpnConnectionInput, opts ...request.Option) (*CreateVpnConnectionOutput, error) {
	req, out := c.CreateVpnConnectionRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateVpnGateway = "CreateVpnGateway"

// CreateVpnGatewayRequest generates a "nifcloud/request.Request" representing the
// client's request for the CreateVpnGateway operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See CreateVpnGateway for more information on using the CreateVpnGateway
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the CreateVpnGatewayRequest method.
//    req, resp := client.CreateVpnGatewayRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/CreateVpnGateway
func (c *Computing) CreateVpnGatewayRequest(input *CreateVpnGatewayInput) (req *request.Request, output *CreateVpnGatewayOutput) {
	op := &request.Operation{
		Name:       opCreateVpnGateway,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &CreateVpnGatewayInput{}
	}

	output = &CreateVpnGatewayOutput{}
	req = c.newRequest(op, input, output)
	return
}

// CreateVpnGateway API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation CreateVpnGateway for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/CreateVpnGateway
func (c *Computing) CreateVpnGateway(input *CreateVpnGatewayInput) (*CreateVpnGatewayOutput, error) {
	req, out := c.CreateVpnGatewayRequest(input)
	return out, req.Send()
}

// CreateVpnGatewayWithContext is the same as CreateVpnGateway with the addition of
// the ability to pass a context and additional request options.
//
// See CreateVpnGateway for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) CreateVpnGatewayWithContext(ctx nifcloud.Context, input *CreateVpnGatewayInput, opts ...request.Option) (*CreateVpnGatewayOutput, error) {
	req, out := c.CreateVpnGatewayRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteCustomerGateway = "DeleteCustomerGateway"

// DeleteCustomerGatewayRequest generates a "nifcloud/request.Request" representing the
// client's request for the DeleteCustomerGateway operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DeleteCustomerGateway for more information on using the DeleteCustomerGateway
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DeleteCustomerGatewayRequest method.
//    req, resp := client.DeleteCustomerGatewayRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DeleteCustomerGateway
func (c *Computing) DeleteCustomerGatewayRequest(input *DeleteCustomerGatewayInput) (req *request.Request, output *DeleteCustomerGatewayOutput) {
	op := &request.Operation{
		Name:       opDeleteCustomerGateway,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &DeleteCustomerGatewayInput{}
	}

	output = &DeleteCustomerGatewayOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DeleteCustomerGateway API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation DeleteCustomerGateway for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DeleteCustomerGateway
func (c *Computing) DeleteCustomerGateway(input *DeleteCustomerGatewayInput) (*DeleteCustomerGatewayOutput, error) {
	req, out := c.DeleteCustomerGatewayRequest(input)
	return out, req.Send()
}

// DeleteCustomerGatewayWithContext is the same as DeleteCustomerGateway with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteCustomerGateway for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) DeleteCustomerGatewayWithContext(ctx nifcloud.Context, input *DeleteCustomerGatewayInput, opts ...request.Option) (*DeleteCustomerGatewayOutput, error) {
	req, out := c.DeleteCustomerGatewayRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteDhcpOptions = "DeleteDhcpOptions"

// DeleteDhcpOptionsRequest generates a "nifcloud/request.Request" representing the
// client's request for the DeleteDhcpOptions operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DeleteDhcpOptions for more information on using the DeleteDhcpOptions
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DeleteDhcpOptionsRequest method.
//    req, resp := client.DeleteDhcpOptionsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DeleteDhcpOptions
func (c *Computing) DeleteDhcpOptionsRequest(input *DeleteDhcpOptionsInput) (req *request.Request, output *DeleteDhcpOptionsOutput) {
	op := &request.Operation{
		Name:       opDeleteDhcpOptions,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &DeleteDhcpOptionsInput{}
	}

	output = &DeleteDhcpOptionsOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DeleteDhcpOptions API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation DeleteDhcpOptions for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DeleteDhcpOptions
func (c *Computing) DeleteDhcpOptions(input *DeleteDhcpOptionsInput) (*DeleteDhcpOptionsOutput, error) {
	req, out := c.DeleteDhcpOptionsRequest(input)
	return out, req.Send()
}

// DeleteDhcpOptionsWithContext is the same as DeleteDhcpOptions with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteDhcpOptions for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) DeleteDhcpOptionsWithContext(ctx nifcloud.Context, input *DeleteDhcpOptionsInput, opts ...request.Option) (*DeleteDhcpOptionsOutput, error) {
	req, out := c.DeleteDhcpOptionsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteImage = "DeleteImage"

// DeleteImageRequest generates a "nifcloud/request.Request" representing the
// client's request for the DeleteImage operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DeleteImage for more information on using the DeleteImage
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DeleteImageRequest method.
//    req, resp := client.DeleteImageRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DeleteImage
func (c *Computing) DeleteImageRequest(input *DeleteImageInput) (req *request.Request, output *DeleteImageOutput) {
	op := &request.Operation{
		Name:       opDeleteImage,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &DeleteImageInput{}
	}

	output = &DeleteImageOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DeleteImage API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation DeleteImage for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DeleteImage
func (c *Computing) DeleteImage(input *DeleteImageInput) (*DeleteImageOutput, error) {
	req, out := c.DeleteImageRequest(input)
	return out, req.Send()
}

// DeleteImageWithContext is the same as DeleteImage with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteImage for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) DeleteImageWithContext(ctx nifcloud.Context, input *DeleteImageInput, opts ...request.Option) (*DeleteImageOutput, error) {
	req, out := c.DeleteImageRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteKeyPair = "DeleteKeyPair"

// DeleteKeyPairRequest generates a "nifcloud/request.Request" representing the
// client's request for the DeleteKeyPair operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DeleteKeyPair for more information on using the DeleteKeyPair
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DeleteKeyPairRequest method.
//    req, resp := client.DeleteKeyPairRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DeleteKeyPair
func (c *Computing) DeleteKeyPairRequest(input *DeleteKeyPairInput) (req *request.Request, output *DeleteKeyPairOutput) {
	op := &request.Operation{
		Name:       opDeleteKeyPair,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &DeleteKeyPairInput{}
	}

	output = &DeleteKeyPairOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DeleteKeyPair API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation DeleteKeyPair for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DeleteKeyPair
func (c *Computing) DeleteKeyPair(input *DeleteKeyPairInput) (*DeleteKeyPairOutput, error) {
	req, out := c.DeleteKeyPairRequest(input)
	return out, req.Send()
}

// DeleteKeyPairWithContext is the same as DeleteKeyPair with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteKeyPair for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) DeleteKeyPairWithContext(ctx nifcloud.Context, input *DeleteKeyPairInput, opts ...request.Option) (*DeleteKeyPairOutput, error) {
	req, out := c.DeleteKeyPairRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteLoadBalancer = "DeleteLoadBalancer"

// DeleteLoadBalancerRequest generates a "nifcloud/request.Request" representing the
// client's request for the DeleteLoadBalancer operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DeleteLoadBalancer for more information on using the DeleteLoadBalancer
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DeleteLoadBalancerRequest method.
//    req, resp := client.DeleteLoadBalancerRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DeleteLoadBalancer
func (c *Computing) DeleteLoadBalancerRequest(input *DeleteLoadBalancerInput) (req *request.Request, output *DeleteLoadBalancerOutput) {
	op := &request.Operation{
		Name:       opDeleteLoadBalancer,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &DeleteLoadBalancerInput{}
	}

	output = &DeleteLoadBalancerOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DeleteLoadBalancer API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation DeleteLoadBalancer for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DeleteLoadBalancer
func (c *Computing) DeleteLoadBalancer(input *DeleteLoadBalancerInput) (*DeleteLoadBalancerOutput, error) {
	req, out := c.DeleteLoadBalancerRequest(input)
	return out, req.Send()
}

// DeleteLoadBalancerWithContext is the same as DeleteLoadBalancer with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteLoadBalancer for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) DeleteLoadBalancerWithContext(ctx nifcloud.Context, input *DeleteLoadBalancerInput, opts ...request.Option) (*DeleteLoadBalancerOutput, error) {
	req, out := c.DeleteLoadBalancerRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteRoute = "DeleteRoute"

// DeleteRouteRequest generates a "nifcloud/request.Request" representing the
// client's request for the DeleteRoute operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DeleteRoute for more information on using the DeleteRoute
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DeleteRouteRequest method.
//    req, resp := client.DeleteRouteRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DeleteRoute
func (c *Computing) DeleteRouteRequest(input *DeleteRouteInput) (req *request.Request, output *DeleteRouteOutput) {
	op := &request.Operation{
		Name:       opDeleteRoute,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &DeleteRouteInput{}
	}

	output = &DeleteRouteOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DeleteRoute API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation DeleteRoute for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DeleteRoute
func (c *Computing) DeleteRoute(input *DeleteRouteInput) (*DeleteRouteOutput, error) {
	req, out := c.DeleteRouteRequest(input)
	return out, req.Send()
}

// DeleteRouteWithContext is the same as DeleteRoute with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteRoute for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) DeleteRouteWithContext(ctx nifcloud.Context, input *DeleteRouteInput, opts ...request.Option) (*DeleteRouteOutput, error) {
	req, out := c.DeleteRouteRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteRouteTable = "DeleteRouteTable"

// DeleteRouteTableRequest generates a "nifcloud/request.Request" representing the
// client's request for the DeleteRouteTable operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DeleteRouteTable for more information on using the DeleteRouteTable
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DeleteRouteTableRequest method.
//    req, resp := client.DeleteRouteTableRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DeleteRouteTable
func (c *Computing) DeleteRouteTableRequest(input *DeleteRouteTableInput) (req *request.Request, output *DeleteRouteTableOutput) {
	op := &request.Operation{
		Name:       opDeleteRouteTable,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &DeleteRouteTableInput{}
	}

	output = &DeleteRouteTableOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DeleteRouteTable API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation DeleteRouteTable for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DeleteRouteTable
func (c *Computing) DeleteRouteTable(input *DeleteRouteTableInput) (*DeleteRouteTableOutput, error) {
	req, out := c.DeleteRouteTableRequest(input)
	return out, req.Send()
}

// DeleteRouteTableWithContext is the same as DeleteRouteTable with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteRouteTable for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) DeleteRouteTableWithContext(ctx nifcloud.Context, input *DeleteRouteTableInput, opts ...request.Option) (*DeleteRouteTableOutput, error) {
	req, out := c.DeleteRouteTableRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteSecurityGroup = "DeleteSecurityGroup"

// DeleteSecurityGroupRequest generates a "nifcloud/request.Request" representing the
// client's request for the DeleteSecurityGroup operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DeleteSecurityGroup for more information on using the DeleteSecurityGroup
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DeleteSecurityGroupRequest method.
//    req, resp := client.DeleteSecurityGroupRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DeleteSecurityGroup
func (c *Computing) DeleteSecurityGroupRequest(input *DeleteSecurityGroupInput) (req *request.Request, output *DeleteSecurityGroupOutput) {
	op := &request.Operation{
		Name:       opDeleteSecurityGroup,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &DeleteSecurityGroupInput{}
	}

	output = &DeleteSecurityGroupOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DeleteSecurityGroup API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation DeleteSecurityGroup for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DeleteSecurityGroup
func (c *Computing) DeleteSecurityGroup(input *DeleteSecurityGroupInput) (*DeleteSecurityGroupOutput, error) {
	req, out := c.DeleteSecurityGroupRequest(input)
	return out, req.Send()
}

// DeleteSecurityGroupWithContext is the same as DeleteSecurityGroup with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteSecurityGroup for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) DeleteSecurityGroupWithContext(ctx nifcloud.Context, input *DeleteSecurityGroupInput, opts ...request.Option) (*DeleteSecurityGroupOutput, error) {
	req, out := c.DeleteSecurityGroupRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteSslCertificate = "DeleteSslCertificate"

// DeleteSslCertificateRequest generates a "nifcloud/request.Request" representing the
// client's request for the DeleteSslCertificate operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DeleteSslCertificate for more information on using the DeleteSslCertificate
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DeleteSslCertificateRequest method.
//    req, resp := client.DeleteSslCertificateRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DeleteSslCertificate
func (c *Computing) DeleteSslCertificateRequest(input *DeleteSslCertificateInput) (req *request.Request, output *DeleteSslCertificateOutput) {
	op := &request.Operation{
		Name:       opDeleteSslCertificate,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &DeleteSslCertificateInput{}
	}

	output = &DeleteSslCertificateOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DeleteSslCertificate API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation DeleteSslCertificate for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DeleteSslCertificate
func (c *Computing) DeleteSslCertificate(input *DeleteSslCertificateInput) (*DeleteSslCertificateOutput, error) {
	req, out := c.DeleteSslCertificateRequest(input)
	return out, req.Send()
}

// DeleteSslCertificateWithContext is the same as DeleteSslCertificate with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteSslCertificate for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) DeleteSslCertificateWithContext(ctx nifcloud.Context, input *DeleteSslCertificateInput, opts ...request.Option) (*DeleteSslCertificateOutput, error) {
	req, out := c.DeleteSslCertificateRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteVolume = "DeleteVolume"

// DeleteVolumeRequest generates a "nifcloud/request.Request" representing the
// client's request for the DeleteVolume operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DeleteVolume for more information on using the DeleteVolume
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DeleteVolumeRequest method.
//    req, resp := client.DeleteVolumeRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DeleteVolume
func (c *Computing) DeleteVolumeRequest(input *DeleteVolumeInput) (req *request.Request, output *DeleteVolumeOutput) {
	op := &request.Operation{
		Name:       opDeleteVolume,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &DeleteVolumeInput{}
	}

	output = &DeleteVolumeOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DeleteVolume API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation DeleteVolume for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DeleteVolume
func (c *Computing) DeleteVolume(input *DeleteVolumeInput) (*DeleteVolumeOutput, error) {
	req, out := c.DeleteVolumeRequest(input)
	return out, req.Send()
}

// DeleteVolumeWithContext is the same as DeleteVolume with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteVolume for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) DeleteVolumeWithContext(ctx nifcloud.Context, input *DeleteVolumeInput, opts ...request.Option) (*DeleteVolumeOutput, error) {
	req, out := c.DeleteVolumeRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteVpnConnection = "DeleteVpnConnection"

// DeleteVpnConnectionRequest generates a "nifcloud/request.Request" representing the
// client's request for the DeleteVpnConnection operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DeleteVpnConnection for more information on using the DeleteVpnConnection
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DeleteVpnConnectionRequest method.
//    req, resp := client.DeleteVpnConnectionRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DeleteVpnConnection
func (c *Computing) DeleteVpnConnectionRequest(input *DeleteVpnConnectionInput) (req *request.Request, output *DeleteVpnConnectionOutput) {
	op := &request.Operation{
		Name:       opDeleteVpnConnection,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &DeleteVpnConnectionInput{}
	}

	output = &DeleteVpnConnectionOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DeleteVpnConnection API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation DeleteVpnConnection for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DeleteVpnConnection
func (c *Computing) DeleteVpnConnection(input *DeleteVpnConnectionInput) (*DeleteVpnConnectionOutput, error) {
	req, out := c.DeleteVpnConnectionRequest(input)
	return out, req.Send()
}

// DeleteVpnConnectionWithContext is the same as DeleteVpnConnection with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteVpnConnection for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) DeleteVpnConnectionWithContext(ctx nifcloud.Context, input *DeleteVpnConnectionInput, opts ...request.Option) (*DeleteVpnConnectionOutput, error) {
	req, out := c.DeleteVpnConnectionRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteVpnGateway = "DeleteVpnGateway"

// DeleteVpnGatewayRequest generates a "nifcloud/request.Request" representing the
// client's request for the DeleteVpnGateway operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DeleteVpnGateway for more information on using the DeleteVpnGateway
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DeleteVpnGatewayRequest method.
//    req, resp := client.DeleteVpnGatewayRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DeleteVpnGateway
func (c *Computing) DeleteVpnGatewayRequest(input *DeleteVpnGatewayInput) (req *request.Request, output *DeleteVpnGatewayOutput) {
	op := &request.Operation{
		Name:       opDeleteVpnGateway,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &DeleteVpnGatewayInput{}
	}

	output = &DeleteVpnGatewayOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DeleteVpnGateway API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation DeleteVpnGateway for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DeleteVpnGateway
func (c *Computing) DeleteVpnGateway(input *DeleteVpnGatewayInput) (*DeleteVpnGatewayOutput, error) {
	req, out := c.DeleteVpnGatewayRequest(input)
	return out, req.Send()
}

// DeleteVpnGatewayWithContext is the same as DeleteVpnGateway with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteVpnGateway for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) DeleteVpnGatewayWithContext(ctx nifcloud.Context, input *DeleteVpnGatewayInput, opts ...request.Option) (*DeleteVpnGatewayOutput, error) {
	req, out := c.DeleteVpnGatewayRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeregisterInstancesFromLoadBalancer = "DeregisterInstancesFromLoadBalancer"

// DeregisterInstancesFromLoadBalancerRequest generates a "nifcloud/request.Request" representing the
// client's request for the DeregisterInstancesFromLoadBalancer operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DeregisterInstancesFromLoadBalancer for more information on using the DeregisterInstancesFromLoadBalancer
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DeregisterInstancesFromLoadBalancerRequest method.
//    req, resp := client.DeregisterInstancesFromLoadBalancerRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DeregisterInstancesFromLoadBalancer
func (c *Computing) DeregisterInstancesFromLoadBalancerRequest(input *DeregisterInstancesFromLoadBalancerInput) (req *request.Request, output *DeregisterInstancesFromLoadBalancerOutput) {
	op := &request.Operation{
		Name:       opDeregisterInstancesFromLoadBalancer,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &DeregisterInstancesFromLoadBalancerInput{}
	}

	output = &DeregisterInstancesFromLoadBalancerOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DeregisterInstancesFromLoadBalancer API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation DeregisterInstancesFromLoadBalancer for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DeregisterInstancesFromLoadBalancer
func (c *Computing) DeregisterInstancesFromLoadBalancer(input *DeregisterInstancesFromLoadBalancerInput) (*DeregisterInstancesFromLoadBalancerOutput, error) {
	req, out := c.DeregisterInstancesFromLoadBalancerRequest(input)
	return out, req.Send()
}

// DeregisterInstancesFromLoadBalancerWithContext is the same as DeregisterInstancesFromLoadBalancer with the addition of
// the ability to pass a context and additional request options.
//
// See DeregisterInstancesFromLoadBalancer for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) DeregisterInstancesFromLoadBalancerWithContext(ctx nifcloud.Context, input *DeregisterInstancesFromLoadBalancerInput, opts ...request.Option) (*DeregisterInstancesFromLoadBalancerOutput, error) {
	req, out := c.DeregisterInstancesFromLoadBalancerRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeregisterInstancesFromSecurityGroup = "DeregisterInstancesFromSecurityGroup"

// DeregisterInstancesFromSecurityGroupRequest generates a "nifcloud/request.Request" representing the
// client's request for the DeregisterInstancesFromSecurityGroup operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DeregisterInstancesFromSecurityGroup for more information on using the DeregisterInstancesFromSecurityGroup
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DeregisterInstancesFromSecurityGroupRequest method.
//    req, resp := client.DeregisterInstancesFromSecurityGroupRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DeregisterInstancesFromSecurityGroup
func (c *Computing) DeregisterInstancesFromSecurityGroupRequest(input *DeregisterInstancesFromSecurityGroupInput) (req *request.Request, output *DeregisterInstancesFromSecurityGroupOutput) {
	op := &request.Operation{
		Name:       opDeregisterInstancesFromSecurityGroup,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &DeregisterInstancesFromSecurityGroupInput{}
	}

	output = &DeregisterInstancesFromSecurityGroupOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DeregisterInstancesFromSecurityGroup API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation DeregisterInstancesFromSecurityGroup for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DeregisterInstancesFromSecurityGroup
func (c *Computing) DeregisterInstancesFromSecurityGroup(input *DeregisterInstancesFromSecurityGroupInput) (*DeregisterInstancesFromSecurityGroupOutput, error) {
	req, out := c.DeregisterInstancesFromSecurityGroupRequest(input)
	return out, req.Send()
}

// DeregisterInstancesFromSecurityGroupWithContext is the same as DeregisterInstancesFromSecurityGroup with the addition of
// the ability to pass a context and additional request options.
//
// See DeregisterInstancesFromSecurityGroup for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) DeregisterInstancesFromSecurityGroupWithContext(ctx nifcloud.Context, input *DeregisterInstancesFromSecurityGroupInput, opts ...request.Option) (*DeregisterInstancesFromSecurityGroupOutput, error) {
	req, out := c.DeregisterInstancesFromSecurityGroupRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeAddresses = "DescribeAddresses"

// DescribeAddressesRequest generates a "nifcloud/request.Request" representing the
// client's request for the DescribeAddresses operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DescribeAddresses for more information on using the DescribeAddresses
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DescribeAddressesRequest method.
//    req, resp := client.DescribeAddressesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DescribeAddresses
func (c *Computing) DescribeAddressesRequest(input *DescribeAddressesInput) (req *request.Request, output *DescribeAddressesOutput) {
	op := &request.Operation{
		Name:       opDescribeAddresses,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &DescribeAddressesInput{}
	}

	output = &DescribeAddressesOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DescribeAddresses API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation DescribeAddresses for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DescribeAddresses
func (c *Computing) DescribeAddresses(input *DescribeAddressesInput) (*DescribeAddressesOutput, error) {
	req, out := c.DescribeAddressesRequest(input)
	return out, req.Send()
}

// DescribeAddressesWithContext is the same as DescribeAddresses with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeAddresses for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) DescribeAddressesWithContext(ctx nifcloud.Context, input *DescribeAddressesInput, opts ...request.Option) (*DescribeAddressesOutput, error) {
	req, out := c.DescribeAddressesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeAssociatedUsers = "DescribeAssociatedUsers"

// DescribeAssociatedUsersRequest generates a "nifcloud/request.Request" representing the
// client's request for the DescribeAssociatedUsers operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DescribeAssociatedUsers for more information on using the DescribeAssociatedUsers
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DescribeAssociatedUsersRequest method.
//    req, resp := client.DescribeAssociatedUsersRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DescribeAssociatedUsers
func (c *Computing) DescribeAssociatedUsersRequest(input *DescribeAssociatedUsersInput) (req *request.Request, output *DescribeAssociatedUsersOutput) {
	op := &request.Operation{
		Name:       opDescribeAssociatedUsers,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &DescribeAssociatedUsersInput{}
	}

	output = &DescribeAssociatedUsersOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DescribeAssociatedUsers API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation DescribeAssociatedUsers for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DescribeAssociatedUsers
func (c *Computing) DescribeAssociatedUsers(input *DescribeAssociatedUsersInput) (*DescribeAssociatedUsersOutput, error) {
	req, out := c.DescribeAssociatedUsersRequest(input)
	return out, req.Send()
}

// DescribeAssociatedUsersWithContext is the same as DescribeAssociatedUsers with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeAssociatedUsers for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) DescribeAssociatedUsersWithContext(ctx nifcloud.Context, input *DescribeAssociatedUsersInput, opts ...request.Option) (*DescribeAssociatedUsersOutput, error) {
	req, out := c.DescribeAssociatedUsersRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeAvailabilityZones = "DescribeAvailabilityZones"

// DescribeAvailabilityZonesRequest generates a "nifcloud/request.Request" representing the
// client's request for the DescribeAvailabilityZones operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DescribeAvailabilityZones for more information on using the DescribeAvailabilityZones
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DescribeAvailabilityZonesRequest method.
//    req, resp := client.DescribeAvailabilityZonesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DescribeAvailabilityZones
func (c *Computing) DescribeAvailabilityZonesRequest(input *DescribeAvailabilityZonesInput) (req *request.Request, output *DescribeAvailabilityZonesOutput) {
	op := &request.Operation{
		Name:       opDescribeAvailabilityZones,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &DescribeAvailabilityZonesInput{}
	}

	output = &DescribeAvailabilityZonesOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DescribeAvailabilityZones API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation DescribeAvailabilityZones for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DescribeAvailabilityZones
func (c *Computing) DescribeAvailabilityZones(input *DescribeAvailabilityZonesInput) (*DescribeAvailabilityZonesOutput, error) {
	req, out := c.DescribeAvailabilityZonesRequest(input)
	return out, req.Send()
}

// DescribeAvailabilityZonesWithContext is the same as DescribeAvailabilityZones with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeAvailabilityZones for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) DescribeAvailabilityZonesWithContext(ctx nifcloud.Context, input *DescribeAvailabilityZonesInput, opts ...request.Option) (*DescribeAvailabilityZonesOutput, error) {
	req, out := c.DescribeAvailabilityZonesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeCustomerGateways = "DescribeCustomerGateways"

// DescribeCustomerGatewaysRequest generates a "nifcloud/request.Request" representing the
// client's request for the DescribeCustomerGateways operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DescribeCustomerGateways for more information on using the DescribeCustomerGateways
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DescribeCustomerGatewaysRequest method.
//    req, resp := client.DescribeCustomerGatewaysRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DescribeCustomerGateways
func (c *Computing) DescribeCustomerGatewaysRequest(input *DescribeCustomerGatewaysInput) (req *request.Request, output *DescribeCustomerGatewaysOutput) {
	op := &request.Operation{
		Name:       opDescribeCustomerGateways,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &DescribeCustomerGatewaysInput{}
	}

	output = &DescribeCustomerGatewaysOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DescribeCustomerGateways API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation DescribeCustomerGateways for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DescribeCustomerGateways
func (c *Computing) DescribeCustomerGateways(input *DescribeCustomerGatewaysInput) (*DescribeCustomerGatewaysOutput, error) {
	req, out := c.DescribeCustomerGatewaysRequest(input)
	return out, req.Send()
}

// DescribeCustomerGatewaysWithContext is the same as DescribeCustomerGateways with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeCustomerGateways for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) DescribeCustomerGatewaysWithContext(ctx nifcloud.Context, input *DescribeCustomerGatewaysInput, opts ...request.Option) (*DescribeCustomerGatewaysOutput, error) {
	req, out := c.DescribeCustomerGatewaysRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeDhcpOptions = "DescribeDhcpOptions"

// DescribeDhcpOptionsRequest generates a "nifcloud/request.Request" representing the
// client's request for the DescribeDhcpOptions operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DescribeDhcpOptions for more information on using the DescribeDhcpOptions
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DescribeDhcpOptionsRequest method.
//    req, resp := client.DescribeDhcpOptionsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DescribeDhcpOptions
func (c *Computing) DescribeDhcpOptionsRequest(input *DescribeDhcpOptionsInput) (req *request.Request, output *DescribeDhcpOptionsOutput) {
	op := &request.Operation{
		Name:       opDescribeDhcpOptions,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &DescribeDhcpOptionsInput{}
	}

	output = &DescribeDhcpOptionsOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DescribeDhcpOptions API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation DescribeDhcpOptions for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DescribeDhcpOptions
func (c *Computing) DescribeDhcpOptions(input *DescribeDhcpOptionsInput) (*DescribeDhcpOptionsOutput, error) {
	req, out := c.DescribeDhcpOptionsRequest(input)
	return out, req.Send()
}

// DescribeDhcpOptionsWithContext is the same as DescribeDhcpOptions with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDhcpOptions for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) DescribeDhcpOptionsWithContext(ctx nifcloud.Context, input *DescribeDhcpOptionsInput, opts ...request.Option) (*DescribeDhcpOptionsOutput, error) {
	req, out := c.DescribeDhcpOptionsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeImages = "DescribeImages"

// DescribeImagesRequest generates a "nifcloud/request.Request" representing the
// client's request for the DescribeImages operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DescribeImages for more information on using the DescribeImages
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DescribeImagesRequest method.
//    req, resp := client.DescribeImagesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DescribeImages
func (c *Computing) DescribeImagesRequest(input *DescribeImagesInput) (req *request.Request, output *DescribeImagesOutput) {
	op := &request.Operation{
		Name:       opDescribeImages,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &DescribeImagesInput{}
	}

	output = &DescribeImagesOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DescribeImages API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation DescribeImages for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DescribeImages
func (c *Computing) DescribeImages(input *DescribeImagesInput) (*DescribeImagesOutput, error) {
	req, out := c.DescribeImagesRequest(input)
	return out, req.Send()
}

// DescribeImagesWithContext is the same as DescribeImages with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeImages for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) DescribeImagesWithContext(ctx nifcloud.Context, input *DescribeImagesInput, opts ...request.Option) (*DescribeImagesOutput, error) {
	req, out := c.DescribeImagesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeInstanceAttribute = "DescribeInstanceAttribute"

// DescribeInstanceAttributeRequest generates a "nifcloud/request.Request" representing the
// client's request for the DescribeInstanceAttribute operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DescribeInstanceAttribute for more information on using the DescribeInstanceAttribute
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DescribeInstanceAttributeRequest method.
//    req, resp := client.DescribeInstanceAttributeRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DescribeInstanceAttribute
func (c *Computing) DescribeInstanceAttributeRequest(input *DescribeInstanceAttributeInput) (req *request.Request, output *DescribeInstanceAttributeOutput) {
	op := &request.Operation{
		Name:       opDescribeInstanceAttribute,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &DescribeInstanceAttributeInput{}
	}

	output = &DescribeInstanceAttributeOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DescribeInstanceAttribute API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation DescribeInstanceAttribute for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DescribeInstanceAttribute
func (c *Computing) DescribeInstanceAttribute(input *DescribeInstanceAttributeInput) (*DescribeInstanceAttributeOutput, error) {
	req, out := c.DescribeInstanceAttributeRequest(input)
	return out, req.Send()
}

// DescribeInstanceAttributeWithContext is the same as DescribeInstanceAttribute with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeInstanceAttribute for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) DescribeInstanceAttributeWithContext(ctx nifcloud.Context, input *DescribeInstanceAttributeInput, opts ...request.Option) (*DescribeInstanceAttributeOutput, error) {
	req, out := c.DescribeInstanceAttributeRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeInstanceHealth = "DescribeInstanceHealth"

// DescribeInstanceHealthRequest generates a "nifcloud/request.Request" representing the
// client's request for the DescribeInstanceHealth operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DescribeInstanceHealth for more information on using the DescribeInstanceHealth
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DescribeInstanceHealthRequest method.
//    req, resp := client.DescribeInstanceHealthRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DescribeInstanceHealth
func (c *Computing) DescribeInstanceHealthRequest(input *DescribeInstanceHealthInput) (req *request.Request, output *DescribeInstanceHealthOutput) {
	op := &request.Operation{
		Name:       opDescribeInstanceHealth,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &DescribeInstanceHealthInput{}
	}

	output = &DescribeInstanceHealthOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DescribeInstanceHealth API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation DescribeInstanceHealth for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DescribeInstanceHealth
func (c *Computing) DescribeInstanceHealth(input *DescribeInstanceHealthInput) (*DescribeInstanceHealthOutput, error) {
	req, out := c.DescribeInstanceHealthRequest(input)
	return out, req.Send()
}

// DescribeInstanceHealthWithContext is the same as DescribeInstanceHealth with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeInstanceHealth for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) DescribeInstanceHealthWithContext(ctx nifcloud.Context, input *DescribeInstanceHealthInput, opts ...request.Option) (*DescribeInstanceHealthOutput, error) {
	req, out := c.DescribeInstanceHealthRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeInstances = "DescribeInstances"

// DescribeInstancesRequest generates a "nifcloud/request.Request" representing the
// client's request for the DescribeInstances operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DescribeInstances for more information on using the DescribeInstances
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DescribeInstancesRequest method.
//    req, resp := client.DescribeInstancesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DescribeInstances
func (c *Computing) DescribeInstancesRequest(input *DescribeInstancesInput) (req *request.Request, output *DescribeInstancesOutput) {
	op := &request.Operation{
		Name:       opDescribeInstances,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &DescribeInstancesInput{}
	}

	output = &DescribeInstancesOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DescribeInstances API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation DescribeInstances for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DescribeInstances
func (c *Computing) DescribeInstances(input *DescribeInstancesInput) (*DescribeInstancesOutput, error) {
	req, out := c.DescribeInstancesRequest(input)
	return out, req.Send()
}

// DescribeInstancesWithContext is the same as DescribeInstances with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeInstances for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) DescribeInstancesWithContext(ctx nifcloud.Context, input *DescribeInstancesInput, opts ...request.Option) (*DescribeInstancesOutput, error) {
	req, out := c.DescribeInstancesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeKeyPairs = "DescribeKeyPairs"

// DescribeKeyPairsRequest generates a "nifcloud/request.Request" representing the
// client's request for the DescribeKeyPairs operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DescribeKeyPairs for more information on using the DescribeKeyPairs
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DescribeKeyPairsRequest method.
//    req, resp := client.DescribeKeyPairsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DescribeKeyPairs
func (c *Computing) DescribeKeyPairsRequest(input *DescribeKeyPairsInput) (req *request.Request, output *DescribeKeyPairsOutput) {
	op := &request.Operation{
		Name:       opDescribeKeyPairs,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &DescribeKeyPairsInput{}
	}

	output = &DescribeKeyPairsOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DescribeKeyPairs API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation DescribeKeyPairs for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DescribeKeyPairs
func (c *Computing) DescribeKeyPairs(input *DescribeKeyPairsInput) (*DescribeKeyPairsOutput, error) {
	req, out := c.DescribeKeyPairsRequest(input)
	return out, req.Send()
}

// DescribeKeyPairsWithContext is the same as DescribeKeyPairs with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeKeyPairs for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) DescribeKeyPairsWithContext(ctx nifcloud.Context, input *DescribeKeyPairsInput, opts ...request.Option) (*DescribeKeyPairsOutput, error) {
	req, out := c.DescribeKeyPairsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeLoadBalancers = "DescribeLoadBalancers"

// DescribeLoadBalancersRequest generates a "nifcloud/request.Request" representing the
// client's request for the DescribeLoadBalancers operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DescribeLoadBalancers for more information on using the DescribeLoadBalancers
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DescribeLoadBalancersRequest method.
//    req, resp := client.DescribeLoadBalancersRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DescribeLoadBalancers
func (c *Computing) DescribeLoadBalancersRequest(input *DescribeLoadBalancersInput) (req *request.Request, output *DescribeLoadBalancersOutput) {
	op := &request.Operation{
		Name:       opDescribeLoadBalancers,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &DescribeLoadBalancersInput{}
	}

	output = &DescribeLoadBalancersOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DescribeLoadBalancers API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation DescribeLoadBalancers for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DescribeLoadBalancers
func (c *Computing) DescribeLoadBalancers(input *DescribeLoadBalancersInput) (*DescribeLoadBalancersOutput, error) {
	req, out := c.DescribeLoadBalancersRequest(input)
	return out, req.Send()
}

// DescribeLoadBalancersWithContext is the same as DescribeLoadBalancers with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeLoadBalancers for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) DescribeLoadBalancersWithContext(ctx nifcloud.Context, input *DescribeLoadBalancersInput, opts ...request.Option) (*DescribeLoadBalancersOutput, error) {
	req, out := c.DescribeLoadBalancersRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeRegions = "DescribeRegions"

// DescribeRegionsRequest generates a "nifcloud/request.Request" representing the
// client's request for the DescribeRegions operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DescribeRegions for more information on using the DescribeRegions
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DescribeRegionsRequest method.
//    req, resp := client.DescribeRegionsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DescribeRegions
func (c *Computing) DescribeRegionsRequest(input *DescribeRegionsInput) (req *request.Request, output *DescribeRegionsOutput) {
	op := &request.Operation{
		Name:       opDescribeRegions,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &DescribeRegionsInput{}
	}

	output = &DescribeRegionsOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DescribeRegions API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation DescribeRegions for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DescribeRegions
func (c *Computing) DescribeRegions(input *DescribeRegionsInput) (*DescribeRegionsOutput, error) {
	req, out := c.DescribeRegionsRequest(input)
	return out, req.Send()
}

// DescribeRegionsWithContext is the same as DescribeRegions with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeRegions for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) DescribeRegionsWithContext(ctx nifcloud.Context, input *DescribeRegionsInput, opts ...request.Option) (*DescribeRegionsOutput, error) {
	req, out := c.DescribeRegionsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeResources = "DescribeResources"

// DescribeResourcesRequest generates a "nifcloud/request.Request" representing the
// client's request for the DescribeResources operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DescribeResources for more information on using the DescribeResources
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DescribeResourcesRequest method.
//    req, resp := client.DescribeResourcesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DescribeResources
func (c *Computing) DescribeResourcesRequest(input *DescribeResourcesInput) (req *request.Request, output *DescribeResourcesOutput) {
	op := &request.Operation{
		Name:       opDescribeResources,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &DescribeResourcesInput{}
	}

	output = &DescribeResourcesOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DescribeResources API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation DescribeResources for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DescribeResources
func (c *Computing) DescribeResources(input *DescribeResourcesInput) (*DescribeResourcesOutput, error) {
	req, out := c.DescribeResourcesRequest(input)
	return out, req.Send()
}

// DescribeResourcesWithContext is the same as DescribeResources with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeResources for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) DescribeResourcesWithContext(ctx nifcloud.Context, input *DescribeResourcesInput, opts ...request.Option) (*DescribeResourcesOutput, error) {
	req, out := c.DescribeResourcesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeRouteTables = "DescribeRouteTables"

// DescribeRouteTablesRequest generates a "nifcloud/request.Request" representing the
// client's request for the DescribeRouteTables operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DescribeRouteTables for more information on using the DescribeRouteTables
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DescribeRouteTablesRequest method.
//    req, resp := client.DescribeRouteTablesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DescribeRouteTables
func (c *Computing) DescribeRouteTablesRequest(input *DescribeRouteTablesInput) (req *request.Request, output *DescribeRouteTablesOutput) {
	op := &request.Operation{
		Name:       opDescribeRouteTables,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &DescribeRouteTablesInput{}
	}

	output = &DescribeRouteTablesOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DescribeRouteTables API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation DescribeRouteTables for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DescribeRouteTables
func (c *Computing) DescribeRouteTables(input *DescribeRouteTablesInput) (*DescribeRouteTablesOutput, error) {
	req, out := c.DescribeRouteTablesRequest(input)
	return out, req.Send()
}

// DescribeRouteTablesWithContext is the same as DescribeRouteTables with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeRouteTables for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) DescribeRouteTablesWithContext(ctx nifcloud.Context, input *DescribeRouteTablesInput, opts ...request.Option) (*DescribeRouteTablesOutput, error) {
	req, out := c.DescribeRouteTablesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeSecurityActivities = "DescribeSecurityActivities"

// DescribeSecurityActivitiesRequest generates a "nifcloud/request.Request" representing the
// client's request for the DescribeSecurityActivities operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DescribeSecurityActivities for more information on using the DescribeSecurityActivities
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DescribeSecurityActivitiesRequest method.
//    req, resp := client.DescribeSecurityActivitiesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DescribeSecurityActivities
func (c *Computing) DescribeSecurityActivitiesRequest(input *DescribeSecurityActivitiesInput) (req *request.Request, output *DescribeSecurityActivitiesOutput) {
	op := &request.Operation{
		Name:       opDescribeSecurityActivities,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &DescribeSecurityActivitiesInput{}
	}

	output = &DescribeSecurityActivitiesOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DescribeSecurityActivities API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation DescribeSecurityActivities for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DescribeSecurityActivities
func (c *Computing) DescribeSecurityActivities(input *DescribeSecurityActivitiesInput) (*DescribeSecurityActivitiesOutput, error) {
	req, out := c.DescribeSecurityActivitiesRequest(input)
	return out, req.Send()
}

// DescribeSecurityActivitiesWithContext is the same as DescribeSecurityActivities with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeSecurityActivities for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) DescribeSecurityActivitiesWithContext(ctx nifcloud.Context, input *DescribeSecurityActivitiesInput, opts ...request.Option) (*DescribeSecurityActivitiesOutput, error) {
	req, out := c.DescribeSecurityActivitiesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeSecurityGroupOption = "DescribeSecurityGroupOption"

// DescribeSecurityGroupOptionRequest generates a "nifcloud/request.Request" representing the
// client's request for the DescribeSecurityGroupOption operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DescribeSecurityGroupOption for more information on using the DescribeSecurityGroupOption
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DescribeSecurityGroupOptionRequest method.
//    req, resp := client.DescribeSecurityGroupOptionRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DescribeSecurityGroupOption
func (c *Computing) DescribeSecurityGroupOptionRequest(input *DescribeSecurityGroupOptionInput) (req *request.Request, output *DescribeSecurityGroupOptionOutput) {
	op := &request.Operation{
		Name:       opDescribeSecurityGroupOption,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &DescribeSecurityGroupOptionInput{}
	}

	output = &DescribeSecurityGroupOptionOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DescribeSecurityGroupOption API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation DescribeSecurityGroupOption for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DescribeSecurityGroupOption
func (c *Computing) DescribeSecurityGroupOption(input *DescribeSecurityGroupOptionInput) (*DescribeSecurityGroupOptionOutput, error) {
	req, out := c.DescribeSecurityGroupOptionRequest(input)
	return out, req.Send()
}

// DescribeSecurityGroupOptionWithContext is the same as DescribeSecurityGroupOption with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeSecurityGroupOption for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) DescribeSecurityGroupOptionWithContext(ctx nifcloud.Context, input *DescribeSecurityGroupOptionInput, opts ...request.Option) (*DescribeSecurityGroupOptionOutput, error) {
	req, out := c.DescribeSecurityGroupOptionRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeSecurityGroups = "DescribeSecurityGroups"

// DescribeSecurityGroupsRequest generates a "nifcloud/request.Request" representing the
// client's request for the DescribeSecurityGroups operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DescribeSecurityGroups for more information on using the DescribeSecurityGroups
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DescribeSecurityGroupsRequest method.
//    req, resp := client.DescribeSecurityGroupsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DescribeSecurityGroups
func (c *Computing) DescribeSecurityGroupsRequest(input *DescribeSecurityGroupsInput) (req *request.Request, output *DescribeSecurityGroupsOutput) {
	op := &request.Operation{
		Name:       opDescribeSecurityGroups,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &DescribeSecurityGroupsInput{}
	}

	output = &DescribeSecurityGroupsOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DescribeSecurityGroups API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation DescribeSecurityGroups for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DescribeSecurityGroups
func (c *Computing) DescribeSecurityGroups(input *DescribeSecurityGroupsInput) (*DescribeSecurityGroupsOutput, error) {
	req, out := c.DescribeSecurityGroupsRequest(input)
	return out, req.Send()
}

// DescribeSecurityGroupsWithContext is the same as DescribeSecurityGroups with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeSecurityGroups for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) DescribeSecurityGroupsWithContext(ctx nifcloud.Context, input *DescribeSecurityGroupsInput, opts ...request.Option) (*DescribeSecurityGroupsOutput, error) {
	req, out := c.DescribeSecurityGroupsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeServiceStatus = "DescribeServiceStatus"

// DescribeServiceStatusRequest generates a "nifcloud/request.Request" representing the
// client's request for the DescribeServiceStatus operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DescribeServiceStatus for more information on using the DescribeServiceStatus
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DescribeServiceStatusRequest method.
//    req, resp := client.DescribeServiceStatusRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DescribeServiceStatus
func (c *Computing) DescribeServiceStatusRequest(input *DescribeServiceStatusInput) (req *request.Request, output *DescribeServiceStatusOutput) {
	op := &request.Operation{
		Name:       opDescribeServiceStatus,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &DescribeServiceStatusInput{}
	}

	output = &DescribeServiceStatusOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DescribeServiceStatus API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation DescribeServiceStatus for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DescribeServiceStatus
func (c *Computing) DescribeServiceStatus(input *DescribeServiceStatusInput) (*DescribeServiceStatusOutput, error) {
	req, out := c.DescribeServiceStatusRequest(input)
	return out, req.Send()
}

// DescribeServiceStatusWithContext is the same as DescribeServiceStatus with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeServiceStatus for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) DescribeServiceStatusWithContext(ctx nifcloud.Context, input *DescribeServiceStatusInput, opts ...request.Option) (*DescribeServiceStatusOutput, error) {
	req, out := c.DescribeServiceStatusRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeSslCertificateAttribute = "DescribeSslCertificateAttribute"

// DescribeSslCertificateAttributeRequest generates a "nifcloud/request.Request" representing the
// client's request for the DescribeSslCertificateAttribute operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DescribeSslCertificateAttribute for more information on using the DescribeSslCertificateAttribute
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DescribeSslCertificateAttributeRequest method.
//    req, resp := client.DescribeSslCertificateAttributeRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DescribeSslCertificateAttribute
func (c *Computing) DescribeSslCertificateAttributeRequest(input *DescribeSslCertificateAttributeInput) (req *request.Request, output *DescribeSslCertificateAttributeOutput) {
	op := &request.Operation{
		Name:       opDescribeSslCertificateAttribute,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &DescribeSslCertificateAttributeInput{}
	}

	output = &DescribeSslCertificateAttributeOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DescribeSslCertificateAttribute API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation DescribeSslCertificateAttribute for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DescribeSslCertificateAttribute
func (c *Computing) DescribeSslCertificateAttribute(input *DescribeSslCertificateAttributeInput) (*DescribeSslCertificateAttributeOutput, error) {
	req, out := c.DescribeSslCertificateAttributeRequest(input)
	return out, req.Send()
}

// DescribeSslCertificateAttributeWithContext is the same as DescribeSslCertificateAttribute with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeSslCertificateAttribute for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) DescribeSslCertificateAttributeWithContext(ctx nifcloud.Context, input *DescribeSslCertificateAttributeInput, opts ...request.Option) (*DescribeSslCertificateAttributeOutput, error) {
	req, out := c.DescribeSslCertificateAttributeRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeSslCertificates = "DescribeSslCertificates"

// DescribeSslCertificatesRequest generates a "nifcloud/request.Request" representing the
// client's request for the DescribeSslCertificates operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DescribeSslCertificates for more information on using the DescribeSslCertificates
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DescribeSslCertificatesRequest method.
//    req, resp := client.DescribeSslCertificatesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DescribeSslCertificates
func (c *Computing) DescribeSslCertificatesRequest(input *DescribeSslCertificatesInput) (req *request.Request, output *DescribeSslCertificatesOutput) {
	op := &request.Operation{
		Name:       opDescribeSslCertificates,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &DescribeSslCertificatesInput{}
	}

	output = &DescribeSslCertificatesOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DescribeSslCertificates API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation DescribeSslCertificates for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DescribeSslCertificates
func (c *Computing) DescribeSslCertificates(input *DescribeSslCertificatesInput) (*DescribeSslCertificatesOutput, error) {
	req, out := c.DescribeSslCertificatesRequest(input)
	return out, req.Send()
}

// DescribeSslCertificatesWithContext is the same as DescribeSslCertificates with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeSslCertificates for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) DescribeSslCertificatesWithContext(ctx nifcloud.Context, input *DescribeSslCertificatesInput, opts ...request.Option) (*DescribeSslCertificatesOutput, error) {
	req, out := c.DescribeSslCertificatesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeUploads = "DescribeUploads"

// DescribeUploadsRequest generates a "nifcloud/request.Request" representing the
// client's request for the DescribeUploads operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DescribeUploads for more information on using the DescribeUploads
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DescribeUploadsRequest method.
//    req, resp := client.DescribeUploadsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DescribeUploads
func (c *Computing) DescribeUploadsRequest(input *DescribeUploadsInput) (req *request.Request, output *DescribeUploadsOutput) {
	op := &request.Operation{
		Name:       opDescribeUploads,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &DescribeUploadsInput{}
	}

	output = &DescribeUploadsOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DescribeUploads API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation DescribeUploads for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DescribeUploads
func (c *Computing) DescribeUploads(input *DescribeUploadsInput) (*DescribeUploadsOutput, error) {
	req, out := c.DescribeUploadsRequest(input)
	return out, req.Send()
}

// DescribeUploadsWithContext is the same as DescribeUploads with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeUploads for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) DescribeUploadsWithContext(ctx nifcloud.Context, input *DescribeUploadsInput, opts ...request.Option) (*DescribeUploadsOutput, error) {
	req, out := c.DescribeUploadsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeUsage = "DescribeUsage"

// DescribeUsageRequest generates a "nifcloud/request.Request" representing the
// client's request for the DescribeUsage operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DescribeUsage for more information on using the DescribeUsage
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DescribeUsageRequest method.
//    req, resp := client.DescribeUsageRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DescribeUsage
func (c *Computing) DescribeUsageRequest(input *DescribeUsageInput) (req *request.Request, output *DescribeUsageOutput) {
	op := &request.Operation{
		Name:       opDescribeUsage,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &DescribeUsageInput{}
	}

	output = &DescribeUsageOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DescribeUsage API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation DescribeUsage for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DescribeUsage
func (c *Computing) DescribeUsage(input *DescribeUsageInput) (*DescribeUsageOutput, error) {
	req, out := c.DescribeUsageRequest(input)
	return out, req.Send()
}

// DescribeUsageWithContext is the same as DescribeUsage with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeUsage for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) DescribeUsageWithContext(ctx nifcloud.Context, input *DescribeUsageInput, opts ...request.Option) (*DescribeUsageOutput, error) {
	req, out := c.DescribeUsageRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeUserActivities = "DescribeUserActivities"

// DescribeUserActivitiesRequest generates a "nifcloud/request.Request" representing the
// client's request for the DescribeUserActivities operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DescribeUserActivities for more information on using the DescribeUserActivities
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DescribeUserActivitiesRequest method.
//    req, resp := client.DescribeUserActivitiesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DescribeUserActivities
func (c *Computing) DescribeUserActivitiesRequest(input *DescribeUserActivitiesInput) (req *request.Request, output *DescribeUserActivitiesOutput) {
	op := &request.Operation{
		Name:       opDescribeUserActivities,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &DescribeUserActivitiesInput{}
	}

	output = &DescribeUserActivitiesOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DescribeUserActivities API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation DescribeUserActivities for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DescribeUserActivities
func (c *Computing) DescribeUserActivities(input *DescribeUserActivitiesInput) (*DescribeUserActivitiesOutput, error) {
	req, out := c.DescribeUserActivitiesRequest(input)
	return out, req.Send()
}

// DescribeUserActivitiesWithContext is the same as DescribeUserActivities with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeUserActivities for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) DescribeUserActivitiesWithContext(ctx nifcloud.Context, input *DescribeUserActivitiesInput, opts ...request.Option) (*DescribeUserActivitiesOutput, error) {
	req, out := c.DescribeUserActivitiesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeVolumes = "DescribeVolumes"

// DescribeVolumesRequest generates a "nifcloud/request.Request" representing the
// client's request for the DescribeVolumes operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DescribeVolumes for more information on using the DescribeVolumes
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DescribeVolumesRequest method.
//    req, resp := client.DescribeVolumesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DescribeVolumes
func (c *Computing) DescribeVolumesRequest(input *DescribeVolumesInput) (req *request.Request, output *DescribeVolumesOutput) {
	op := &request.Operation{
		Name:       opDescribeVolumes,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &DescribeVolumesInput{}
	}

	output = &DescribeVolumesOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DescribeVolumes API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation DescribeVolumes for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DescribeVolumes
func (c *Computing) DescribeVolumes(input *DescribeVolumesInput) (*DescribeVolumesOutput, error) {
	req, out := c.DescribeVolumesRequest(input)
	return out, req.Send()
}

// DescribeVolumesWithContext is the same as DescribeVolumes with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeVolumes for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) DescribeVolumesWithContext(ctx nifcloud.Context, input *DescribeVolumesInput, opts ...request.Option) (*DescribeVolumesOutput, error) {
	req, out := c.DescribeVolumesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeVpnConnections = "DescribeVpnConnections"

// DescribeVpnConnectionsRequest generates a "nifcloud/request.Request" representing the
// client's request for the DescribeVpnConnections operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DescribeVpnConnections for more information on using the DescribeVpnConnections
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DescribeVpnConnectionsRequest method.
//    req, resp := client.DescribeVpnConnectionsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DescribeVpnConnections
func (c *Computing) DescribeVpnConnectionsRequest(input *DescribeVpnConnectionsInput) (req *request.Request, output *DescribeVpnConnectionsOutput) {
	op := &request.Operation{
		Name:       opDescribeVpnConnections,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &DescribeVpnConnectionsInput{}
	}

	output = &DescribeVpnConnectionsOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DescribeVpnConnections API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation DescribeVpnConnections for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DescribeVpnConnections
func (c *Computing) DescribeVpnConnections(input *DescribeVpnConnectionsInput) (*DescribeVpnConnectionsOutput, error) {
	req, out := c.DescribeVpnConnectionsRequest(input)
	return out, req.Send()
}

// DescribeVpnConnectionsWithContext is the same as DescribeVpnConnections with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeVpnConnections for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) DescribeVpnConnectionsWithContext(ctx nifcloud.Context, input *DescribeVpnConnectionsInput, opts ...request.Option) (*DescribeVpnConnectionsOutput, error) {
	req, out := c.DescribeVpnConnectionsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeVpnGateways = "DescribeVpnGateways"

// DescribeVpnGatewaysRequest generates a "nifcloud/request.Request" representing the
// client's request for the DescribeVpnGateways operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DescribeVpnGateways for more information on using the DescribeVpnGateways
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DescribeVpnGatewaysRequest method.
//    req, resp := client.DescribeVpnGatewaysRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DescribeVpnGateways
func (c *Computing) DescribeVpnGatewaysRequest(input *DescribeVpnGatewaysInput) (req *request.Request, output *DescribeVpnGatewaysOutput) {
	op := &request.Operation{
		Name:       opDescribeVpnGateways,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &DescribeVpnGatewaysInput{}
	}

	output = &DescribeVpnGatewaysOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DescribeVpnGateways API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation DescribeVpnGateways for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DescribeVpnGateways
func (c *Computing) DescribeVpnGateways(input *DescribeVpnGatewaysInput) (*DescribeVpnGatewaysOutput, error) {
	req, out := c.DescribeVpnGatewaysRequest(input)
	return out, req.Send()
}

// DescribeVpnGatewaysWithContext is the same as DescribeVpnGateways with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeVpnGateways for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) DescribeVpnGatewaysWithContext(ctx nifcloud.Context, input *DescribeVpnGatewaysInput, opts ...request.Option) (*DescribeVpnGatewaysOutput, error) {
	req, out := c.DescribeVpnGatewaysRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDetachVolume = "DetachVolume"

// DetachVolumeRequest generates a "nifcloud/request.Request" representing the
// client's request for the DetachVolume operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DetachVolume for more information on using the DetachVolume
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DetachVolumeRequest method.
//    req, resp := client.DetachVolumeRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DetachVolume
func (c *Computing) DetachVolumeRequest(input *DetachVolumeInput) (req *request.Request, output *DetachVolumeOutput) {
	op := &request.Operation{
		Name:       opDetachVolume,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &DetachVolumeInput{}
	}

	output = &DetachVolumeOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DetachVolume API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation DetachVolume for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DetachVolume
func (c *Computing) DetachVolume(input *DetachVolumeInput) (*DetachVolumeOutput, error) {
	req, out := c.DetachVolumeRequest(input)
	return out, req.Send()
}

// DetachVolumeWithContext is the same as DetachVolume with the addition of
// the ability to pass a context and additional request options.
//
// See DetachVolume for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) DetachVolumeWithContext(ctx nifcloud.Context, input *DetachVolumeInput, opts ...request.Option) (*DetachVolumeOutput, error) {
	req, out := c.DetachVolumeRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDisassociateAddress = "DisassociateAddress"

// DisassociateAddressRequest generates a "nifcloud/request.Request" representing the
// client's request for the DisassociateAddress operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DisassociateAddress for more information on using the DisassociateAddress
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DisassociateAddressRequest method.
//    req, resp := client.DisassociateAddressRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DisassociateAddress
func (c *Computing) DisassociateAddressRequest(input *DisassociateAddressInput) (req *request.Request, output *DisassociateAddressOutput) {
	op := &request.Operation{
		Name:       opDisassociateAddress,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &DisassociateAddressInput{}
	}

	output = &DisassociateAddressOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DisassociateAddress API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation DisassociateAddress for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DisassociateAddress
func (c *Computing) DisassociateAddress(input *DisassociateAddressInput) (*DisassociateAddressOutput, error) {
	req, out := c.DisassociateAddressRequest(input)
	return out, req.Send()
}

// DisassociateAddressWithContext is the same as DisassociateAddress with the addition of
// the ability to pass a context and additional request options.
//
// See DisassociateAddress for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) DisassociateAddressWithContext(ctx nifcloud.Context, input *DisassociateAddressInput, opts ...request.Option) (*DisassociateAddressOutput, error) {
	req, out := c.DisassociateAddressRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDisassociateRouteTable = "DisassociateRouteTable"

// DisassociateRouteTableRequest generates a "nifcloud/request.Request" representing the
// client's request for the DisassociateRouteTable operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DisassociateRouteTable for more information on using the DisassociateRouteTable
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DisassociateRouteTableRequest method.
//    req, resp := client.DisassociateRouteTableRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DisassociateRouteTable
func (c *Computing) DisassociateRouteTableRequest(input *DisassociateRouteTableInput) (req *request.Request, output *DisassociateRouteTableOutput) {
	op := &request.Operation{
		Name:       opDisassociateRouteTable,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &DisassociateRouteTableInput{}
	}

	output = &DisassociateRouteTableOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DisassociateRouteTable API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation DisassociateRouteTable for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DisassociateRouteTable
func (c *Computing) DisassociateRouteTable(input *DisassociateRouteTableInput) (*DisassociateRouteTableOutput, error) {
	req, out := c.DisassociateRouteTableRequest(input)
	return out, req.Send()
}

// DisassociateRouteTableWithContext is the same as DisassociateRouteTable with the addition of
// the ability to pass a context and additional request options.
//
// See DisassociateRouteTable for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) DisassociateRouteTableWithContext(ctx nifcloud.Context, input *DisassociateRouteTableInput, opts ...request.Option) (*DisassociateRouteTableOutput, error) {
	req, out := c.DisassociateRouteTableRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDissociateUsers = "DissociateUsers"

// DissociateUsersRequest generates a "nifcloud/request.Request" representing the
// client's request for the DissociateUsers operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DissociateUsers for more information on using the DissociateUsers
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DissociateUsersRequest method.
//    req, resp := client.DissociateUsersRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DissociateUsers
func (c *Computing) DissociateUsersRequest(input *DissociateUsersInput) (req *request.Request, output *DissociateUsersOutput) {
	op := &request.Operation{
		Name:       opDissociateUsers,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &DissociateUsersInput{}
	}

	output = &DissociateUsersOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DissociateUsers API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation DissociateUsers for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DissociateUsers
func (c *Computing) DissociateUsers(input *DissociateUsersInput) (*DissociateUsersOutput, error) {
	req, out := c.DissociateUsersRequest(input)
	return out, req.Send()
}

// DissociateUsersWithContext is the same as DissociateUsers with the addition of
// the ability to pass a context and additional request options.
//
// See DissociateUsers for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) DissociateUsersWithContext(ctx nifcloud.Context, input *DissociateUsersInput, opts ...request.Option) (*DissociateUsersOutput, error) {
	req, out := c.DissociateUsersRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDownloadSslCertificate = "DownloadSslCertificate"

// DownloadSslCertificateRequest generates a "nifcloud/request.Request" representing the
// client's request for the DownloadSslCertificate operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DownloadSslCertificate for more information on using the DownloadSslCertificate
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DownloadSslCertificateRequest method.
//    req, resp := client.DownloadSslCertificateRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DownloadSslCertificate
func (c *Computing) DownloadSslCertificateRequest(input *DownloadSslCertificateInput) (req *request.Request, output *DownloadSslCertificateOutput) {
	op := &request.Operation{
		Name:       opDownloadSslCertificate,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &DownloadSslCertificateInput{}
	}

	output = &DownloadSslCertificateOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DownloadSslCertificate API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation DownloadSslCertificate for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/DownloadSslCertificate
func (c *Computing) DownloadSslCertificate(input *DownloadSslCertificateInput) (*DownloadSslCertificateOutput, error) {
	req, out := c.DownloadSslCertificateRequest(input)
	return out, req.Send()
}

// DownloadSslCertificateWithContext is the same as DownloadSslCertificate with the addition of
// the ability to pass a context and additional request options.
//
// See DownloadSslCertificate for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) DownloadSslCertificateWithContext(ctx nifcloud.Context, input *DownloadSslCertificateInput, opts ...request.Option) (*DownloadSslCertificateOutput, error) {
	req, out := c.DownloadSslCertificateRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opImportInstance = "ImportInstance"

// ImportInstanceRequest generates a "nifcloud/request.Request" representing the
// client's request for the ImportInstance operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See ImportInstance for more information on using the ImportInstance
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the ImportInstanceRequest method.
//    req, resp := client.ImportInstanceRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/ImportInstance
func (c *Computing) ImportInstanceRequest(input *ImportInstanceInput) (req *request.Request, output *ImportInstanceOutput) {
	op := &request.Operation{
		Name:       opImportInstance,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &ImportInstanceInput{}
	}

	output = &ImportInstanceOutput{}
	req = c.newRequest(op, input, output)
	return
}

// ImportInstance API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation ImportInstance for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/ImportInstance
func (c *Computing) ImportInstance(input *ImportInstanceInput) (*ImportInstanceOutput, error) {
	req, out := c.ImportInstanceRequest(input)
	return out, req.Send()
}

// ImportInstanceWithContext is the same as ImportInstance with the addition of
// the ability to pass a context and additional request options.
//
// See ImportInstance for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) ImportInstanceWithContext(ctx nifcloud.Context, input *ImportInstanceInput, opts ...request.Option) (*ImportInstanceOutput, error) {
	req, out := c.ImportInstanceRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opImportKeyPair = "ImportKeyPair"

// ImportKeyPairRequest generates a "nifcloud/request.Request" representing the
// client's request for the ImportKeyPair operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See ImportKeyPair for more information on using the ImportKeyPair
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the ImportKeyPairRequest method.
//    req, resp := client.ImportKeyPairRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/ImportKeyPair
func (c *Computing) ImportKeyPairRequest(input *ImportKeyPairInput) (req *request.Request, output *ImportKeyPairOutput) {
	op := &request.Operation{
		Name:       opImportKeyPair,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &ImportKeyPairInput{}
	}

	output = &ImportKeyPairOutput{}
	req = c.newRequest(op, input, output)
	return
}

// ImportKeyPair API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation ImportKeyPair for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/ImportKeyPair
func (c *Computing) ImportKeyPair(input *ImportKeyPairInput) (*ImportKeyPairOutput, error) {
	req, out := c.ImportKeyPairRequest(input)
	return out, req.Send()
}

// ImportKeyPairWithContext is the same as ImportKeyPair with the addition of
// the ability to pass a context and additional request options.
//
// See ImportKeyPair for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) ImportKeyPairWithContext(ctx nifcloud.Context, input *ImportKeyPairInput, opts ...request.Option) (*ImportKeyPairOutput, error) {
	req, out := c.ImportKeyPairRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyImageAttribute = "ModifyImageAttribute"

// ModifyImageAttributeRequest generates a "nifcloud/request.Request" representing the
// client's request for the ModifyImageAttribute operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See ModifyImageAttribute for more information on using the ModifyImageAttribute
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the ModifyImageAttributeRequest method.
//    req, resp := client.ModifyImageAttributeRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/ModifyImageAttribute
func (c *Computing) ModifyImageAttributeRequest(input *ModifyImageAttributeInput) (req *request.Request, output *ModifyImageAttributeOutput) {
	op := &request.Operation{
		Name:       opModifyImageAttribute,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &ModifyImageAttributeInput{}
	}

	output = &ModifyImageAttributeOutput{}
	req = c.newRequest(op, input, output)
	return
}

// ModifyImageAttribute API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation ModifyImageAttribute for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/ModifyImageAttribute
func (c *Computing) ModifyImageAttribute(input *ModifyImageAttributeInput) (*ModifyImageAttributeOutput, error) {
	req, out := c.ModifyImageAttributeRequest(input)
	return out, req.Send()
}

// ModifyImageAttributeWithContext is the same as ModifyImageAttribute with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyImageAttribute for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) ModifyImageAttributeWithContext(ctx nifcloud.Context, input *ModifyImageAttributeInput, opts ...request.Option) (*ModifyImageAttributeOutput, error) {
	req, out := c.ModifyImageAttributeRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyInstanceAttribute = "ModifyInstanceAttribute"

// ModifyInstanceAttributeRequest generates a "nifcloud/request.Request" representing the
// client's request for the ModifyInstanceAttribute operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See ModifyInstanceAttribute for more information on using the ModifyInstanceAttribute
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the ModifyInstanceAttributeRequest method.
//    req, resp := client.ModifyInstanceAttributeRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/ModifyInstanceAttribute
func (c *Computing) ModifyInstanceAttributeRequest(input *ModifyInstanceAttributeInput) (req *request.Request, output *ModifyInstanceAttributeOutput) {
	op := &request.Operation{
		Name:       opModifyInstanceAttribute,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &ModifyInstanceAttributeInput{}
	}

	output = &ModifyInstanceAttributeOutput{}
	req = c.newRequest(op, input, output)
	return
}

// ModifyInstanceAttribute API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation ModifyInstanceAttribute for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/ModifyInstanceAttribute
func (c *Computing) ModifyInstanceAttribute(input *ModifyInstanceAttributeInput) (*ModifyInstanceAttributeOutput, error) {
	req, out := c.ModifyInstanceAttributeRequest(input)
	return out, req.Send()
}

// ModifyInstanceAttributeWithContext is the same as ModifyInstanceAttribute with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyInstanceAttribute for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) ModifyInstanceAttributeWithContext(ctx nifcloud.Context, input *ModifyInstanceAttributeInput, opts ...request.Option) (*ModifyInstanceAttributeOutput, error) {
	req, out := c.ModifyInstanceAttributeRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifySslCertificateAttribute = "ModifySslCertificateAttribute"

// ModifySslCertificateAttributeRequest generates a "nifcloud/request.Request" representing the
// client's request for the ModifySslCertificateAttribute operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See ModifySslCertificateAttribute for more information on using the ModifySslCertificateAttribute
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the ModifySslCertificateAttributeRequest method.
//    req, resp := client.ModifySslCertificateAttributeRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/ModifySslCertificateAttribute
func (c *Computing) ModifySslCertificateAttributeRequest(input *ModifySslCertificateAttributeInput) (req *request.Request, output *ModifySslCertificateAttributeOutput) {
	op := &request.Operation{
		Name:       opModifySslCertificateAttribute,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &ModifySslCertificateAttributeInput{}
	}

	output = &ModifySslCertificateAttributeOutput{}
	req = c.newRequest(op, input, output)
	return
}

// ModifySslCertificateAttribute API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation ModifySslCertificateAttribute for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/ModifySslCertificateAttribute
func (c *Computing) ModifySslCertificateAttribute(input *ModifySslCertificateAttributeInput) (*ModifySslCertificateAttributeOutput, error) {
	req, out := c.ModifySslCertificateAttributeRequest(input)
	return out, req.Send()
}

// ModifySslCertificateAttributeWithContext is the same as ModifySslCertificateAttribute with the addition of
// the ability to pass a context and additional request options.
//
// See ModifySslCertificateAttribute for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) ModifySslCertificateAttributeWithContext(ctx nifcloud.Context, input *ModifySslCertificateAttributeInput, opts ...request.Option) (*ModifySslCertificateAttributeOutput, error) {
	req, out := c.ModifySslCertificateAttributeRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyVolumeAttribute = "ModifyVolumeAttribute"

// ModifyVolumeAttributeRequest generates a "nifcloud/request.Request" representing the
// client's request for the ModifyVolumeAttribute operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See ModifyVolumeAttribute for more information on using the ModifyVolumeAttribute
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the ModifyVolumeAttributeRequest method.
//    req, resp := client.ModifyVolumeAttributeRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/ModifyVolumeAttribute
func (c *Computing) ModifyVolumeAttributeRequest(input *ModifyVolumeAttributeInput) (req *request.Request, output *ModifyVolumeAttributeOutput) {
	op := &request.Operation{
		Name:       opModifyVolumeAttribute,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &ModifyVolumeAttributeInput{}
	}

	output = &ModifyVolumeAttributeOutput{}
	req = c.newRequest(op, input, output)
	return
}

// ModifyVolumeAttribute API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation ModifyVolumeAttribute for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/ModifyVolumeAttribute
func (c *Computing) ModifyVolumeAttribute(input *ModifyVolumeAttributeInput) (*ModifyVolumeAttributeOutput, error) {
	req, out := c.ModifyVolumeAttributeRequest(input)
	return out, req.Send()
}

// ModifyVolumeAttributeWithContext is the same as ModifyVolumeAttribute with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyVolumeAttribute for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) ModifyVolumeAttributeWithContext(ctx nifcloud.Context, input *ModifyVolumeAttributeInput, opts ...request.Option) (*ModifyVolumeAttributeOutput, error) {
	req, out := c.ModifyVolumeAttributeRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyAssociateImage = "NiftyAssociateImage"

// NiftyAssociateImageRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyAssociateImage operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyAssociateImage for more information on using the NiftyAssociateImage
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyAssociateImageRequest method.
//    req, resp := client.NiftyAssociateImageRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyAssociateImage
func (c *Computing) NiftyAssociateImageRequest(input *NiftyAssociateImageInput) (req *request.Request, output *NiftyAssociateImageOutput) {
	op := &request.Operation{
		Name:       opNiftyAssociateImage,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyAssociateImageInput{}
	}

	output = &NiftyAssociateImageOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyAssociateImage API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyAssociateImage for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyAssociateImage
func (c *Computing) NiftyAssociateImage(input *NiftyAssociateImageInput) (*NiftyAssociateImageOutput, error) {
	req, out := c.NiftyAssociateImageRequest(input)
	return out, req.Send()
}

// NiftyAssociateImageWithContext is the same as NiftyAssociateImage with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyAssociateImage for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyAssociateImageWithContext(ctx nifcloud.Context, input *NiftyAssociateImageInput, opts ...request.Option) (*NiftyAssociateImageOutput, error) {
	req, out := c.NiftyAssociateImageRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyAssociateNatTable = "NiftyAssociateNatTable"

// NiftyAssociateNatTableRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyAssociateNatTable operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyAssociateNatTable for more information on using the NiftyAssociateNatTable
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyAssociateNatTableRequest method.
//    req, resp := client.NiftyAssociateNatTableRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyAssociateNatTable
func (c *Computing) NiftyAssociateNatTableRequest(input *NiftyAssociateNatTableInput) (req *request.Request, output *NiftyAssociateNatTableOutput) {
	op := &request.Operation{
		Name:       opNiftyAssociateNatTable,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyAssociateNatTableInput{}
	}

	output = &NiftyAssociateNatTableOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyAssociateNatTable API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyAssociateNatTable for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyAssociateNatTable
func (c *Computing) NiftyAssociateNatTable(input *NiftyAssociateNatTableInput) (*NiftyAssociateNatTableOutput, error) {
	req, out := c.NiftyAssociateNatTableRequest(input)
	return out, req.Send()
}

// NiftyAssociateNatTableWithContext is the same as NiftyAssociateNatTable with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyAssociateNatTable for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyAssociateNatTableWithContext(ctx nifcloud.Context, input *NiftyAssociateNatTableInput, opts ...request.Option) (*NiftyAssociateNatTableOutput, error) {
	req, out := c.NiftyAssociateNatTableRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyAssociateRouteTableWithVpnGateway = "NiftyAssociateRouteTableWithVpnGateway"

// NiftyAssociateRouteTableWithVpnGatewayRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyAssociateRouteTableWithVpnGateway operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyAssociateRouteTableWithVpnGateway for more information on using the NiftyAssociateRouteTableWithVpnGateway
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyAssociateRouteTableWithVpnGatewayRequest method.
//    req, resp := client.NiftyAssociateRouteTableWithVpnGatewayRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyAssociateRouteTableWithVpnGateway
func (c *Computing) NiftyAssociateRouteTableWithVpnGatewayRequest(input *NiftyAssociateRouteTableWithVpnGatewayInput) (req *request.Request, output *NiftyAssociateRouteTableWithVpnGatewayOutput) {
	op := &request.Operation{
		Name:       opNiftyAssociateRouteTableWithVpnGateway,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyAssociateRouteTableWithVpnGatewayInput{}
	}

	output = &NiftyAssociateRouteTableWithVpnGatewayOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyAssociateRouteTableWithVpnGateway API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyAssociateRouteTableWithVpnGateway for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyAssociateRouteTableWithVpnGateway
func (c *Computing) NiftyAssociateRouteTableWithVpnGateway(input *NiftyAssociateRouteTableWithVpnGatewayInput) (*NiftyAssociateRouteTableWithVpnGatewayOutput, error) {
	req, out := c.NiftyAssociateRouteTableWithVpnGatewayRequest(input)
	return out, req.Send()
}

// NiftyAssociateRouteTableWithVpnGatewayWithContext is the same as NiftyAssociateRouteTableWithVpnGateway with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyAssociateRouteTableWithVpnGateway for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyAssociateRouteTableWithVpnGatewayWithContext(ctx nifcloud.Context, input *NiftyAssociateRouteTableWithVpnGatewayInput, opts ...request.Option) (*NiftyAssociateRouteTableWithVpnGatewayOutput, error) {
	req, out := c.NiftyAssociateRouteTableWithVpnGatewayRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyConfigureElasticLoadBalancerHealthCheck = "NiftyConfigureElasticLoadBalancerHealthCheck"

// NiftyConfigureElasticLoadBalancerHealthCheckRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyConfigureElasticLoadBalancerHealthCheck operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyConfigureElasticLoadBalancerHealthCheck for more information on using the NiftyConfigureElasticLoadBalancerHealthCheck
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyConfigureElasticLoadBalancerHealthCheckRequest method.
//    req, resp := client.NiftyConfigureElasticLoadBalancerHealthCheckRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyConfigureElasticLoadBalancerHealthCheck
func (c *Computing) NiftyConfigureElasticLoadBalancerHealthCheckRequest(input *NiftyConfigureElasticLoadBalancerHealthCheckInput) (req *request.Request, output *NiftyConfigureElasticLoadBalancerHealthCheckOutput) {
	op := &request.Operation{
		Name:       opNiftyConfigureElasticLoadBalancerHealthCheck,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyConfigureElasticLoadBalancerHealthCheckInput{}
	}

	output = &NiftyConfigureElasticLoadBalancerHealthCheckOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyConfigureElasticLoadBalancerHealthCheck API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyConfigureElasticLoadBalancerHealthCheck for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyConfigureElasticLoadBalancerHealthCheck
func (c *Computing) NiftyConfigureElasticLoadBalancerHealthCheck(input *NiftyConfigureElasticLoadBalancerHealthCheckInput) (*NiftyConfigureElasticLoadBalancerHealthCheckOutput, error) {
	req, out := c.NiftyConfigureElasticLoadBalancerHealthCheckRequest(input)
	return out, req.Send()
}

// NiftyConfigureElasticLoadBalancerHealthCheckWithContext is the same as NiftyConfigureElasticLoadBalancerHealthCheck with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyConfigureElasticLoadBalancerHealthCheck for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyConfigureElasticLoadBalancerHealthCheckWithContext(ctx nifcloud.Context, input *NiftyConfigureElasticLoadBalancerHealthCheckInput, opts ...request.Option) (*NiftyConfigureElasticLoadBalancerHealthCheckOutput, error) {
	req, out := c.NiftyConfigureElasticLoadBalancerHealthCheckRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyCreateAlarm = "NiftyCreateAlarm"

// NiftyCreateAlarmRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyCreateAlarm operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyCreateAlarm for more information on using the NiftyCreateAlarm
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyCreateAlarmRequest method.
//    req, resp := client.NiftyCreateAlarmRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyCreateAlarm
func (c *Computing) NiftyCreateAlarmRequest(input *NiftyCreateAlarmInput) (req *request.Request, output *NiftyCreateAlarmOutput) {
	op := &request.Operation{
		Name:       opNiftyCreateAlarm,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyCreateAlarmInput{}
	}

	output = &NiftyCreateAlarmOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyCreateAlarm API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyCreateAlarm for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyCreateAlarm
func (c *Computing) NiftyCreateAlarm(input *NiftyCreateAlarmInput) (*NiftyCreateAlarmOutput, error) {
	req, out := c.NiftyCreateAlarmRequest(input)
	return out, req.Send()
}

// NiftyCreateAlarmWithContext is the same as NiftyCreateAlarm with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyCreateAlarm for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyCreateAlarmWithContext(ctx nifcloud.Context, input *NiftyCreateAlarmInput, opts ...request.Option) (*NiftyCreateAlarmOutput, error) {
	req, out := c.NiftyCreateAlarmRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyCreateAutoScalingGroup = "NiftyCreateAutoScalingGroup"

// NiftyCreateAutoScalingGroupRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyCreateAutoScalingGroup operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyCreateAutoScalingGroup for more information on using the NiftyCreateAutoScalingGroup
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyCreateAutoScalingGroupRequest method.
//    req, resp := client.NiftyCreateAutoScalingGroupRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyCreateAutoScalingGroup
func (c *Computing) NiftyCreateAutoScalingGroupRequest(input *NiftyCreateAutoScalingGroupInput) (req *request.Request, output *NiftyCreateAutoScalingGroupOutput) {
	op := &request.Operation{
		Name:       opNiftyCreateAutoScalingGroup,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyCreateAutoScalingGroupInput{}
	}

	output = &NiftyCreateAutoScalingGroupOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyCreateAutoScalingGroup API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyCreateAutoScalingGroup for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyCreateAutoScalingGroup
func (c *Computing) NiftyCreateAutoScalingGroup(input *NiftyCreateAutoScalingGroupInput) (*NiftyCreateAutoScalingGroupOutput, error) {
	req, out := c.NiftyCreateAutoScalingGroupRequest(input)
	return out, req.Send()
}

// NiftyCreateAutoScalingGroupWithContext is the same as NiftyCreateAutoScalingGroup with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyCreateAutoScalingGroup for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyCreateAutoScalingGroupWithContext(ctx nifcloud.Context, input *NiftyCreateAutoScalingGroupInput, opts ...request.Option) (*NiftyCreateAutoScalingGroupOutput, error) {
	req, out := c.NiftyCreateAutoScalingGroupRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyCreateDhcpConfig = "NiftyCreateDhcpConfig"

// NiftyCreateDhcpConfigRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyCreateDhcpConfig operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyCreateDhcpConfig for more information on using the NiftyCreateDhcpConfig
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyCreateDhcpConfigRequest method.
//    req, resp := client.NiftyCreateDhcpConfigRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyCreateDhcpConfig
func (c *Computing) NiftyCreateDhcpConfigRequest(input *NiftyCreateDhcpConfigInput) (req *request.Request, output *NiftyCreateDhcpConfigOutput) {
	op := &request.Operation{
		Name:       opNiftyCreateDhcpConfig,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyCreateDhcpConfigInput{}
	}

	output = &NiftyCreateDhcpConfigOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyCreateDhcpConfig API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyCreateDhcpConfig for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyCreateDhcpConfig
func (c *Computing) NiftyCreateDhcpConfig(input *NiftyCreateDhcpConfigInput) (*NiftyCreateDhcpConfigOutput, error) {
	req, out := c.NiftyCreateDhcpConfigRequest(input)
	return out, req.Send()
}

// NiftyCreateDhcpConfigWithContext is the same as NiftyCreateDhcpConfig with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyCreateDhcpConfig for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyCreateDhcpConfigWithContext(ctx nifcloud.Context, input *NiftyCreateDhcpConfigInput, opts ...request.Option) (*NiftyCreateDhcpConfigOutput, error) {
	req, out := c.NiftyCreateDhcpConfigRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyCreateDhcpIpAddressPool = "NiftyCreateDhcpIpAddressPool"

// NiftyCreateDhcpIpAddressPoolRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyCreateDhcpIpAddressPool operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyCreateDhcpIpAddressPool for more information on using the NiftyCreateDhcpIpAddressPool
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyCreateDhcpIpAddressPoolRequest method.
//    req, resp := client.NiftyCreateDhcpIpAddressPoolRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyCreateDhcpIpAddressPool
func (c *Computing) NiftyCreateDhcpIpAddressPoolRequest(input *NiftyCreateDhcpIpAddressPoolInput) (req *request.Request, output *NiftyCreateDhcpIpAddressPoolOutput) {
	op := &request.Operation{
		Name:       opNiftyCreateDhcpIpAddressPool,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyCreateDhcpIpAddressPoolInput{}
	}

	output = &NiftyCreateDhcpIpAddressPoolOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyCreateDhcpIpAddressPool API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyCreateDhcpIpAddressPool for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyCreateDhcpIpAddressPool
func (c *Computing) NiftyCreateDhcpIpAddressPool(input *NiftyCreateDhcpIpAddressPoolInput) (*NiftyCreateDhcpIpAddressPoolOutput, error) {
	req, out := c.NiftyCreateDhcpIpAddressPoolRequest(input)
	return out, req.Send()
}

// NiftyCreateDhcpIpAddressPoolWithContext is the same as NiftyCreateDhcpIpAddressPool with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyCreateDhcpIpAddressPool for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyCreateDhcpIpAddressPoolWithContext(ctx nifcloud.Context, input *NiftyCreateDhcpIpAddressPoolInput, opts ...request.Option) (*NiftyCreateDhcpIpAddressPoolOutput, error) {
	req, out := c.NiftyCreateDhcpIpAddressPoolRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyCreateDhcpStaticMapping = "NiftyCreateDhcpStaticMapping"

// NiftyCreateDhcpStaticMappingRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyCreateDhcpStaticMapping operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyCreateDhcpStaticMapping for more information on using the NiftyCreateDhcpStaticMapping
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyCreateDhcpStaticMappingRequest method.
//    req, resp := client.NiftyCreateDhcpStaticMappingRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyCreateDhcpStaticMapping
func (c *Computing) NiftyCreateDhcpStaticMappingRequest(input *NiftyCreateDhcpStaticMappingInput) (req *request.Request, output *NiftyCreateDhcpStaticMappingOutput) {
	op := &request.Operation{
		Name:       opNiftyCreateDhcpStaticMapping,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyCreateDhcpStaticMappingInput{}
	}

	output = &NiftyCreateDhcpStaticMappingOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyCreateDhcpStaticMapping API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyCreateDhcpStaticMapping for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyCreateDhcpStaticMapping
func (c *Computing) NiftyCreateDhcpStaticMapping(input *NiftyCreateDhcpStaticMappingInput) (*NiftyCreateDhcpStaticMappingOutput, error) {
	req, out := c.NiftyCreateDhcpStaticMappingRequest(input)
	return out, req.Send()
}

// NiftyCreateDhcpStaticMappingWithContext is the same as NiftyCreateDhcpStaticMapping with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyCreateDhcpStaticMapping for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyCreateDhcpStaticMappingWithContext(ctx nifcloud.Context, input *NiftyCreateDhcpStaticMappingInput, opts ...request.Option) (*NiftyCreateDhcpStaticMappingOutput, error) {
	req, out := c.NiftyCreateDhcpStaticMappingRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyCreateElasticLoadBalancer = "NiftyCreateElasticLoadBalancer"

// NiftyCreateElasticLoadBalancerRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyCreateElasticLoadBalancer operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyCreateElasticLoadBalancer for more information on using the NiftyCreateElasticLoadBalancer
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyCreateElasticLoadBalancerRequest method.
//    req, resp := client.NiftyCreateElasticLoadBalancerRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyCreateElasticLoadBalancer
func (c *Computing) NiftyCreateElasticLoadBalancerRequest(input *NiftyCreateElasticLoadBalancerInput) (req *request.Request, output *NiftyCreateElasticLoadBalancerOutput) {
	op := &request.Operation{
		Name:       opNiftyCreateElasticLoadBalancer,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyCreateElasticLoadBalancerInput{}
	}

	output = &NiftyCreateElasticLoadBalancerOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyCreateElasticLoadBalancer API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyCreateElasticLoadBalancer for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyCreateElasticLoadBalancer
func (c *Computing) NiftyCreateElasticLoadBalancer(input *NiftyCreateElasticLoadBalancerInput) (*NiftyCreateElasticLoadBalancerOutput, error) {
	req, out := c.NiftyCreateElasticLoadBalancerRequest(input)
	return out, req.Send()
}

// NiftyCreateElasticLoadBalancerWithContext is the same as NiftyCreateElasticLoadBalancer with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyCreateElasticLoadBalancer for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyCreateElasticLoadBalancerWithContext(ctx nifcloud.Context, input *NiftyCreateElasticLoadBalancerInput, opts ...request.Option) (*NiftyCreateElasticLoadBalancerOutput, error) {
	req, out := c.NiftyCreateElasticLoadBalancerRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyCreateInstanceSnapshot = "NiftyCreateInstanceSnapshot"

// NiftyCreateInstanceSnapshotRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyCreateInstanceSnapshot operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyCreateInstanceSnapshot for more information on using the NiftyCreateInstanceSnapshot
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyCreateInstanceSnapshotRequest method.
//    req, resp := client.NiftyCreateInstanceSnapshotRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyCreateInstanceSnapshot
func (c *Computing) NiftyCreateInstanceSnapshotRequest(input *NiftyCreateInstanceSnapshotInput) (req *request.Request, output *NiftyCreateInstanceSnapshotOutput) {
	op := &request.Operation{
		Name:       opNiftyCreateInstanceSnapshot,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyCreateInstanceSnapshotInput{}
	}

	output = &NiftyCreateInstanceSnapshotOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyCreateInstanceSnapshot API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyCreateInstanceSnapshot for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyCreateInstanceSnapshot
func (c *Computing) NiftyCreateInstanceSnapshot(input *NiftyCreateInstanceSnapshotInput) (*NiftyCreateInstanceSnapshotOutput, error) {
	req, out := c.NiftyCreateInstanceSnapshotRequest(input)
	return out, req.Send()
}

// NiftyCreateInstanceSnapshotWithContext is the same as NiftyCreateInstanceSnapshot with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyCreateInstanceSnapshot for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyCreateInstanceSnapshotWithContext(ctx nifcloud.Context, input *NiftyCreateInstanceSnapshotInput, opts ...request.Option) (*NiftyCreateInstanceSnapshotOutput, error) {
	req, out := c.NiftyCreateInstanceSnapshotRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyCreateNatRule = "NiftyCreateNatRule"

// NiftyCreateNatRuleRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyCreateNatRule operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyCreateNatRule for more information on using the NiftyCreateNatRule
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyCreateNatRuleRequest method.
//    req, resp := client.NiftyCreateNatRuleRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyCreateNatRule
func (c *Computing) NiftyCreateNatRuleRequest(input *NiftyCreateNatRuleInput) (req *request.Request, output *NiftyCreateNatRuleOutput) {
	op := &request.Operation{
		Name:       opNiftyCreateNatRule,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyCreateNatRuleInput{}
	}

	output = &NiftyCreateNatRuleOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyCreateNatRule API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyCreateNatRule for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyCreateNatRule
func (c *Computing) NiftyCreateNatRule(input *NiftyCreateNatRuleInput) (*NiftyCreateNatRuleOutput, error) {
	req, out := c.NiftyCreateNatRuleRequest(input)
	return out, req.Send()
}

// NiftyCreateNatRuleWithContext is the same as NiftyCreateNatRule with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyCreateNatRule for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyCreateNatRuleWithContext(ctx nifcloud.Context, input *NiftyCreateNatRuleInput, opts ...request.Option) (*NiftyCreateNatRuleOutput, error) {
	req, out := c.NiftyCreateNatRuleRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyCreateNatTable = "NiftyCreateNatTable"

// NiftyCreateNatTableRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyCreateNatTable operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyCreateNatTable for more information on using the NiftyCreateNatTable
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyCreateNatTableRequest method.
//    req, resp := client.NiftyCreateNatTableRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyCreateNatTable
func (c *Computing) NiftyCreateNatTableRequest(input *NiftyCreateNatTableInput) (req *request.Request, output *NiftyCreateNatTableOutput) {
	op := &request.Operation{
		Name:       opNiftyCreateNatTable,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyCreateNatTableInput{}
	}

	output = &NiftyCreateNatTableOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyCreateNatTable API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyCreateNatTable for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyCreateNatTable
func (c *Computing) NiftyCreateNatTable(input *NiftyCreateNatTableInput) (*NiftyCreateNatTableOutput, error) {
	req, out := c.NiftyCreateNatTableRequest(input)
	return out, req.Send()
}

// NiftyCreateNatTableWithContext is the same as NiftyCreateNatTable with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyCreateNatTable for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyCreateNatTableWithContext(ctx nifcloud.Context, input *NiftyCreateNatTableInput, opts ...request.Option) (*NiftyCreateNatTableOutput, error) {
	req, out := c.NiftyCreateNatTableRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyCreatePrivateLan = "NiftyCreatePrivateLan"

// NiftyCreatePrivateLanRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyCreatePrivateLan operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyCreatePrivateLan for more information on using the NiftyCreatePrivateLan
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyCreatePrivateLanRequest method.
//    req, resp := client.NiftyCreatePrivateLanRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyCreatePrivateLan
func (c *Computing) NiftyCreatePrivateLanRequest(input *NiftyCreatePrivateLanInput) (req *request.Request, output *NiftyCreatePrivateLanOutput) {
	op := &request.Operation{
		Name:       opNiftyCreatePrivateLan,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyCreatePrivateLanInput{}
	}

	output = &NiftyCreatePrivateLanOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyCreatePrivateLan API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyCreatePrivateLan for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyCreatePrivateLan
func (c *Computing) NiftyCreatePrivateLan(input *NiftyCreatePrivateLanInput) (*NiftyCreatePrivateLanOutput, error) {
	req, out := c.NiftyCreatePrivateLanRequest(input)
	return out, req.Send()
}

// NiftyCreatePrivateLanWithContext is the same as NiftyCreatePrivateLan with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyCreatePrivateLan for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyCreatePrivateLanWithContext(ctx nifcloud.Context, input *NiftyCreatePrivateLanInput, opts ...request.Option) (*NiftyCreatePrivateLanOutput, error) {
	req, out := c.NiftyCreatePrivateLanRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyCreateRouter = "NiftyCreateRouter"

// NiftyCreateRouterRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyCreateRouter operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyCreateRouter for more information on using the NiftyCreateRouter
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyCreateRouterRequest method.
//    req, resp := client.NiftyCreateRouterRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyCreateRouter
func (c *Computing) NiftyCreateRouterRequest(input *NiftyCreateRouterInput) (req *request.Request, output *NiftyCreateRouterOutput) {
	op := &request.Operation{
		Name:       opNiftyCreateRouter,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyCreateRouterInput{}
	}

	output = &NiftyCreateRouterOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyCreateRouter API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyCreateRouter for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyCreateRouter
func (c *Computing) NiftyCreateRouter(input *NiftyCreateRouterInput) (*NiftyCreateRouterOutput, error) {
	req, out := c.NiftyCreateRouterRequest(input)
	return out, req.Send()
}

// NiftyCreateRouterWithContext is the same as NiftyCreateRouter with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyCreateRouter for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyCreateRouterWithContext(ctx nifcloud.Context, input *NiftyCreateRouterInput, opts ...request.Option) (*NiftyCreateRouterOutput, error) {
	req, out := c.NiftyCreateRouterRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyCreateSeparateInstanceRule = "NiftyCreateSeparateInstanceRule"

// NiftyCreateSeparateInstanceRuleRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyCreateSeparateInstanceRule operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyCreateSeparateInstanceRule for more information on using the NiftyCreateSeparateInstanceRule
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyCreateSeparateInstanceRuleRequest method.
//    req, resp := client.NiftyCreateSeparateInstanceRuleRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyCreateSeparateInstanceRule
func (c *Computing) NiftyCreateSeparateInstanceRuleRequest(input *NiftyCreateSeparateInstanceRuleInput) (req *request.Request, output *NiftyCreateSeparateInstanceRuleOutput) {
	op := &request.Operation{
		Name:       opNiftyCreateSeparateInstanceRule,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyCreateSeparateInstanceRuleInput{}
	}

	output = &NiftyCreateSeparateInstanceRuleOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyCreateSeparateInstanceRule API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyCreateSeparateInstanceRule for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyCreateSeparateInstanceRule
func (c *Computing) NiftyCreateSeparateInstanceRule(input *NiftyCreateSeparateInstanceRuleInput) (*NiftyCreateSeparateInstanceRuleOutput, error) {
	req, out := c.NiftyCreateSeparateInstanceRuleRequest(input)
	return out, req.Send()
}

// NiftyCreateSeparateInstanceRuleWithContext is the same as NiftyCreateSeparateInstanceRule with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyCreateSeparateInstanceRule for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyCreateSeparateInstanceRuleWithContext(ctx nifcloud.Context, input *NiftyCreateSeparateInstanceRuleInput, opts ...request.Option) (*NiftyCreateSeparateInstanceRuleOutput, error) {
	req, out := c.NiftyCreateSeparateInstanceRuleRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyCreateWebProxy = "NiftyCreateWebProxy"

// NiftyCreateWebProxyRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyCreateWebProxy operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyCreateWebProxy for more information on using the NiftyCreateWebProxy
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyCreateWebProxyRequest method.
//    req, resp := client.NiftyCreateWebProxyRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyCreateWebProxy
func (c *Computing) NiftyCreateWebProxyRequest(input *NiftyCreateWebProxyInput) (req *request.Request, output *NiftyCreateWebProxyOutput) {
	op := &request.Operation{
		Name:       opNiftyCreateWebProxy,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyCreateWebProxyInput{}
	}

	output = &NiftyCreateWebProxyOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyCreateWebProxy API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyCreateWebProxy for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyCreateWebProxy
func (c *Computing) NiftyCreateWebProxy(input *NiftyCreateWebProxyInput) (*NiftyCreateWebProxyOutput, error) {
	req, out := c.NiftyCreateWebProxyRequest(input)
	return out, req.Send()
}

// NiftyCreateWebProxyWithContext is the same as NiftyCreateWebProxy with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyCreateWebProxy for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyCreateWebProxyWithContext(ctx nifcloud.Context, input *NiftyCreateWebProxyInput, opts ...request.Option) (*NiftyCreateWebProxyOutput, error) {
	req, out := c.NiftyCreateWebProxyRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyDeleteAlarm = "NiftyDeleteAlarm"

// NiftyDeleteAlarmRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyDeleteAlarm operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyDeleteAlarm for more information on using the NiftyDeleteAlarm
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyDeleteAlarmRequest method.
//    req, resp := client.NiftyDeleteAlarmRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDeleteAlarm
func (c *Computing) NiftyDeleteAlarmRequest(input *NiftyDeleteAlarmInput) (req *request.Request, output *NiftyDeleteAlarmOutput) {
	op := &request.Operation{
		Name:       opNiftyDeleteAlarm,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyDeleteAlarmInput{}
	}

	output = &NiftyDeleteAlarmOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyDeleteAlarm API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyDeleteAlarm for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDeleteAlarm
func (c *Computing) NiftyDeleteAlarm(input *NiftyDeleteAlarmInput) (*NiftyDeleteAlarmOutput, error) {
	req, out := c.NiftyDeleteAlarmRequest(input)
	return out, req.Send()
}

// NiftyDeleteAlarmWithContext is the same as NiftyDeleteAlarm with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyDeleteAlarm for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyDeleteAlarmWithContext(ctx nifcloud.Context, input *NiftyDeleteAlarmInput, opts ...request.Option) (*NiftyDeleteAlarmOutput, error) {
	req, out := c.NiftyDeleteAlarmRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyDeleteAutoScalingGroup = "NiftyDeleteAutoScalingGroup"

// NiftyDeleteAutoScalingGroupRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyDeleteAutoScalingGroup operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyDeleteAutoScalingGroup for more information on using the NiftyDeleteAutoScalingGroup
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyDeleteAutoScalingGroupRequest method.
//    req, resp := client.NiftyDeleteAutoScalingGroupRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDeleteAutoScalingGroup
func (c *Computing) NiftyDeleteAutoScalingGroupRequest(input *NiftyDeleteAutoScalingGroupInput) (req *request.Request, output *NiftyDeleteAutoScalingGroupOutput) {
	op := &request.Operation{
		Name:       opNiftyDeleteAutoScalingGroup,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyDeleteAutoScalingGroupInput{}
	}

	output = &NiftyDeleteAutoScalingGroupOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyDeleteAutoScalingGroup API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyDeleteAutoScalingGroup for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDeleteAutoScalingGroup
func (c *Computing) NiftyDeleteAutoScalingGroup(input *NiftyDeleteAutoScalingGroupInput) (*NiftyDeleteAutoScalingGroupOutput, error) {
	req, out := c.NiftyDeleteAutoScalingGroupRequest(input)
	return out, req.Send()
}

// NiftyDeleteAutoScalingGroupWithContext is the same as NiftyDeleteAutoScalingGroup with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyDeleteAutoScalingGroup for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyDeleteAutoScalingGroupWithContext(ctx nifcloud.Context, input *NiftyDeleteAutoScalingGroupInput, opts ...request.Option) (*NiftyDeleteAutoScalingGroupOutput, error) {
	req, out := c.NiftyDeleteAutoScalingGroupRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyDeleteDhcpConfig = "NiftyDeleteDhcpConfig"

// NiftyDeleteDhcpConfigRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyDeleteDhcpConfig operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyDeleteDhcpConfig for more information on using the NiftyDeleteDhcpConfig
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyDeleteDhcpConfigRequest method.
//    req, resp := client.NiftyDeleteDhcpConfigRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDeleteDhcpConfig
func (c *Computing) NiftyDeleteDhcpConfigRequest(input *NiftyDeleteDhcpConfigInput) (req *request.Request, output *NiftyDeleteDhcpConfigOutput) {
	op := &request.Operation{
		Name:       opNiftyDeleteDhcpConfig,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyDeleteDhcpConfigInput{}
	}

	output = &NiftyDeleteDhcpConfigOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyDeleteDhcpConfig API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyDeleteDhcpConfig for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDeleteDhcpConfig
func (c *Computing) NiftyDeleteDhcpConfig(input *NiftyDeleteDhcpConfigInput) (*NiftyDeleteDhcpConfigOutput, error) {
	req, out := c.NiftyDeleteDhcpConfigRequest(input)
	return out, req.Send()
}

// NiftyDeleteDhcpConfigWithContext is the same as NiftyDeleteDhcpConfig with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyDeleteDhcpConfig for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyDeleteDhcpConfigWithContext(ctx nifcloud.Context, input *NiftyDeleteDhcpConfigInput, opts ...request.Option) (*NiftyDeleteDhcpConfigOutput, error) {
	req, out := c.NiftyDeleteDhcpConfigRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyDeleteDhcpIpAddressPool = "NiftyDeleteDhcpIpAddressPool"

// NiftyDeleteDhcpIpAddressPoolRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyDeleteDhcpIpAddressPool operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyDeleteDhcpIpAddressPool for more information on using the NiftyDeleteDhcpIpAddressPool
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyDeleteDhcpIpAddressPoolRequest method.
//    req, resp := client.NiftyDeleteDhcpIpAddressPoolRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDeleteDhcpIpAddressPool
func (c *Computing) NiftyDeleteDhcpIpAddressPoolRequest(input *NiftyDeleteDhcpIpAddressPoolInput) (req *request.Request, output *NiftyDeleteDhcpIpAddressPoolOutput) {
	op := &request.Operation{
		Name:       opNiftyDeleteDhcpIpAddressPool,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyDeleteDhcpIpAddressPoolInput{}
	}

	output = &NiftyDeleteDhcpIpAddressPoolOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyDeleteDhcpIpAddressPool API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyDeleteDhcpIpAddressPool for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDeleteDhcpIpAddressPool
func (c *Computing) NiftyDeleteDhcpIpAddressPool(input *NiftyDeleteDhcpIpAddressPoolInput) (*NiftyDeleteDhcpIpAddressPoolOutput, error) {
	req, out := c.NiftyDeleteDhcpIpAddressPoolRequest(input)
	return out, req.Send()
}

// NiftyDeleteDhcpIpAddressPoolWithContext is the same as NiftyDeleteDhcpIpAddressPool with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyDeleteDhcpIpAddressPool for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyDeleteDhcpIpAddressPoolWithContext(ctx nifcloud.Context, input *NiftyDeleteDhcpIpAddressPoolInput, opts ...request.Option) (*NiftyDeleteDhcpIpAddressPoolOutput, error) {
	req, out := c.NiftyDeleteDhcpIpAddressPoolRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyDeleteDhcpStaticMapping = "NiftyDeleteDhcpStaticMapping"

// NiftyDeleteDhcpStaticMappingRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyDeleteDhcpStaticMapping operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyDeleteDhcpStaticMapping for more information on using the NiftyDeleteDhcpStaticMapping
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyDeleteDhcpStaticMappingRequest method.
//    req, resp := client.NiftyDeleteDhcpStaticMappingRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDeleteDhcpStaticMapping
func (c *Computing) NiftyDeleteDhcpStaticMappingRequest(input *NiftyDeleteDhcpStaticMappingInput) (req *request.Request, output *NiftyDeleteDhcpStaticMappingOutput) {
	op := &request.Operation{
		Name:       opNiftyDeleteDhcpStaticMapping,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyDeleteDhcpStaticMappingInput{}
	}

	output = &NiftyDeleteDhcpStaticMappingOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyDeleteDhcpStaticMapping API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyDeleteDhcpStaticMapping for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDeleteDhcpStaticMapping
func (c *Computing) NiftyDeleteDhcpStaticMapping(input *NiftyDeleteDhcpStaticMappingInput) (*NiftyDeleteDhcpStaticMappingOutput, error) {
	req, out := c.NiftyDeleteDhcpStaticMappingRequest(input)
	return out, req.Send()
}

// NiftyDeleteDhcpStaticMappingWithContext is the same as NiftyDeleteDhcpStaticMapping with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyDeleteDhcpStaticMapping for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyDeleteDhcpStaticMappingWithContext(ctx nifcloud.Context, input *NiftyDeleteDhcpStaticMappingInput, opts ...request.Option) (*NiftyDeleteDhcpStaticMappingOutput, error) {
	req, out := c.NiftyDeleteDhcpStaticMappingRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyDeleteElasticLoadBalancer = "NiftyDeleteElasticLoadBalancer"

// NiftyDeleteElasticLoadBalancerRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyDeleteElasticLoadBalancer operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyDeleteElasticLoadBalancer for more information on using the NiftyDeleteElasticLoadBalancer
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyDeleteElasticLoadBalancerRequest method.
//    req, resp := client.NiftyDeleteElasticLoadBalancerRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDeleteElasticLoadBalancer
func (c *Computing) NiftyDeleteElasticLoadBalancerRequest(input *NiftyDeleteElasticLoadBalancerInput) (req *request.Request, output *NiftyDeleteElasticLoadBalancerOutput) {
	op := &request.Operation{
		Name:       opNiftyDeleteElasticLoadBalancer,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyDeleteElasticLoadBalancerInput{}
	}

	output = &NiftyDeleteElasticLoadBalancerOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyDeleteElasticLoadBalancer API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyDeleteElasticLoadBalancer for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDeleteElasticLoadBalancer
func (c *Computing) NiftyDeleteElasticLoadBalancer(input *NiftyDeleteElasticLoadBalancerInput) (*NiftyDeleteElasticLoadBalancerOutput, error) {
	req, out := c.NiftyDeleteElasticLoadBalancerRequest(input)
	return out, req.Send()
}

// NiftyDeleteElasticLoadBalancerWithContext is the same as NiftyDeleteElasticLoadBalancer with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyDeleteElasticLoadBalancer for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyDeleteElasticLoadBalancerWithContext(ctx nifcloud.Context, input *NiftyDeleteElasticLoadBalancerInput, opts ...request.Option) (*NiftyDeleteElasticLoadBalancerOutput, error) {
	req, out := c.NiftyDeleteElasticLoadBalancerRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyDeleteInstanceSnapshot = "NiftyDeleteInstanceSnapshot"

// NiftyDeleteInstanceSnapshotRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyDeleteInstanceSnapshot operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyDeleteInstanceSnapshot for more information on using the NiftyDeleteInstanceSnapshot
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyDeleteInstanceSnapshotRequest method.
//    req, resp := client.NiftyDeleteInstanceSnapshotRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDeleteInstanceSnapshot
func (c *Computing) NiftyDeleteInstanceSnapshotRequest(input *NiftyDeleteInstanceSnapshotInput) (req *request.Request, output *NiftyDeleteInstanceSnapshotOutput) {
	op := &request.Operation{
		Name:       opNiftyDeleteInstanceSnapshot,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyDeleteInstanceSnapshotInput{}
	}

	output = &NiftyDeleteInstanceSnapshotOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyDeleteInstanceSnapshot API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyDeleteInstanceSnapshot for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDeleteInstanceSnapshot
func (c *Computing) NiftyDeleteInstanceSnapshot(input *NiftyDeleteInstanceSnapshotInput) (*NiftyDeleteInstanceSnapshotOutput, error) {
	req, out := c.NiftyDeleteInstanceSnapshotRequest(input)
	return out, req.Send()
}

// NiftyDeleteInstanceSnapshotWithContext is the same as NiftyDeleteInstanceSnapshot with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyDeleteInstanceSnapshot for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyDeleteInstanceSnapshotWithContext(ctx nifcloud.Context, input *NiftyDeleteInstanceSnapshotInput, opts ...request.Option) (*NiftyDeleteInstanceSnapshotOutput, error) {
	req, out := c.NiftyDeleteInstanceSnapshotRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyDeleteNatRule = "NiftyDeleteNatRule"

// NiftyDeleteNatRuleRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyDeleteNatRule operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyDeleteNatRule for more information on using the NiftyDeleteNatRule
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyDeleteNatRuleRequest method.
//    req, resp := client.NiftyDeleteNatRuleRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDeleteNatRule
func (c *Computing) NiftyDeleteNatRuleRequest(input *NiftyDeleteNatRuleInput) (req *request.Request, output *NiftyDeleteNatRuleOutput) {
	op := &request.Operation{
		Name:       opNiftyDeleteNatRule,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyDeleteNatRuleInput{}
	}

	output = &NiftyDeleteNatRuleOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyDeleteNatRule API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyDeleteNatRule for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDeleteNatRule
func (c *Computing) NiftyDeleteNatRule(input *NiftyDeleteNatRuleInput) (*NiftyDeleteNatRuleOutput, error) {
	req, out := c.NiftyDeleteNatRuleRequest(input)
	return out, req.Send()
}

// NiftyDeleteNatRuleWithContext is the same as NiftyDeleteNatRule with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyDeleteNatRule for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyDeleteNatRuleWithContext(ctx nifcloud.Context, input *NiftyDeleteNatRuleInput, opts ...request.Option) (*NiftyDeleteNatRuleOutput, error) {
	req, out := c.NiftyDeleteNatRuleRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyDeleteNatTable = "NiftyDeleteNatTable"

// NiftyDeleteNatTableRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyDeleteNatTable operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyDeleteNatTable for more information on using the NiftyDeleteNatTable
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyDeleteNatTableRequest method.
//    req, resp := client.NiftyDeleteNatTableRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDeleteNatTable
func (c *Computing) NiftyDeleteNatTableRequest(input *NiftyDeleteNatTableInput) (req *request.Request, output *NiftyDeleteNatTableOutput) {
	op := &request.Operation{
		Name:       opNiftyDeleteNatTable,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyDeleteNatTableInput{}
	}

	output = &NiftyDeleteNatTableOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyDeleteNatTable API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyDeleteNatTable for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDeleteNatTable
func (c *Computing) NiftyDeleteNatTable(input *NiftyDeleteNatTableInput) (*NiftyDeleteNatTableOutput, error) {
	req, out := c.NiftyDeleteNatTableRequest(input)
	return out, req.Send()
}

// NiftyDeleteNatTableWithContext is the same as NiftyDeleteNatTable with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyDeleteNatTable for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyDeleteNatTableWithContext(ctx nifcloud.Context, input *NiftyDeleteNatTableInput, opts ...request.Option) (*NiftyDeleteNatTableOutput, error) {
	req, out := c.NiftyDeleteNatTableRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyDeletePrivateLan = "NiftyDeletePrivateLan"

// NiftyDeletePrivateLanRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyDeletePrivateLan operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyDeletePrivateLan for more information on using the NiftyDeletePrivateLan
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyDeletePrivateLanRequest method.
//    req, resp := client.NiftyDeletePrivateLanRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDeletePrivateLan
func (c *Computing) NiftyDeletePrivateLanRequest(input *NiftyDeletePrivateLanInput) (req *request.Request, output *NiftyDeletePrivateLanOutput) {
	op := &request.Operation{
		Name:       opNiftyDeletePrivateLan,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyDeletePrivateLanInput{}
	}

	output = &NiftyDeletePrivateLanOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyDeletePrivateLan API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyDeletePrivateLan for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDeletePrivateLan
func (c *Computing) NiftyDeletePrivateLan(input *NiftyDeletePrivateLanInput) (*NiftyDeletePrivateLanOutput, error) {
	req, out := c.NiftyDeletePrivateLanRequest(input)
	return out, req.Send()
}

// NiftyDeletePrivateLanWithContext is the same as NiftyDeletePrivateLan with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyDeletePrivateLan for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyDeletePrivateLanWithContext(ctx nifcloud.Context, input *NiftyDeletePrivateLanInput, opts ...request.Option) (*NiftyDeletePrivateLanOutput, error) {
	req, out := c.NiftyDeletePrivateLanRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyDeleteRouter = "NiftyDeleteRouter"

// NiftyDeleteRouterRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyDeleteRouter operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyDeleteRouter for more information on using the NiftyDeleteRouter
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyDeleteRouterRequest method.
//    req, resp := client.NiftyDeleteRouterRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDeleteRouter
func (c *Computing) NiftyDeleteRouterRequest(input *NiftyDeleteRouterInput) (req *request.Request, output *NiftyDeleteRouterOutput) {
	op := &request.Operation{
		Name:       opNiftyDeleteRouter,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyDeleteRouterInput{}
	}

	output = &NiftyDeleteRouterOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyDeleteRouter API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyDeleteRouter for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDeleteRouter
func (c *Computing) NiftyDeleteRouter(input *NiftyDeleteRouterInput) (*NiftyDeleteRouterOutput, error) {
	req, out := c.NiftyDeleteRouterRequest(input)
	return out, req.Send()
}

// NiftyDeleteRouterWithContext is the same as NiftyDeleteRouter with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyDeleteRouter for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyDeleteRouterWithContext(ctx nifcloud.Context, input *NiftyDeleteRouterInput, opts ...request.Option) (*NiftyDeleteRouterOutput, error) {
	req, out := c.NiftyDeleteRouterRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyDeleteSeparateInstanceRule = "NiftyDeleteSeparateInstanceRule"

// NiftyDeleteSeparateInstanceRuleRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyDeleteSeparateInstanceRule operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyDeleteSeparateInstanceRule for more information on using the NiftyDeleteSeparateInstanceRule
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyDeleteSeparateInstanceRuleRequest method.
//    req, resp := client.NiftyDeleteSeparateInstanceRuleRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDeleteSeparateInstanceRule
func (c *Computing) NiftyDeleteSeparateInstanceRuleRequest(input *NiftyDeleteSeparateInstanceRuleInput) (req *request.Request, output *NiftyDeleteSeparateInstanceRuleOutput) {
	op := &request.Operation{
		Name:       opNiftyDeleteSeparateInstanceRule,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyDeleteSeparateInstanceRuleInput{}
	}

	output = &NiftyDeleteSeparateInstanceRuleOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyDeleteSeparateInstanceRule API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyDeleteSeparateInstanceRule for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDeleteSeparateInstanceRule
func (c *Computing) NiftyDeleteSeparateInstanceRule(input *NiftyDeleteSeparateInstanceRuleInput) (*NiftyDeleteSeparateInstanceRuleOutput, error) {
	req, out := c.NiftyDeleteSeparateInstanceRuleRequest(input)
	return out, req.Send()
}

// NiftyDeleteSeparateInstanceRuleWithContext is the same as NiftyDeleteSeparateInstanceRule with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyDeleteSeparateInstanceRule for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyDeleteSeparateInstanceRuleWithContext(ctx nifcloud.Context, input *NiftyDeleteSeparateInstanceRuleInput, opts ...request.Option) (*NiftyDeleteSeparateInstanceRuleOutput, error) {
	req, out := c.NiftyDeleteSeparateInstanceRuleRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyDeleteWebProxy = "NiftyDeleteWebProxy"

// NiftyDeleteWebProxyRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyDeleteWebProxy operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyDeleteWebProxy for more information on using the NiftyDeleteWebProxy
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyDeleteWebProxyRequest method.
//    req, resp := client.NiftyDeleteWebProxyRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDeleteWebProxy
func (c *Computing) NiftyDeleteWebProxyRequest(input *NiftyDeleteWebProxyInput) (req *request.Request, output *NiftyDeleteWebProxyOutput) {
	op := &request.Operation{
		Name:       opNiftyDeleteWebProxy,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyDeleteWebProxyInput{}
	}

	output = &NiftyDeleteWebProxyOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyDeleteWebProxy API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyDeleteWebProxy for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDeleteWebProxy
func (c *Computing) NiftyDeleteWebProxy(input *NiftyDeleteWebProxyInput) (*NiftyDeleteWebProxyOutput, error) {
	req, out := c.NiftyDeleteWebProxyRequest(input)
	return out, req.Send()
}

// NiftyDeleteWebProxyWithContext is the same as NiftyDeleteWebProxy with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyDeleteWebProxy for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyDeleteWebProxyWithContext(ctx nifcloud.Context, input *NiftyDeleteWebProxyInput, opts ...request.Option) (*NiftyDeleteWebProxyOutput, error) {
	req, out := c.NiftyDeleteWebProxyRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyDeregisterInstancesFromElasticLoadBalancer = "NiftyDeregisterInstancesFromElasticLoadBalancer"

// NiftyDeregisterInstancesFromElasticLoadBalancerRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyDeregisterInstancesFromElasticLoadBalancer operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyDeregisterInstancesFromElasticLoadBalancer for more information on using the NiftyDeregisterInstancesFromElasticLoadBalancer
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyDeregisterInstancesFromElasticLoadBalancerRequest method.
//    req, resp := client.NiftyDeregisterInstancesFromElasticLoadBalancerRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDeregisterInstancesFromElasticLoadBalancer
func (c *Computing) NiftyDeregisterInstancesFromElasticLoadBalancerRequest(input *NiftyDeregisterInstancesFromElasticLoadBalancerInput) (req *request.Request, output *NiftyDeregisterInstancesFromElasticLoadBalancerOutput) {
	op := &request.Operation{
		Name:       opNiftyDeregisterInstancesFromElasticLoadBalancer,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyDeregisterInstancesFromElasticLoadBalancerInput{}
	}

	output = &NiftyDeregisterInstancesFromElasticLoadBalancerOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyDeregisterInstancesFromElasticLoadBalancer API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyDeregisterInstancesFromElasticLoadBalancer for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDeregisterInstancesFromElasticLoadBalancer
func (c *Computing) NiftyDeregisterInstancesFromElasticLoadBalancer(input *NiftyDeregisterInstancesFromElasticLoadBalancerInput) (*NiftyDeregisterInstancesFromElasticLoadBalancerOutput, error) {
	req, out := c.NiftyDeregisterInstancesFromElasticLoadBalancerRequest(input)
	return out, req.Send()
}

// NiftyDeregisterInstancesFromElasticLoadBalancerWithContext is the same as NiftyDeregisterInstancesFromElasticLoadBalancer with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyDeregisterInstancesFromElasticLoadBalancer for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyDeregisterInstancesFromElasticLoadBalancerWithContext(ctx nifcloud.Context, input *NiftyDeregisterInstancesFromElasticLoadBalancerInput, opts ...request.Option) (*NiftyDeregisterInstancesFromElasticLoadBalancerOutput, error) {
	req, out := c.NiftyDeregisterInstancesFromElasticLoadBalancerRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyDeregisterInstancesFromSeparateInstanceRule = "NiftyDeregisterInstancesFromSeparateInstanceRule"

// NiftyDeregisterInstancesFromSeparateInstanceRuleRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyDeregisterInstancesFromSeparateInstanceRule operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyDeregisterInstancesFromSeparateInstanceRule for more information on using the NiftyDeregisterInstancesFromSeparateInstanceRule
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyDeregisterInstancesFromSeparateInstanceRuleRequest method.
//    req, resp := client.NiftyDeregisterInstancesFromSeparateInstanceRuleRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDeregisterInstancesFromSeparateInstanceRule
func (c *Computing) NiftyDeregisterInstancesFromSeparateInstanceRuleRequest(input *NiftyDeregisterInstancesFromSeparateInstanceRuleInput) (req *request.Request, output *NiftyDeregisterInstancesFromSeparateInstanceRuleOutput) {
	op := &request.Operation{
		Name:       opNiftyDeregisterInstancesFromSeparateInstanceRule,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyDeregisterInstancesFromSeparateInstanceRuleInput{}
	}

	output = &NiftyDeregisterInstancesFromSeparateInstanceRuleOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyDeregisterInstancesFromSeparateInstanceRule API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyDeregisterInstancesFromSeparateInstanceRule for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDeregisterInstancesFromSeparateInstanceRule
func (c *Computing) NiftyDeregisterInstancesFromSeparateInstanceRule(input *NiftyDeregisterInstancesFromSeparateInstanceRuleInput) (*NiftyDeregisterInstancesFromSeparateInstanceRuleOutput, error) {
	req, out := c.NiftyDeregisterInstancesFromSeparateInstanceRuleRequest(input)
	return out, req.Send()
}

// NiftyDeregisterInstancesFromSeparateInstanceRuleWithContext is the same as NiftyDeregisterInstancesFromSeparateInstanceRule with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyDeregisterInstancesFromSeparateInstanceRule for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyDeregisterInstancesFromSeparateInstanceRuleWithContext(ctx nifcloud.Context, input *NiftyDeregisterInstancesFromSeparateInstanceRuleInput, opts ...request.Option) (*NiftyDeregisterInstancesFromSeparateInstanceRuleOutput, error) {
	req, out := c.NiftyDeregisterInstancesFromSeparateInstanceRuleRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyDeregisterRoutersFromSecurityGroup = "NiftyDeregisterRoutersFromSecurityGroup"

// NiftyDeregisterRoutersFromSecurityGroupRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyDeregisterRoutersFromSecurityGroup operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyDeregisterRoutersFromSecurityGroup for more information on using the NiftyDeregisterRoutersFromSecurityGroup
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyDeregisterRoutersFromSecurityGroupRequest method.
//    req, resp := client.NiftyDeregisterRoutersFromSecurityGroupRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDeregisterRoutersFromSecurityGroup
func (c *Computing) NiftyDeregisterRoutersFromSecurityGroupRequest(input *NiftyDeregisterRoutersFromSecurityGroupInput) (req *request.Request, output *NiftyDeregisterRoutersFromSecurityGroupOutput) {
	op := &request.Operation{
		Name:       opNiftyDeregisterRoutersFromSecurityGroup,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyDeregisterRoutersFromSecurityGroupInput{}
	}

	output = &NiftyDeregisterRoutersFromSecurityGroupOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyDeregisterRoutersFromSecurityGroup API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyDeregisterRoutersFromSecurityGroup for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDeregisterRoutersFromSecurityGroup
func (c *Computing) NiftyDeregisterRoutersFromSecurityGroup(input *NiftyDeregisterRoutersFromSecurityGroupInput) (*NiftyDeregisterRoutersFromSecurityGroupOutput, error) {
	req, out := c.NiftyDeregisterRoutersFromSecurityGroupRequest(input)
	return out, req.Send()
}

// NiftyDeregisterRoutersFromSecurityGroupWithContext is the same as NiftyDeregisterRoutersFromSecurityGroup with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyDeregisterRoutersFromSecurityGroup for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyDeregisterRoutersFromSecurityGroupWithContext(ctx nifcloud.Context, input *NiftyDeregisterRoutersFromSecurityGroupInput, opts ...request.Option) (*NiftyDeregisterRoutersFromSecurityGroupOutput, error) {
	req, out := c.NiftyDeregisterRoutersFromSecurityGroupRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyDeregisterVpnGatewaysFromSecurityGroup = "NiftyDeregisterVpnGatewaysFromSecurityGroup"

// NiftyDeregisterVpnGatewaysFromSecurityGroupRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyDeregisterVpnGatewaysFromSecurityGroup operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyDeregisterVpnGatewaysFromSecurityGroup for more information on using the NiftyDeregisterVpnGatewaysFromSecurityGroup
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyDeregisterVpnGatewaysFromSecurityGroupRequest method.
//    req, resp := client.NiftyDeregisterVpnGatewaysFromSecurityGroupRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDeregisterVpnGatewaysFromSecurityGroup
func (c *Computing) NiftyDeregisterVpnGatewaysFromSecurityGroupRequest(input *NiftyDeregisterVpnGatewaysFromSecurityGroupInput) (req *request.Request, output *NiftyDeregisterVpnGatewaysFromSecurityGroupOutput) {
	op := &request.Operation{
		Name:       opNiftyDeregisterVpnGatewaysFromSecurityGroup,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyDeregisterVpnGatewaysFromSecurityGroupInput{}
	}

	output = &NiftyDeregisterVpnGatewaysFromSecurityGroupOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyDeregisterVpnGatewaysFromSecurityGroup API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyDeregisterVpnGatewaysFromSecurityGroup for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDeregisterVpnGatewaysFromSecurityGroup
func (c *Computing) NiftyDeregisterVpnGatewaysFromSecurityGroup(input *NiftyDeregisterVpnGatewaysFromSecurityGroupInput) (*NiftyDeregisterVpnGatewaysFromSecurityGroupOutput, error) {
	req, out := c.NiftyDeregisterVpnGatewaysFromSecurityGroupRequest(input)
	return out, req.Send()
}

// NiftyDeregisterVpnGatewaysFromSecurityGroupWithContext is the same as NiftyDeregisterVpnGatewaysFromSecurityGroup with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyDeregisterVpnGatewaysFromSecurityGroup for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyDeregisterVpnGatewaysFromSecurityGroupWithContext(ctx nifcloud.Context, input *NiftyDeregisterVpnGatewaysFromSecurityGroupInput, opts ...request.Option) (*NiftyDeregisterVpnGatewaysFromSecurityGroupOutput, error) {
	req, out := c.NiftyDeregisterVpnGatewaysFromSecurityGroupRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyDescribeAlarmHistory = "NiftyDescribeAlarmHistory"

// NiftyDescribeAlarmHistoryRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyDescribeAlarmHistory operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyDescribeAlarmHistory for more information on using the NiftyDescribeAlarmHistory
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyDescribeAlarmHistoryRequest method.
//    req, resp := client.NiftyDescribeAlarmHistoryRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDescribeAlarmHistory
func (c *Computing) NiftyDescribeAlarmHistoryRequest(input *NiftyDescribeAlarmHistoryInput) (req *request.Request, output *NiftyDescribeAlarmHistoryOutput) {
	op := &request.Operation{
		Name:       opNiftyDescribeAlarmHistory,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyDescribeAlarmHistoryInput{}
	}

	output = &NiftyDescribeAlarmHistoryOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyDescribeAlarmHistory API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyDescribeAlarmHistory for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDescribeAlarmHistory
func (c *Computing) NiftyDescribeAlarmHistory(input *NiftyDescribeAlarmHistoryInput) (*NiftyDescribeAlarmHistoryOutput, error) {
	req, out := c.NiftyDescribeAlarmHistoryRequest(input)
	return out, req.Send()
}

// NiftyDescribeAlarmHistoryWithContext is the same as NiftyDescribeAlarmHistory with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyDescribeAlarmHistory for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyDescribeAlarmHistoryWithContext(ctx nifcloud.Context, input *NiftyDescribeAlarmHistoryInput, opts ...request.Option) (*NiftyDescribeAlarmHistoryOutput, error) {
	req, out := c.NiftyDescribeAlarmHistoryRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyDescribeAlarmRulesActivities = "NiftyDescribeAlarmRulesActivities"

// NiftyDescribeAlarmRulesActivitiesRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyDescribeAlarmRulesActivities operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyDescribeAlarmRulesActivities for more information on using the NiftyDescribeAlarmRulesActivities
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyDescribeAlarmRulesActivitiesRequest method.
//    req, resp := client.NiftyDescribeAlarmRulesActivitiesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDescribeAlarmRulesActivities
func (c *Computing) NiftyDescribeAlarmRulesActivitiesRequest(input *NiftyDescribeAlarmRulesActivitiesInput) (req *request.Request, output *NiftyDescribeAlarmRulesActivitiesOutput) {
	op := &request.Operation{
		Name:       opNiftyDescribeAlarmRulesActivities,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyDescribeAlarmRulesActivitiesInput{}
	}

	output = &NiftyDescribeAlarmRulesActivitiesOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyDescribeAlarmRulesActivities API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyDescribeAlarmRulesActivities for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDescribeAlarmRulesActivities
func (c *Computing) NiftyDescribeAlarmRulesActivities(input *NiftyDescribeAlarmRulesActivitiesInput) (*NiftyDescribeAlarmRulesActivitiesOutput, error) {
	req, out := c.NiftyDescribeAlarmRulesActivitiesRequest(input)
	return out, req.Send()
}

// NiftyDescribeAlarmRulesActivitiesWithContext is the same as NiftyDescribeAlarmRulesActivities with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyDescribeAlarmRulesActivities for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyDescribeAlarmRulesActivitiesWithContext(ctx nifcloud.Context, input *NiftyDescribeAlarmRulesActivitiesInput, opts ...request.Option) (*NiftyDescribeAlarmRulesActivitiesOutput, error) {
	req, out := c.NiftyDescribeAlarmRulesActivitiesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyDescribeAlarms = "NiftyDescribeAlarms"

// NiftyDescribeAlarmsRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyDescribeAlarms operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyDescribeAlarms for more information on using the NiftyDescribeAlarms
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyDescribeAlarmsRequest method.
//    req, resp := client.NiftyDescribeAlarmsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDescribeAlarms
func (c *Computing) NiftyDescribeAlarmsRequest(input *NiftyDescribeAlarmsInput) (req *request.Request, output *NiftyDescribeAlarmsOutput) {
	op := &request.Operation{
		Name:       opNiftyDescribeAlarms,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyDescribeAlarmsInput{}
	}

	output = &NiftyDescribeAlarmsOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyDescribeAlarms API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyDescribeAlarms for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDescribeAlarms
func (c *Computing) NiftyDescribeAlarms(input *NiftyDescribeAlarmsInput) (*NiftyDescribeAlarmsOutput, error) {
	req, out := c.NiftyDescribeAlarmsRequest(input)
	return out, req.Send()
}

// NiftyDescribeAlarmsWithContext is the same as NiftyDescribeAlarms with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyDescribeAlarms for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyDescribeAlarmsWithContext(ctx nifcloud.Context, input *NiftyDescribeAlarmsInput, opts ...request.Option) (*NiftyDescribeAlarmsOutput, error) {
	req, out := c.NiftyDescribeAlarmsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyDescribeAlarmsPartitions = "NiftyDescribeAlarmsPartitions"

// NiftyDescribeAlarmsPartitionsRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyDescribeAlarmsPartitions operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyDescribeAlarmsPartitions for more information on using the NiftyDescribeAlarmsPartitions
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyDescribeAlarmsPartitionsRequest method.
//    req, resp := client.NiftyDescribeAlarmsPartitionsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDescribeAlarmsPartitions
func (c *Computing) NiftyDescribeAlarmsPartitionsRequest(input *NiftyDescribeAlarmsPartitionsInput) (req *request.Request, output *NiftyDescribeAlarmsPartitionsOutput) {
	op := &request.Operation{
		Name:       opNiftyDescribeAlarmsPartitions,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyDescribeAlarmsPartitionsInput{}
	}

	output = &NiftyDescribeAlarmsPartitionsOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyDescribeAlarmsPartitions API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyDescribeAlarmsPartitions for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDescribeAlarmsPartitions
func (c *Computing) NiftyDescribeAlarmsPartitions(input *NiftyDescribeAlarmsPartitionsInput) (*NiftyDescribeAlarmsPartitionsOutput, error) {
	req, out := c.NiftyDescribeAlarmsPartitionsRequest(input)
	return out, req.Send()
}

// NiftyDescribeAlarmsPartitionsWithContext is the same as NiftyDescribeAlarmsPartitions with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyDescribeAlarmsPartitions for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyDescribeAlarmsPartitionsWithContext(ctx nifcloud.Context, input *NiftyDescribeAlarmsPartitionsInput, opts ...request.Option) (*NiftyDescribeAlarmsPartitionsOutput, error) {
	req, out := c.NiftyDescribeAlarmsPartitionsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyDescribeAutoScalingGroups = "NiftyDescribeAutoScalingGroups"

// NiftyDescribeAutoScalingGroupsRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyDescribeAutoScalingGroups operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyDescribeAutoScalingGroups for more information on using the NiftyDescribeAutoScalingGroups
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyDescribeAutoScalingGroupsRequest method.
//    req, resp := client.NiftyDescribeAutoScalingGroupsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDescribeAutoScalingGroups
func (c *Computing) NiftyDescribeAutoScalingGroupsRequest(input *NiftyDescribeAutoScalingGroupsInput) (req *request.Request, output *NiftyDescribeAutoScalingGroupsOutput) {
	op := &request.Operation{
		Name:       opNiftyDescribeAutoScalingGroups,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyDescribeAutoScalingGroupsInput{}
	}

	output = &NiftyDescribeAutoScalingGroupsOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyDescribeAutoScalingGroups API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyDescribeAutoScalingGroups for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDescribeAutoScalingGroups
func (c *Computing) NiftyDescribeAutoScalingGroups(input *NiftyDescribeAutoScalingGroupsInput) (*NiftyDescribeAutoScalingGroupsOutput, error) {
	req, out := c.NiftyDescribeAutoScalingGroupsRequest(input)
	return out, req.Send()
}

// NiftyDescribeAutoScalingGroupsWithContext is the same as NiftyDescribeAutoScalingGroups with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyDescribeAutoScalingGroups for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyDescribeAutoScalingGroupsWithContext(ctx nifcloud.Context, input *NiftyDescribeAutoScalingGroupsInput, opts ...request.Option) (*NiftyDescribeAutoScalingGroupsOutput, error) {
	req, out := c.NiftyDescribeAutoScalingGroupsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyDescribeCorporateInfoForCertificate = "NiftyDescribeCorporateInfoForCertificate"

// NiftyDescribeCorporateInfoForCertificateRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyDescribeCorporateInfoForCertificate operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyDescribeCorporateInfoForCertificate for more information on using the NiftyDescribeCorporateInfoForCertificate
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyDescribeCorporateInfoForCertificateRequest method.
//    req, resp := client.NiftyDescribeCorporateInfoForCertificateRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDescribeCorporateInfoForCertificate
func (c *Computing) NiftyDescribeCorporateInfoForCertificateRequest(input *NiftyDescribeCorporateInfoForCertificateInput) (req *request.Request, output *NiftyDescribeCorporateInfoForCertificateOutput) {
	op := &request.Operation{
		Name:       opNiftyDescribeCorporateInfoForCertificate,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyDescribeCorporateInfoForCertificateInput{}
	}

	output = &NiftyDescribeCorporateInfoForCertificateOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyDescribeCorporateInfoForCertificate API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyDescribeCorporateInfoForCertificate for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDescribeCorporateInfoForCertificate
func (c *Computing) NiftyDescribeCorporateInfoForCertificate(input *NiftyDescribeCorporateInfoForCertificateInput) (*NiftyDescribeCorporateInfoForCertificateOutput, error) {
	req, out := c.NiftyDescribeCorporateInfoForCertificateRequest(input)
	return out, req.Send()
}

// NiftyDescribeCorporateInfoForCertificateWithContext is the same as NiftyDescribeCorporateInfoForCertificate with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyDescribeCorporateInfoForCertificate for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyDescribeCorporateInfoForCertificateWithContext(ctx nifcloud.Context, input *NiftyDescribeCorporateInfoForCertificateInput, opts ...request.Option) (*NiftyDescribeCorporateInfoForCertificateOutput, error) {
	req, out := c.NiftyDescribeCorporateInfoForCertificateRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyDescribeDhcpConfigs = "NiftyDescribeDhcpConfigs"

// NiftyDescribeDhcpConfigsRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyDescribeDhcpConfigs operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyDescribeDhcpConfigs for more information on using the NiftyDescribeDhcpConfigs
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyDescribeDhcpConfigsRequest method.
//    req, resp := client.NiftyDescribeDhcpConfigsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDescribeDhcpConfigs
func (c *Computing) NiftyDescribeDhcpConfigsRequest(input *NiftyDescribeDhcpConfigsInput) (req *request.Request, output *NiftyDescribeDhcpConfigsOutput) {
	op := &request.Operation{
		Name:       opNiftyDescribeDhcpConfigs,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyDescribeDhcpConfigsInput{}
	}

	output = &NiftyDescribeDhcpConfigsOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyDescribeDhcpConfigs API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyDescribeDhcpConfigs for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDescribeDhcpConfigs
func (c *Computing) NiftyDescribeDhcpConfigs(input *NiftyDescribeDhcpConfigsInput) (*NiftyDescribeDhcpConfigsOutput, error) {
	req, out := c.NiftyDescribeDhcpConfigsRequest(input)
	return out, req.Send()
}

// NiftyDescribeDhcpConfigsWithContext is the same as NiftyDescribeDhcpConfigs with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyDescribeDhcpConfigs for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyDescribeDhcpConfigsWithContext(ctx nifcloud.Context, input *NiftyDescribeDhcpConfigsInput, opts ...request.Option) (*NiftyDescribeDhcpConfigsOutput, error) {
	req, out := c.NiftyDescribeDhcpConfigsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyDescribeDhcpStatus = "NiftyDescribeDhcpStatus"

// NiftyDescribeDhcpStatusRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyDescribeDhcpStatus operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyDescribeDhcpStatus for more information on using the NiftyDescribeDhcpStatus
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyDescribeDhcpStatusRequest method.
//    req, resp := client.NiftyDescribeDhcpStatusRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDescribeDhcpStatus
func (c *Computing) NiftyDescribeDhcpStatusRequest(input *NiftyDescribeDhcpStatusInput) (req *request.Request, output *NiftyDescribeDhcpStatusOutput) {
	op := &request.Operation{
		Name:       opNiftyDescribeDhcpStatus,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyDescribeDhcpStatusInput{}
	}

	output = &NiftyDescribeDhcpStatusOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyDescribeDhcpStatus API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyDescribeDhcpStatus for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDescribeDhcpStatus
func (c *Computing) NiftyDescribeDhcpStatus(input *NiftyDescribeDhcpStatusInput) (*NiftyDescribeDhcpStatusOutput, error) {
	req, out := c.NiftyDescribeDhcpStatusRequest(input)
	return out, req.Send()
}

// NiftyDescribeDhcpStatusWithContext is the same as NiftyDescribeDhcpStatus with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyDescribeDhcpStatus for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyDescribeDhcpStatusWithContext(ctx nifcloud.Context, input *NiftyDescribeDhcpStatusInput, opts ...request.Option) (*NiftyDescribeDhcpStatusOutput, error) {
	req, out := c.NiftyDescribeDhcpStatusRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyDescribeElasticLoadBalancers = "NiftyDescribeElasticLoadBalancers"

// NiftyDescribeElasticLoadBalancersRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyDescribeElasticLoadBalancers operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyDescribeElasticLoadBalancers for more information on using the NiftyDescribeElasticLoadBalancers
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyDescribeElasticLoadBalancersRequest method.
//    req, resp := client.NiftyDescribeElasticLoadBalancersRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDescribeElasticLoadBalancers
func (c *Computing) NiftyDescribeElasticLoadBalancersRequest(input *NiftyDescribeElasticLoadBalancersInput) (req *request.Request, output *NiftyDescribeElasticLoadBalancersOutput) {
	op := &request.Operation{
		Name:       opNiftyDescribeElasticLoadBalancers,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyDescribeElasticLoadBalancersInput{}
	}

	output = &NiftyDescribeElasticLoadBalancersOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyDescribeElasticLoadBalancers API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyDescribeElasticLoadBalancers for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDescribeElasticLoadBalancers
func (c *Computing) NiftyDescribeElasticLoadBalancers(input *NiftyDescribeElasticLoadBalancersInput) (*NiftyDescribeElasticLoadBalancersOutput, error) {
	req, out := c.NiftyDescribeElasticLoadBalancersRequest(input)
	return out, req.Send()
}

// NiftyDescribeElasticLoadBalancersWithContext is the same as NiftyDescribeElasticLoadBalancers with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyDescribeElasticLoadBalancers for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyDescribeElasticLoadBalancersWithContext(ctx nifcloud.Context, input *NiftyDescribeElasticLoadBalancersInput, opts ...request.Option) (*NiftyDescribeElasticLoadBalancersOutput, error) {
	req, out := c.NiftyDescribeElasticLoadBalancersRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyDescribeInstanceElasticLoadBalancerHealth = "NiftyDescribeInstanceElasticLoadBalancerHealth"

// NiftyDescribeInstanceElasticLoadBalancerHealthRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyDescribeInstanceElasticLoadBalancerHealth operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyDescribeInstanceElasticLoadBalancerHealth for more information on using the NiftyDescribeInstanceElasticLoadBalancerHealth
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyDescribeInstanceElasticLoadBalancerHealthRequest method.
//    req, resp := client.NiftyDescribeInstanceElasticLoadBalancerHealthRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDescribeInstanceElasticLoadBalancerHealth
func (c *Computing) NiftyDescribeInstanceElasticLoadBalancerHealthRequest(input *NiftyDescribeInstanceElasticLoadBalancerHealthInput) (req *request.Request, output *NiftyDescribeInstanceElasticLoadBalancerHealthOutput) {
	op := &request.Operation{
		Name:       opNiftyDescribeInstanceElasticLoadBalancerHealth,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyDescribeInstanceElasticLoadBalancerHealthInput{}
	}

	output = &NiftyDescribeInstanceElasticLoadBalancerHealthOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyDescribeInstanceElasticLoadBalancerHealth API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyDescribeInstanceElasticLoadBalancerHealth for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDescribeInstanceElasticLoadBalancerHealth
func (c *Computing) NiftyDescribeInstanceElasticLoadBalancerHealth(input *NiftyDescribeInstanceElasticLoadBalancerHealthInput) (*NiftyDescribeInstanceElasticLoadBalancerHealthOutput, error) {
	req, out := c.NiftyDescribeInstanceElasticLoadBalancerHealthRequest(input)
	return out, req.Send()
}

// NiftyDescribeInstanceElasticLoadBalancerHealthWithContext is the same as NiftyDescribeInstanceElasticLoadBalancerHealth with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyDescribeInstanceElasticLoadBalancerHealth for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyDescribeInstanceElasticLoadBalancerHealthWithContext(ctx nifcloud.Context, input *NiftyDescribeInstanceElasticLoadBalancerHealthInput, opts ...request.Option) (*NiftyDescribeInstanceElasticLoadBalancerHealthOutput, error) {
	req, out := c.NiftyDescribeInstanceElasticLoadBalancerHealthRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyDescribeInstanceSnapshots = "NiftyDescribeInstanceSnapshots"

// NiftyDescribeInstanceSnapshotsRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyDescribeInstanceSnapshots operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyDescribeInstanceSnapshots for more information on using the NiftyDescribeInstanceSnapshots
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyDescribeInstanceSnapshotsRequest method.
//    req, resp := client.NiftyDescribeInstanceSnapshotsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDescribeInstanceSnapshots
func (c *Computing) NiftyDescribeInstanceSnapshotsRequest(input *NiftyDescribeInstanceSnapshotsInput) (req *request.Request, output *NiftyDescribeInstanceSnapshotsOutput) {
	op := &request.Operation{
		Name:       opNiftyDescribeInstanceSnapshots,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyDescribeInstanceSnapshotsInput{}
	}

	output = &NiftyDescribeInstanceSnapshotsOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyDescribeInstanceSnapshots API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyDescribeInstanceSnapshots for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDescribeInstanceSnapshots
func (c *Computing) NiftyDescribeInstanceSnapshots(input *NiftyDescribeInstanceSnapshotsInput) (*NiftyDescribeInstanceSnapshotsOutput, error) {
	req, out := c.NiftyDescribeInstanceSnapshotsRequest(input)
	return out, req.Send()
}

// NiftyDescribeInstanceSnapshotsWithContext is the same as NiftyDescribeInstanceSnapshots with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyDescribeInstanceSnapshots for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyDescribeInstanceSnapshotsWithContext(ctx nifcloud.Context, input *NiftyDescribeInstanceSnapshotsInput, opts ...request.Option) (*NiftyDescribeInstanceSnapshotsOutput, error) {
	req, out := c.NiftyDescribeInstanceSnapshotsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyDescribeNatTables = "NiftyDescribeNatTables"

// NiftyDescribeNatTablesRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyDescribeNatTables operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyDescribeNatTables for more information on using the NiftyDescribeNatTables
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyDescribeNatTablesRequest method.
//    req, resp := client.NiftyDescribeNatTablesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDescribeNatTables
func (c *Computing) NiftyDescribeNatTablesRequest(input *NiftyDescribeNatTablesInput) (req *request.Request, output *NiftyDescribeNatTablesOutput) {
	op := &request.Operation{
		Name:       opNiftyDescribeNatTables,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyDescribeNatTablesInput{}
	}

	output = &NiftyDescribeNatTablesOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyDescribeNatTables API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyDescribeNatTables for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDescribeNatTables
func (c *Computing) NiftyDescribeNatTables(input *NiftyDescribeNatTablesInput) (*NiftyDescribeNatTablesOutput, error) {
	req, out := c.NiftyDescribeNatTablesRequest(input)
	return out, req.Send()
}

// NiftyDescribeNatTablesWithContext is the same as NiftyDescribeNatTables with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyDescribeNatTables for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyDescribeNatTablesWithContext(ctx nifcloud.Context, input *NiftyDescribeNatTablesInput, opts ...request.Option) (*NiftyDescribeNatTablesOutput, error) {
	req, out := c.NiftyDescribeNatTablesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyDescribePerformanceChart = "NiftyDescribePerformanceChart"

// NiftyDescribePerformanceChartRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyDescribePerformanceChart operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyDescribePerformanceChart for more information on using the NiftyDescribePerformanceChart
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyDescribePerformanceChartRequest method.
//    req, resp := client.NiftyDescribePerformanceChartRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDescribePerformanceChart
func (c *Computing) NiftyDescribePerformanceChartRequest(input *NiftyDescribePerformanceChartInput) (req *request.Request, output *NiftyDescribePerformanceChartOutput) {
	op := &request.Operation{
		Name:       opNiftyDescribePerformanceChart,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyDescribePerformanceChartInput{}
	}

	output = &NiftyDescribePerformanceChartOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyDescribePerformanceChart API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyDescribePerformanceChart for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDescribePerformanceChart
func (c *Computing) NiftyDescribePerformanceChart(input *NiftyDescribePerformanceChartInput) (*NiftyDescribePerformanceChartOutput, error) {
	req, out := c.NiftyDescribePerformanceChartRequest(input)
	return out, req.Send()
}

// NiftyDescribePerformanceChartWithContext is the same as NiftyDescribePerformanceChart with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyDescribePerformanceChart for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyDescribePerformanceChartWithContext(ctx nifcloud.Context, input *NiftyDescribePerformanceChartInput, opts ...request.Option) (*NiftyDescribePerformanceChartOutput, error) {
	req, out := c.NiftyDescribePerformanceChartRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyDescribePrivateLans = "NiftyDescribePrivateLans"

// NiftyDescribePrivateLansRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyDescribePrivateLans operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyDescribePrivateLans for more information on using the NiftyDescribePrivateLans
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyDescribePrivateLansRequest method.
//    req, resp := client.NiftyDescribePrivateLansRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDescribePrivateLans
func (c *Computing) NiftyDescribePrivateLansRequest(input *NiftyDescribePrivateLansInput) (req *request.Request, output *NiftyDescribePrivateLansOutput) {
	op := &request.Operation{
		Name:       opNiftyDescribePrivateLans,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyDescribePrivateLansInput{}
	}

	output = &NiftyDescribePrivateLansOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyDescribePrivateLans API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyDescribePrivateLans for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDescribePrivateLans
func (c *Computing) NiftyDescribePrivateLans(input *NiftyDescribePrivateLansInput) (*NiftyDescribePrivateLansOutput, error) {
	req, out := c.NiftyDescribePrivateLansRequest(input)
	return out, req.Send()
}

// NiftyDescribePrivateLansWithContext is the same as NiftyDescribePrivateLans with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyDescribePrivateLans for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyDescribePrivateLansWithContext(ctx nifcloud.Context, input *NiftyDescribePrivateLansInput, opts ...request.Option) (*NiftyDescribePrivateLansOutput, error) {
	req, out := c.NiftyDescribePrivateLansRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyDescribeRouters = "NiftyDescribeRouters"

// NiftyDescribeRoutersRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyDescribeRouters operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyDescribeRouters for more information on using the NiftyDescribeRouters
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyDescribeRoutersRequest method.
//    req, resp := client.NiftyDescribeRoutersRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDescribeRouters
func (c *Computing) NiftyDescribeRoutersRequest(input *NiftyDescribeRoutersInput) (req *request.Request, output *NiftyDescribeRoutersOutput) {
	op := &request.Operation{
		Name:       opNiftyDescribeRouters,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyDescribeRoutersInput{}
	}

	output = &NiftyDescribeRoutersOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyDescribeRouters API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyDescribeRouters for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDescribeRouters
func (c *Computing) NiftyDescribeRouters(input *NiftyDescribeRoutersInput) (*NiftyDescribeRoutersOutput, error) {
	req, out := c.NiftyDescribeRoutersRequest(input)
	return out, req.Send()
}

// NiftyDescribeRoutersWithContext is the same as NiftyDescribeRouters with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyDescribeRouters for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyDescribeRoutersWithContext(ctx nifcloud.Context, input *NiftyDescribeRoutersInput, opts ...request.Option) (*NiftyDescribeRoutersOutput, error) {
	req, out := c.NiftyDescribeRoutersRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyDescribeScalingActivities = "NiftyDescribeScalingActivities"

// NiftyDescribeScalingActivitiesRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyDescribeScalingActivities operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyDescribeScalingActivities for more information on using the NiftyDescribeScalingActivities
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyDescribeScalingActivitiesRequest method.
//    req, resp := client.NiftyDescribeScalingActivitiesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDescribeScalingActivities
func (c *Computing) NiftyDescribeScalingActivitiesRequest(input *NiftyDescribeScalingActivitiesInput) (req *request.Request, output *NiftyDescribeScalingActivitiesOutput) {
	op := &request.Operation{
		Name:       opNiftyDescribeScalingActivities,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyDescribeScalingActivitiesInput{}
	}

	output = &NiftyDescribeScalingActivitiesOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyDescribeScalingActivities API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyDescribeScalingActivities for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDescribeScalingActivities
func (c *Computing) NiftyDescribeScalingActivities(input *NiftyDescribeScalingActivitiesInput) (*NiftyDescribeScalingActivitiesOutput, error) {
	req, out := c.NiftyDescribeScalingActivitiesRequest(input)
	return out, req.Send()
}

// NiftyDescribeScalingActivitiesWithContext is the same as NiftyDescribeScalingActivities with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyDescribeScalingActivities for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyDescribeScalingActivitiesWithContext(ctx nifcloud.Context, input *NiftyDescribeScalingActivitiesInput, opts ...request.Option) (*NiftyDescribeScalingActivitiesOutput, error) {
	req, out := c.NiftyDescribeScalingActivitiesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyDescribeSeparateInstanceRules = "NiftyDescribeSeparateInstanceRules"

// NiftyDescribeSeparateInstanceRulesRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyDescribeSeparateInstanceRules operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyDescribeSeparateInstanceRules for more information on using the NiftyDescribeSeparateInstanceRules
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyDescribeSeparateInstanceRulesRequest method.
//    req, resp := client.NiftyDescribeSeparateInstanceRulesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDescribeSeparateInstanceRules
func (c *Computing) NiftyDescribeSeparateInstanceRulesRequest(input *NiftyDescribeSeparateInstanceRulesInput) (req *request.Request, output *NiftyDescribeSeparateInstanceRulesOutput) {
	op := &request.Operation{
		Name:       opNiftyDescribeSeparateInstanceRules,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyDescribeSeparateInstanceRulesInput{}
	}

	output = &NiftyDescribeSeparateInstanceRulesOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyDescribeSeparateInstanceRules API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyDescribeSeparateInstanceRules for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDescribeSeparateInstanceRules
func (c *Computing) NiftyDescribeSeparateInstanceRules(input *NiftyDescribeSeparateInstanceRulesInput) (*NiftyDescribeSeparateInstanceRulesOutput, error) {
	req, out := c.NiftyDescribeSeparateInstanceRulesRequest(input)
	return out, req.Send()
}

// NiftyDescribeSeparateInstanceRulesWithContext is the same as NiftyDescribeSeparateInstanceRules with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyDescribeSeparateInstanceRules for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyDescribeSeparateInstanceRulesWithContext(ctx nifcloud.Context, input *NiftyDescribeSeparateInstanceRulesInput, opts ...request.Option) (*NiftyDescribeSeparateInstanceRulesOutput, error) {
	req, out := c.NiftyDescribeSeparateInstanceRulesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyDescribeVpnGatewayActivities = "NiftyDescribeVpnGatewayActivities"

// NiftyDescribeVpnGatewayActivitiesRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyDescribeVpnGatewayActivities operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyDescribeVpnGatewayActivities for more information on using the NiftyDescribeVpnGatewayActivities
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyDescribeVpnGatewayActivitiesRequest method.
//    req, resp := client.NiftyDescribeVpnGatewayActivitiesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDescribeVpnGatewayActivities
func (c *Computing) NiftyDescribeVpnGatewayActivitiesRequest(input *NiftyDescribeVpnGatewayActivitiesInput) (req *request.Request, output *NiftyDescribeVpnGatewayActivitiesOutput) {
	op := &request.Operation{
		Name:       opNiftyDescribeVpnGatewayActivities,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyDescribeVpnGatewayActivitiesInput{}
	}

	output = &NiftyDescribeVpnGatewayActivitiesOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyDescribeVpnGatewayActivities API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyDescribeVpnGatewayActivities for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDescribeVpnGatewayActivities
func (c *Computing) NiftyDescribeVpnGatewayActivities(input *NiftyDescribeVpnGatewayActivitiesInput) (*NiftyDescribeVpnGatewayActivitiesOutput, error) {
	req, out := c.NiftyDescribeVpnGatewayActivitiesRequest(input)
	return out, req.Send()
}

// NiftyDescribeVpnGatewayActivitiesWithContext is the same as NiftyDescribeVpnGatewayActivities with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyDescribeVpnGatewayActivities for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyDescribeVpnGatewayActivitiesWithContext(ctx nifcloud.Context, input *NiftyDescribeVpnGatewayActivitiesInput, opts ...request.Option) (*NiftyDescribeVpnGatewayActivitiesOutput, error) {
	req, out := c.NiftyDescribeVpnGatewayActivitiesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyDescribeWebProxies = "NiftyDescribeWebProxies"

// NiftyDescribeWebProxiesRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyDescribeWebProxies operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyDescribeWebProxies for more information on using the NiftyDescribeWebProxies
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyDescribeWebProxiesRequest method.
//    req, resp := client.NiftyDescribeWebProxiesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDescribeWebProxies
func (c *Computing) NiftyDescribeWebProxiesRequest(input *NiftyDescribeWebProxiesInput) (req *request.Request, output *NiftyDescribeWebProxiesOutput) {
	op := &request.Operation{
		Name:       opNiftyDescribeWebProxies,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyDescribeWebProxiesInput{}
	}

	output = &NiftyDescribeWebProxiesOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyDescribeWebProxies API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyDescribeWebProxies for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDescribeWebProxies
func (c *Computing) NiftyDescribeWebProxies(input *NiftyDescribeWebProxiesInput) (*NiftyDescribeWebProxiesOutput, error) {
	req, out := c.NiftyDescribeWebProxiesRequest(input)
	return out, req.Send()
}

// NiftyDescribeWebProxiesWithContext is the same as NiftyDescribeWebProxies with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyDescribeWebProxies for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyDescribeWebProxiesWithContext(ctx nifcloud.Context, input *NiftyDescribeWebProxiesInput, opts ...request.Option) (*NiftyDescribeWebProxiesOutput, error) {
	req, out := c.NiftyDescribeWebProxiesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyDisableDhcp = "NiftyDisableDhcp"

// NiftyDisableDhcpRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyDisableDhcp operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyDisableDhcp for more information on using the NiftyDisableDhcp
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyDisableDhcpRequest method.
//    req, resp := client.NiftyDisableDhcpRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDisableDhcp
func (c *Computing) NiftyDisableDhcpRequest(input *NiftyDisableDhcpInput) (req *request.Request, output *NiftyDisableDhcpOutput) {
	op := &request.Operation{
		Name:       opNiftyDisableDhcp,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyDisableDhcpInput{}
	}

	output = &NiftyDisableDhcpOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyDisableDhcp API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyDisableDhcp for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDisableDhcp
func (c *Computing) NiftyDisableDhcp(input *NiftyDisableDhcpInput) (*NiftyDisableDhcpOutput, error) {
	req, out := c.NiftyDisableDhcpRequest(input)
	return out, req.Send()
}

// NiftyDisableDhcpWithContext is the same as NiftyDisableDhcp with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyDisableDhcp for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyDisableDhcpWithContext(ctx nifcloud.Context, input *NiftyDisableDhcpInput, opts ...request.Option) (*NiftyDisableDhcpOutput, error) {
	req, out := c.NiftyDisableDhcpRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyDisassociateNatTable = "NiftyDisassociateNatTable"

// NiftyDisassociateNatTableRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyDisassociateNatTable operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyDisassociateNatTable for more information on using the NiftyDisassociateNatTable
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyDisassociateNatTableRequest method.
//    req, resp := client.NiftyDisassociateNatTableRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDisassociateNatTable
func (c *Computing) NiftyDisassociateNatTableRequest(input *NiftyDisassociateNatTableInput) (req *request.Request, output *NiftyDisassociateNatTableOutput) {
	op := &request.Operation{
		Name:       opNiftyDisassociateNatTable,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyDisassociateNatTableInput{}
	}

	output = &NiftyDisassociateNatTableOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyDisassociateNatTable API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyDisassociateNatTable for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDisassociateNatTable
func (c *Computing) NiftyDisassociateNatTable(input *NiftyDisassociateNatTableInput) (*NiftyDisassociateNatTableOutput, error) {
	req, out := c.NiftyDisassociateNatTableRequest(input)
	return out, req.Send()
}

// NiftyDisassociateNatTableWithContext is the same as NiftyDisassociateNatTable with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyDisassociateNatTable for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyDisassociateNatTableWithContext(ctx nifcloud.Context, input *NiftyDisassociateNatTableInput, opts ...request.Option) (*NiftyDisassociateNatTableOutput, error) {
	req, out := c.NiftyDisassociateNatTableRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyDisassociateRouteTableFromVpnGateway = "NiftyDisassociateRouteTableFromVpnGateway"

// NiftyDisassociateRouteTableFromVpnGatewayRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyDisassociateRouteTableFromVpnGateway operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyDisassociateRouteTableFromVpnGateway for more information on using the NiftyDisassociateRouteTableFromVpnGateway
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyDisassociateRouteTableFromVpnGatewayRequest method.
//    req, resp := client.NiftyDisassociateRouteTableFromVpnGatewayRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDisassociateRouteTableFromVpnGateway
func (c *Computing) NiftyDisassociateRouteTableFromVpnGatewayRequest(input *NiftyDisassociateRouteTableFromVpnGatewayInput) (req *request.Request, output *NiftyDisassociateRouteTableFromVpnGatewayOutput) {
	op := &request.Operation{
		Name:       opNiftyDisassociateRouteTableFromVpnGateway,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyDisassociateRouteTableFromVpnGatewayInput{}
	}

	output = &NiftyDisassociateRouteTableFromVpnGatewayOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyDisassociateRouteTableFromVpnGateway API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyDisassociateRouteTableFromVpnGateway for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyDisassociateRouteTableFromVpnGateway
func (c *Computing) NiftyDisassociateRouteTableFromVpnGateway(input *NiftyDisassociateRouteTableFromVpnGatewayInput) (*NiftyDisassociateRouteTableFromVpnGatewayOutput, error) {
	req, out := c.NiftyDisassociateRouteTableFromVpnGatewayRequest(input)
	return out, req.Send()
}

// NiftyDisassociateRouteTableFromVpnGatewayWithContext is the same as NiftyDisassociateRouteTableFromVpnGateway with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyDisassociateRouteTableFromVpnGateway for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyDisassociateRouteTableFromVpnGatewayWithContext(ctx nifcloud.Context, input *NiftyDisassociateRouteTableFromVpnGatewayInput, opts ...request.Option) (*NiftyDisassociateRouteTableFromVpnGatewayOutput, error) {
	req, out := c.NiftyDisassociateRouteTableFromVpnGatewayRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyEnableDhcp = "NiftyEnableDhcp"

// NiftyEnableDhcpRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyEnableDhcp operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyEnableDhcp for more information on using the NiftyEnableDhcp
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyEnableDhcpRequest method.
//    req, resp := client.NiftyEnableDhcpRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyEnableDhcp
func (c *Computing) NiftyEnableDhcpRequest(input *NiftyEnableDhcpInput) (req *request.Request, output *NiftyEnableDhcpOutput) {
	op := &request.Operation{
		Name:       opNiftyEnableDhcp,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyEnableDhcpInput{}
	}

	output = &NiftyEnableDhcpOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyEnableDhcp API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyEnableDhcp for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyEnableDhcp
func (c *Computing) NiftyEnableDhcp(input *NiftyEnableDhcpInput) (*NiftyEnableDhcpOutput, error) {
	req, out := c.NiftyEnableDhcpRequest(input)
	return out, req.Send()
}

// NiftyEnableDhcpWithContext is the same as NiftyEnableDhcp with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyEnableDhcp for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyEnableDhcpWithContext(ctx nifcloud.Context, input *NiftyEnableDhcpInput, opts ...request.Option) (*NiftyEnableDhcpOutput, error) {
	req, out := c.NiftyEnableDhcpRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyModifyAddressAttribute = "NiftyModifyAddressAttribute"

// NiftyModifyAddressAttributeRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyModifyAddressAttribute operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyModifyAddressAttribute for more information on using the NiftyModifyAddressAttribute
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyModifyAddressAttributeRequest method.
//    req, resp := client.NiftyModifyAddressAttributeRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyModifyAddressAttribute
func (c *Computing) NiftyModifyAddressAttributeRequest(input *NiftyModifyAddressAttributeInput) (req *request.Request, output *NiftyModifyAddressAttributeOutput) {
	op := &request.Operation{
		Name:       opNiftyModifyAddressAttribute,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyModifyAddressAttributeInput{}
	}

	output = &NiftyModifyAddressAttributeOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyModifyAddressAttribute API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyModifyAddressAttribute for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyModifyAddressAttribute
func (c *Computing) NiftyModifyAddressAttribute(input *NiftyModifyAddressAttributeInput) (*NiftyModifyAddressAttributeOutput, error) {
	req, out := c.NiftyModifyAddressAttributeRequest(input)
	return out, req.Send()
}

// NiftyModifyAddressAttributeWithContext is the same as NiftyModifyAddressAttribute with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyModifyAddressAttribute for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyModifyAddressAttributeWithContext(ctx nifcloud.Context, input *NiftyModifyAddressAttributeInput, opts ...request.Option) (*NiftyModifyAddressAttributeOutput, error) {
	req, out := c.NiftyModifyAddressAttributeRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyModifyCustomerGatewayAttribute = "NiftyModifyCustomerGatewayAttribute"

// NiftyModifyCustomerGatewayAttributeRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyModifyCustomerGatewayAttribute operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyModifyCustomerGatewayAttribute for more information on using the NiftyModifyCustomerGatewayAttribute
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyModifyCustomerGatewayAttributeRequest method.
//    req, resp := client.NiftyModifyCustomerGatewayAttributeRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyModifyCustomerGatewayAttribute
func (c *Computing) NiftyModifyCustomerGatewayAttributeRequest(input *NiftyModifyCustomerGatewayAttributeInput) (req *request.Request, output *NiftyModifyCustomerGatewayAttributeOutput) {
	op := &request.Operation{
		Name:       opNiftyModifyCustomerGatewayAttribute,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyModifyCustomerGatewayAttributeInput{}
	}

	output = &NiftyModifyCustomerGatewayAttributeOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyModifyCustomerGatewayAttribute API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyModifyCustomerGatewayAttribute for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyModifyCustomerGatewayAttribute
func (c *Computing) NiftyModifyCustomerGatewayAttribute(input *NiftyModifyCustomerGatewayAttributeInput) (*NiftyModifyCustomerGatewayAttributeOutput, error) {
	req, out := c.NiftyModifyCustomerGatewayAttributeRequest(input)
	return out, req.Send()
}

// NiftyModifyCustomerGatewayAttributeWithContext is the same as NiftyModifyCustomerGatewayAttribute with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyModifyCustomerGatewayAttribute for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyModifyCustomerGatewayAttributeWithContext(ctx nifcloud.Context, input *NiftyModifyCustomerGatewayAttributeInput, opts ...request.Option) (*NiftyModifyCustomerGatewayAttributeOutput, error) {
	req, out := c.NiftyModifyCustomerGatewayAttributeRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyModifyElasticLoadBalancerAttributes = "NiftyModifyElasticLoadBalancerAttributes"

// NiftyModifyElasticLoadBalancerAttributesRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyModifyElasticLoadBalancerAttributes operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyModifyElasticLoadBalancerAttributes for more information on using the NiftyModifyElasticLoadBalancerAttributes
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyModifyElasticLoadBalancerAttributesRequest method.
//    req, resp := client.NiftyModifyElasticLoadBalancerAttributesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyModifyElasticLoadBalancerAttributes
func (c *Computing) NiftyModifyElasticLoadBalancerAttributesRequest(input *NiftyModifyElasticLoadBalancerAttributesInput) (req *request.Request, output *NiftyModifyElasticLoadBalancerAttributesOutput) {
	op := &request.Operation{
		Name:       opNiftyModifyElasticLoadBalancerAttributes,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyModifyElasticLoadBalancerAttributesInput{}
	}

	output = &NiftyModifyElasticLoadBalancerAttributesOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyModifyElasticLoadBalancerAttributes API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyModifyElasticLoadBalancerAttributes for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyModifyElasticLoadBalancerAttributes
func (c *Computing) NiftyModifyElasticLoadBalancerAttributes(input *NiftyModifyElasticLoadBalancerAttributesInput) (*NiftyModifyElasticLoadBalancerAttributesOutput, error) {
	req, out := c.NiftyModifyElasticLoadBalancerAttributesRequest(input)
	return out, req.Send()
}

// NiftyModifyElasticLoadBalancerAttributesWithContext is the same as NiftyModifyElasticLoadBalancerAttributes with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyModifyElasticLoadBalancerAttributes for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyModifyElasticLoadBalancerAttributesWithContext(ctx nifcloud.Context, input *NiftyModifyElasticLoadBalancerAttributesInput, opts ...request.Option) (*NiftyModifyElasticLoadBalancerAttributesOutput, error) {
	req, out := c.NiftyModifyElasticLoadBalancerAttributesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyModifyInstanceSnapshotAttribute = "NiftyModifyInstanceSnapshotAttribute"

// NiftyModifyInstanceSnapshotAttributeRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyModifyInstanceSnapshotAttribute operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyModifyInstanceSnapshotAttribute for more information on using the NiftyModifyInstanceSnapshotAttribute
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyModifyInstanceSnapshotAttributeRequest method.
//    req, resp := client.NiftyModifyInstanceSnapshotAttributeRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyModifyInstanceSnapshotAttribute
func (c *Computing) NiftyModifyInstanceSnapshotAttributeRequest(input *NiftyModifyInstanceSnapshotAttributeInput) (req *request.Request, output *NiftyModifyInstanceSnapshotAttributeOutput) {
	op := &request.Operation{
		Name:       opNiftyModifyInstanceSnapshotAttribute,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyModifyInstanceSnapshotAttributeInput{}
	}

	output = &NiftyModifyInstanceSnapshotAttributeOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyModifyInstanceSnapshotAttribute API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyModifyInstanceSnapshotAttribute for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyModifyInstanceSnapshotAttribute
func (c *Computing) NiftyModifyInstanceSnapshotAttribute(input *NiftyModifyInstanceSnapshotAttributeInput) (*NiftyModifyInstanceSnapshotAttributeOutput, error) {
	req, out := c.NiftyModifyInstanceSnapshotAttributeRequest(input)
	return out, req.Send()
}

// NiftyModifyInstanceSnapshotAttributeWithContext is the same as NiftyModifyInstanceSnapshotAttribute with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyModifyInstanceSnapshotAttribute for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyModifyInstanceSnapshotAttributeWithContext(ctx nifcloud.Context, input *NiftyModifyInstanceSnapshotAttributeInput, opts ...request.Option) (*NiftyModifyInstanceSnapshotAttributeOutput, error) {
	req, out := c.NiftyModifyInstanceSnapshotAttributeRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyModifyKeyPairAttribute = "NiftyModifyKeyPairAttribute"

// NiftyModifyKeyPairAttributeRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyModifyKeyPairAttribute operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyModifyKeyPairAttribute for more information on using the NiftyModifyKeyPairAttribute
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyModifyKeyPairAttributeRequest method.
//    req, resp := client.NiftyModifyKeyPairAttributeRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyModifyKeyPairAttribute
func (c *Computing) NiftyModifyKeyPairAttributeRequest(input *NiftyModifyKeyPairAttributeInput) (req *request.Request, output *NiftyModifyKeyPairAttributeOutput) {
	op := &request.Operation{
		Name:       opNiftyModifyKeyPairAttribute,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyModifyKeyPairAttributeInput{}
	}

	output = &NiftyModifyKeyPairAttributeOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyModifyKeyPairAttribute API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyModifyKeyPairAttribute for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyModifyKeyPairAttribute
func (c *Computing) NiftyModifyKeyPairAttribute(input *NiftyModifyKeyPairAttributeInput) (*NiftyModifyKeyPairAttributeOutput, error) {
	req, out := c.NiftyModifyKeyPairAttributeRequest(input)
	return out, req.Send()
}

// NiftyModifyKeyPairAttributeWithContext is the same as NiftyModifyKeyPairAttribute with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyModifyKeyPairAttribute for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyModifyKeyPairAttributeWithContext(ctx nifcloud.Context, input *NiftyModifyKeyPairAttributeInput, opts ...request.Option) (*NiftyModifyKeyPairAttributeOutput, error) {
	req, out := c.NiftyModifyKeyPairAttributeRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyModifyPrivateLanAttribute = "NiftyModifyPrivateLanAttribute"

// NiftyModifyPrivateLanAttributeRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyModifyPrivateLanAttribute operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyModifyPrivateLanAttribute for more information on using the NiftyModifyPrivateLanAttribute
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyModifyPrivateLanAttributeRequest method.
//    req, resp := client.NiftyModifyPrivateLanAttributeRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyModifyPrivateLanAttribute
func (c *Computing) NiftyModifyPrivateLanAttributeRequest(input *NiftyModifyPrivateLanAttributeInput) (req *request.Request, output *NiftyModifyPrivateLanAttributeOutput) {
	op := &request.Operation{
		Name:       opNiftyModifyPrivateLanAttribute,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyModifyPrivateLanAttributeInput{}
	}

	output = &NiftyModifyPrivateLanAttributeOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyModifyPrivateLanAttribute API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyModifyPrivateLanAttribute for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyModifyPrivateLanAttribute
func (c *Computing) NiftyModifyPrivateLanAttribute(input *NiftyModifyPrivateLanAttributeInput) (*NiftyModifyPrivateLanAttributeOutput, error) {
	req, out := c.NiftyModifyPrivateLanAttributeRequest(input)
	return out, req.Send()
}

// NiftyModifyPrivateLanAttributeWithContext is the same as NiftyModifyPrivateLanAttribute with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyModifyPrivateLanAttribute for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyModifyPrivateLanAttributeWithContext(ctx nifcloud.Context, input *NiftyModifyPrivateLanAttributeInput, opts ...request.Option) (*NiftyModifyPrivateLanAttributeOutput, error) {
	req, out := c.NiftyModifyPrivateLanAttributeRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyModifyRouterAttribute = "NiftyModifyRouterAttribute"

// NiftyModifyRouterAttributeRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyModifyRouterAttribute operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyModifyRouterAttribute for more information on using the NiftyModifyRouterAttribute
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyModifyRouterAttributeRequest method.
//    req, resp := client.NiftyModifyRouterAttributeRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyModifyRouterAttribute
func (c *Computing) NiftyModifyRouterAttributeRequest(input *NiftyModifyRouterAttributeInput) (req *request.Request, output *NiftyModifyRouterAttributeOutput) {
	op := &request.Operation{
		Name:       opNiftyModifyRouterAttribute,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyModifyRouterAttributeInput{}
	}

	output = &NiftyModifyRouterAttributeOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyModifyRouterAttribute API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyModifyRouterAttribute for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyModifyRouterAttribute
func (c *Computing) NiftyModifyRouterAttribute(input *NiftyModifyRouterAttributeInput) (*NiftyModifyRouterAttributeOutput, error) {
	req, out := c.NiftyModifyRouterAttributeRequest(input)
	return out, req.Send()
}

// NiftyModifyRouterAttributeWithContext is the same as NiftyModifyRouterAttribute with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyModifyRouterAttribute for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyModifyRouterAttributeWithContext(ctx nifcloud.Context, input *NiftyModifyRouterAttributeInput, opts ...request.Option) (*NiftyModifyRouterAttributeOutput, error) {
	req, out := c.NiftyModifyRouterAttributeRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyModifyVpnGatewayAttribute = "NiftyModifyVpnGatewayAttribute"

// NiftyModifyVpnGatewayAttributeRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyModifyVpnGatewayAttribute operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyModifyVpnGatewayAttribute for more information on using the NiftyModifyVpnGatewayAttribute
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyModifyVpnGatewayAttributeRequest method.
//    req, resp := client.NiftyModifyVpnGatewayAttributeRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyModifyVpnGatewayAttribute
func (c *Computing) NiftyModifyVpnGatewayAttributeRequest(input *NiftyModifyVpnGatewayAttributeInput) (req *request.Request, output *NiftyModifyVpnGatewayAttributeOutput) {
	op := &request.Operation{
		Name:       opNiftyModifyVpnGatewayAttribute,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyModifyVpnGatewayAttributeInput{}
	}

	output = &NiftyModifyVpnGatewayAttributeOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyModifyVpnGatewayAttribute API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyModifyVpnGatewayAttribute for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyModifyVpnGatewayAttribute
func (c *Computing) NiftyModifyVpnGatewayAttribute(input *NiftyModifyVpnGatewayAttributeInput) (*NiftyModifyVpnGatewayAttributeOutput, error) {
	req, out := c.NiftyModifyVpnGatewayAttributeRequest(input)
	return out, req.Send()
}

// NiftyModifyVpnGatewayAttributeWithContext is the same as NiftyModifyVpnGatewayAttribute with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyModifyVpnGatewayAttribute for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyModifyVpnGatewayAttributeWithContext(ctx nifcloud.Context, input *NiftyModifyVpnGatewayAttributeInput, opts ...request.Option) (*NiftyModifyVpnGatewayAttributeOutput, error) {
	req, out := c.NiftyModifyVpnGatewayAttributeRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyModifyWebProxyAttribute = "NiftyModifyWebProxyAttribute"

// NiftyModifyWebProxyAttributeRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyModifyWebProxyAttribute operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyModifyWebProxyAttribute for more information on using the NiftyModifyWebProxyAttribute
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyModifyWebProxyAttributeRequest method.
//    req, resp := client.NiftyModifyWebProxyAttributeRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyModifyWebProxyAttribute
func (c *Computing) NiftyModifyWebProxyAttributeRequest(input *NiftyModifyWebProxyAttributeInput) (req *request.Request, output *NiftyModifyWebProxyAttributeOutput) {
	op := &request.Operation{
		Name:       opNiftyModifyWebProxyAttribute,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyModifyWebProxyAttributeInput{}
	}

	output = &NiftyModifyWebProxyAttributeOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyModifyWebProxyAttribute API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyModifyWebProxyAttribute for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyModifyWebProxyAttribute
func (c *Computing) NiftyModifyWebProxyAttribute(input *NiftyModifyWebProxyAttributeInput) (*NiftyModifyWebProxyAttributeOutput, error) {
	req, out := c.NiftyModifyWebProxyAttributeRequest(input)
	return out, req.Send()
}

// NiftyModifyWebProxyAttributeWithContext is the same as NiftyModifyWebProxyAttribute with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyModifyWebProxyAttribute for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyModifyWebProxyAttributeWithContext(ctx nifcloud.Context, input *NiftyModifyWebProxyAttributeInput, opts ...request.Option) (*NiftyModifyWebProxyAttributeOutput, error) {
	req, out := c.NiftyModifyWebProxyAttributeRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyRebootRouters = "NiftyRebootRouters"

// NiftyRebootRoutersRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyRebootRouters operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyRebootRouters for more information on using the NiftyRebootRouters
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyRebootRoutersRequest method.
//    req, resp := client.NiftyRebootRoutersRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyRebootRouters
func (c *Computing) NiftyRebootRoutersRequest(input *NiftyRebootRoutersInput) (req *request.Request, output *NiftyRebootRoutersOutput) {
	op := &request.Operation{
		Name:       opNiftyRebootRouters,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyRebootRoutersInput{}
	}

	output = &NiftyRebootRoutersOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyRebootRouters API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyRebootRouters for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyRebootRouters
func (c *Computing) NiftyRebootRouters(input *NiftyRebootRoutersInput) (*NiftyRebootRoutersOutput, error) {
	req, out := c.NiftyRebootRoutersRequest(input)
	return out, req.Send()
}

// NiftyRebootRoutersWithContext is the same as NiftyRebootRouters with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyRebootRouters for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyRebootRoutersWithContext(ctx nifcloud.Context, input *NiftyRebootRoutersInput, opts ...request.Option) (*NiftyRebootRoutersOutput, error) {
	req, out := c.NiftyRebootRoutersRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyRebootVpnGateways = "NiftyRebootVpnGateways"

// NiftyRebootVpnGatewaysRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyRebootVpnGateways operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyRebootVpnGateways for more information on using the NiftyRebootVpnGateways
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyRebootVpnGatewaysRequest method.
//    req, resp := client.NiftyRebootVpnGatewaysRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyRebootVpnGateways
func (c *Computing) NiftyRebootVpnGatewaysRequest(input *NiftyRebootVpnGatewaysInput) (req *request.Request, output *NiftyRebootVpnGatewaysOutput) {
	op := &request.Operation{
		Name:       opNiftyRebootVpnGateways,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyRebootVpnGatewaysInput{}
	}

	output = &NiftyRebootVpnGatewaysOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyRebootVpnGateways API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyRebootVpnGateways for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyRebootVpnGateways
func (c *Computing) NiftyRebootVpnGateways(input *NiftyRebootVpnGatewaysInput) (*NiftyRebootVpnGatewaysOutput, error) {
	req, out := c.NiftyRebootVpnGatewaysRequest(input)
	return out, req.Send()
}

// NiftyRebootVpnGatewaysWithContext is the same as NiftyRebootVpnGateways with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyRebootVpnGateways for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyRebootVpnGatewaysWithContext(ctx nifcloud.Context, input *NiftyRebootVpnGatewaysInput, opts ...request.Option) (*NiftyRebootVpnGatewaysOutput, error) {
	req, out := c.NiftyRebootVpnGatewaysRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyRegisterInstancesWithElasticLoadBalancer = "NiftyRegisterInstancesWithElasticLoadBalancer"

// NiftyRegisterInstancesWithElasticLoadBalancerRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyRegisterInstancesWithElasticLoadBalancer operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyRegisterInstancesWithElasticLoadBalancer for more information on using the NiftyRegisterInstancesWithElasticLoadBalancer
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyRegisterInstancesWithElasticLoadBalancerRequest method.
//    req, resp := client.NiftyRegisterInstancesWithElasticLoadBalancerRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyRegisterInstancesWithElasticLoadBalancer
func (c *Computing) NiftyRegisterInstancesWithElasticLoadBalancerRequest(input *NiftyRegisterInstancesWithElasticLoadBalancerInput) (req *request.Request, output *NiftyRegisterInstancesWithElasticLoadBalancerOutput) {
	op := &request.Operation{
		Name:       opNiftyRegisterInstancesWithElasticLoadBalancer,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyRegisterInstancesWithElasticLoadBalancerInput{}
	}

	output = &NiftyRegisterInstancesWithElasticLoadBalancerOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyRegisterInstancesWithElasticLoadBalancer API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyRegisterInstancesWithElasticLoadBalancer for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyRegisterInstancesWithElasticLoadBalancer
func (c *Computing) NiftyRegisterInstancesWithElasticLoadBalancer(input *NiftyRegisterInstancesWithElasticLoadBalancerInput) (*NiftyRegisterInstancesWithElasticLoadBalancerOutput, error) {
	req, out := c.NiftyRegisterInstancesWithElasticLoadBalancerRequest(input)
	return out, req.Send()
}

// NiftyRegisterInstancesWithElasticLoadBalancerWithContext is the same as NiftyRegisterInstancesWithElasticLoadBalancer with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyRegisterInstancesWithElasticLoadBalancer for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyRegisterInstancesWithElasticLoadBalancerWithContext(ctx nifcloud.Context, input *NiftyRegisterInstancesWithElasticLoadBalancerInput, opts ...request.Option) (*NiftyRegisterInstancesWithElasticLoadBalancerOutput, error) {
	req, out := c.NiftyRegisterInstancesWithElasticLoadBalancerRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyRegisterInstancesWithSeparateInstanceRule = "NiftyRegisterInstancesWithSeparateInstanceRule"

// NiftyRegisterInstancesWithSeparateInstanceRuleRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyRegisterInstancesWithSeparateInstanceRule operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyRegisterInstancesWithSeparateInstanceRule for more information on using the NiftyRegisterInstancesWithSeparateInstanceRule
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyRegisterInstancesWithSeparateInstanceRuleRequest method.
//    req, resp := client.NiftyRegisterInstancesWithSeparateInstanceRuleRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyRegisterInstancesWithSeparateInstanceRule
func (c *Computing) NiftyRegisterInstancesWithSeparateInstanceRuleRequest(input *NiftyRegisterInstancesWithSeparateInstanceRuleInput) (req *request.Request, output *NiftyRegisterInstancesWithSeparateInstanceRuleOutput) {
	op := &request.Operation{
		Name:       opNiftyRegisterInstancesWithSeparateInstanceRule,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyRegisterInstancesWithSeparateInstanceRuleInput{}
	}

	output = &NiftyRegisterInstancesWithSeparateInstanceRuleOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyRegisterInstancesWithSeparateInstanceRule API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyRegisterInstancesWithSeparateInstanceRule for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyRegisterInstancesWithSeparateInstanceRule
func (c *Computing) NiftyRegisterInstancesWithSeparateInstanceRule(input *NiftyRegisterInstancesWithSeparateInstanceRuleInput) (*NiftyRegisterInstancesWithSeparateInstanceRuleOutput, error) {
	req, out := c.NiftyRegisterInstancesWithSeparateInstanceRuleRequest(input)
	return out, req.Send()
}

// NiftyRegisterInstancesWithSeparateInstanceRuleWithContext is the same as NiftyRegisterInstancesWithSeparateInstanceRule with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyRegisterInstancesWithSeparateInstanceRule for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyRegisterInstancesWithSeparateInstanceRuleWithContext(ctx nifcloud.Context, input *NiftyRegisterInstancesWithSeparateInstanceRuleInput, opts ...request.Option) (*NiftyRegisterInstancesWithSeparateInstanceRuleOutput, error) {
	req, out := c.NiftyRegisterInstancesWithSeparateInstanceRuleRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyRegisterPortWithElasticLoadBalancer = "NiftyRegisterPortWithElasticLoadBalancer"

// NiftyRegisterPortWithElasticLoadBalancerRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyRegisterPortWithElasticLoadBalancer operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyRegisterPortWithElasticLoadBalancer for more information on using the NiftyRegisterPortWithElasticLoadBalancer
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyRegisterPortWithElasticLoadBalancerRequest method.
//    req, resp := client.NiftyRegisterPortWithElasticLoadBalancerRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyRegisterPortWithElasticLoadBalancer
func (c *Computing) NiftyRegisterPortWithElasticLoadBalancerRequest(input *NiftyRegisterPortWithElasticLoadBalancerInput) (req *request.Request, output *NiftyRegisterPortWithElasticLoadBalancerOutput) {
	op := &request.Operation{
		Name:       opNiftyRegisterPortWithElasticLoadBalancer,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyRegisterPortWithElasticLoadBalancerInput{}
	}

	output = &NiftyRegisterPortWithElasticLoadBalancerOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyRegisterPortWithElasticLoadBalancer API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyRegisterPortWithElasticLoadBalancer for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyRegisterPortWithElasticLoadBalancer
func (c *Computing) NiftyRegisterPortWithElasticLoadBalancer(input *NiftyRegisterPortWithElasticLoadBalancerInput) (*NiftyRegisterPortWithElasticLoadBalancerOutput, error) {
	req, out := c.NiftyRegisterPortWithElasticLoadBalancerRequest(input)
	return out, req.Send()
}

// NiftyRegisterPortWithElasticLoadBalancerWithContext is the same as NiftyRegisterPortWithElasticLoadBalancer with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyRegisterPortWithElasticLoadBalancer for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyRegisterPortWithElasticLoadBalancerWithContext(ctx nifcloud.Context, input *NiftyRegisterPortWithElasticLoadBalancerInput, opts ...request.Option) (*NiftyRegisterPortWithElasticLoadBalancerOutput, error) {
	req, out := c.NiftyRegisterPortWithElasticLoadBalancerRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyRegisterRoutersWithSecurityGroup = "NiftyRegisterRoutersWithSecurityGroup"

// NiftyRegisterRoutersWithSecurityGroupRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyRegisterRoutersWithSecurityGroup operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyRegisterRoutersWithSecurityGroup for more information on using the NiftyRegisterRoutersWithSecurityGroup
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyRegisterRoutersWithSecurityGroupRequest method.
//    req, resp := client.NiftyRegisterRoutersWithSecurityGroupRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyRegisterRoutersWithSecurityGroup
func (c *Computing) NiftyRegisterRoutersWithSecurityGroupRequest(input *NiftyRegisterRoutersWithSecurityGroupInput) (req *request.Request, output *NiftyRegisterRoutersWithSecurityGroupOutput) {
	op := &request.Operation{
		Name:       opNiftyRegisterRoutersWithSecurityGroup,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyRegisterRoutersWithSecurityGroupInput{}
	}

	output = &NiftyRegisterRoutersWithSecurityGroupOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyRegisterRoutersWithSecurityGroup API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyRegisterRoutersWithSecurityGroup for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyRegisterRoutersWithSecurityGroup
func (c *Computing) NiftyRegisterRoutersWithSecurityGroup(input *NiftyRegisterRoutersWithSecurityGroupInput) (*NiftyRegisterRoutersWithSecurityGroupOutput, error) {
	req, out := c.NiftyRegisterRoutersWithSecurityGroupRequest(input)
	return out, req.Send()
}

// NiftyRegisterRoutersWithSecurityGroupWithContext is the same as NiftyRegisterRoutersWithSecurityGroup with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyRegisterRoutersWithSecurityGroup for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyRegisterRoutersWithSecurityGroupWithContext(ctx nifcloud.Context, input *NiftyRegisterRoutersWithSecurityGroupInput, opts ...request.Option) (*NiftyRegisterRoutersWithSecurityGroupOutput, error) {
	req, out := c.NiftyRegisterRoutersWithSecurityGroupRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyRegisterVpnGatewaysWithSecurityGroup = "NiftyRegisterVpnGatewaysWithSecurityGroup"

// NiftyRegisterVpnGatewaysWithSecurityGroupRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyRegisterVpnGatewaysWithSecurityGroup operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyRegisterVpnGatewaysWithSecurityGroup for more information on using the NiftyRegisterVpnGatewaysWithSecurityGroup
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyRegisterVpnGatewaysWithSecurityGroupRequest method.
//    req, resp := client.NiftyRegisterVpnGatewaysWithSecurityGroupRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyRegisterVpnGatewaysWithSecurityGroup
func (c *Computing) NiftyRegisterVpnGatewaysWithSecurityGroupRequest(input *NiftyRegisterVpnGatewaysWithSecurityGroupInput) (req *request.Request, output *NiftyRegisterVpnGatewaysWithSecurityGroupOutput) {
	op := &request.Operation{
		Name:       opNiftyRegisterVpnGatewaysWithSecurityGroup,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyRegisterVpnGatewaysWithSecurityGroupInput{}
	}

	output = &NiftyRegisterVpnGatewaysWithSecurityGroupOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyRegisterVpnGatewaysWithSecurityGroup API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyRegisterVpnGatewaysWithSecurityGroup for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyRegisterVpnGatewaysWithSecurityGroup
func (c *Computing) NiftyRegisterVpnGatewaysWithSecurityGroup(input *NiftyRegisterVpnGatewaysWithSecurityGroupInput) (*NiftyRegisterVpnGatewaysWithSecurityGroupOutput, error) {
	req, out := c.NiftyRegisterVpnGatewaysWithSecurityGroupRequest(input)
	return out, req.Send()
}

// NiftyRegisterVpnGatewaysWithSecurityGroupWithContext is the same as NiftyRegisterVpnGatewaysWithSecurityGroup with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyRegisterVpnGatewaysWithSecurityGroup for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyRegisterVpnGatewaysWithSecurityGroupWithContext(ctx nifcloud.Context, input *NiftyRegisterVpnGatewaysWithSecurityGroupInput, opts ...request.Option) (*NiftyRegisterVpnGatewaysWithSecurityGroupOutput, error) {
	req, out := c.NiftyRegisterVpnGatewaysWithSecurityGroupRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyReleaseRouterBackupState = "NiftyReleaseRouterBackupState"

// NiftyReleaseRouterBackupStateRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyReleaseRouterBackupState operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyReleaseRouterBackupState for more information on using the NiftyReleaseRouterBackupState
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyReleaseRouterBackupStateRequest method.
//    req, resp := client.NiftyReleaseRouterBackupStateRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyReleaseRouterBackupState
func (c *Computing) NiftyReleaseRouterBackupStateRequest(input *NiftyReleaseRouterBackupStateInput) (req *request.Request, output *NiftyReleaseRouterBackupStateOutput) {
	op := &request.Operation{
		Name:       opNiftyReleaseRouterBackupState,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyReleaseRouterBackupStateInput{}
	}

	output = &NiftyReleaseRouterBackupStateOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyReleaseRouterBackupState API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyReleaseRouterBackupState for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyReleaseRouterBackupState
func (c *Computing) NiftyReleaseRouterBackupState(input *NiftyReleaseRouterBackupStateInput) (*NiftyReleaseRouterBackupStateOutput, error) {
	req, out := c.NiftyReleaseRouterBackupStateRequest(input)
	return out, req.Send()
}

// NiftyReleaseRouterBackupStateWithContext is the same as NiftyReleaseRouterBackupState with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyReleaseRouterBackupState for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyReleaseRouterBackupStateWithContext(ctx nifcloud.Context, input *NiftyReleaseRouterBackupStateInput, opts ...request.Option) (*NiftyReleaseRouterBackupStateOutput, error) {
	req, out := c.NiftyReleaseRouterBackupStateRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyReleaseVpnGatewayBackupState = "NiftyReleaseVpnGatewayBackupState"

// NiftyReleaseVpnGatewayBackupStateRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyReleaseVpnGatewayBackupState operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyReleaseVpnGatewayBackupState for more information on using the NiftyReleaseVpnGatewayBackupState
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyReleaseVpnGatewayBackupStateRequest method.
//    req, resp := client.NiftyReleaseVpnGatewayBackupStateRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyReleaseVpnGatewayBackupState
func (c *Computing) NiftyReleaseVpnGatewayBackupStateRequest(input *NiftyReleaseVpnGatewayBackupStateInput) (req *request.Request, output *NiftyReleaseVpnGatewayBackupStateOutput) {
	op := &request.Operation{
		Name:       opNiftyReleaseVpnGatewayBackupState,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyReleaseVpnGatewayBackupStateInput{}
	}

	output = &NiftyReleaseVpnGatewayBackupStateOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyReleaseVpnGatewayBackupState API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyReleaseVpnGatewayBackupState for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyReleaseVpnGatewayBackupState
func (c *Computing) NiftyReleaseVpnGatewayBackupState(input *NiftyReleaseVpnGatewayBackupStateInput) (*NiftyReleaseVpnGatewayBackupStateOutput, error) {
	req, out := c.NiftyReleaseVpnGatewayBackupStateRequest(input)
	return out, req.Send()
}

// NiftyReleaseVpnGatewayBackupStateWithContext is the same as NiftyReleaseVpnGatewayBackupState with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyReleaseVpnGatewayBackupState for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyReleaseVpnGatewayBackupStateWithContext(ctx nifcloud.Context, input *NiftyReleaseVpnGatewayBackupStateInput, opts ...request.Option) (*NiftyReleaseVpnGatewayBackupStateOutput, error) {
	req, out := c.NiftyReleaseVpnGatewayBackupStateRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyReplaceDhcpConfig = "NiftyReplaceDhcpConfig"

// NiftyReplaceDhcpConfigRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyReplaceDhcpConfig operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyReplaceDhcpConfig for more information on using the NiftyReplaceDhcpConfig
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyReplaceDhcpConfigRequest method.
//    req, resp := client.NiftyReplaceDhcpConfigRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyReplaceDhcpConfig
func (c *Computing) NiftyReplaceDhcpConfigRequest(input *NiftyReplaceDhcpConfigInput) (req *request.Request, output *NiftyReplaceDhcpConfigOutput) {
	op := &request.Operation{
		Name:       opNiftyReplaceDhcpConfig,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyReplaceDhcpConfigInput{}
	}

	output = &NiftyReplaceDhcpConfigOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyReplaceDhcpConfig API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyReplaceDhcpConfig for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyReplaceDhcpConfig
func (c *Computing) NiftyReplaceDhcpConfig(input *NiftyReplaceDhcpConfigInput) (*NiftyReplaceDhcpConfigOutput, error) {
	req, out := c.NiftyReplaceDhcpConfigRequest(input)
	return out, req.Send()
}

// NiftyReplaceDhcpConfigWithContext is the same as NiftyReplaceDhcpConfig with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyReplaceDhcpConfig for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyReplaceDhcpConfigWithContext(ctx nifcloud.Context, input *NiftyReplaceDhcpConfigInput, opts ...request.Option) (*NiftyReplaceDhcpConfigOutput, error) {
	req, out := c.NiftyReplaceDhcpConfigRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyReplaceDhcpOption = "NiftyReplaceDhcpOption"

// NiftyReplaceDhcpOptionRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyReplaceDhcpOption operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyReplaceDhcpOption for more information on using the NiftyReplaceDhcpOption
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyReplaceDhcpOptionRequest method.
//    req, resp := client.NiftyReplaceDhcpOptionRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyReplaceDhcpOption
func (c *Computing) NiftyReplaceDhcpOptionRequest(input *NiftyReplaceDhcpOptionInput) (req *request.Request, output *NiftyReplaceDhcpOptionOutput) {
	op := &request.Operation{
		Name:       opNiftyReplaceDhcpOption,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyReplaceDhcpOptionInput{}
	}

	output = &NiftyReplaceDhcpOptionOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyReplaceDhcpOption API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyReplaceDhcpOption for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyReplaceDhcpOption
func (c *Computing) NiftyReplaceDhcpOption(input *NiftyReplaceDhcpOptionInput) (*NiftyReplaceDhcpOptionOutput, error) {
	req, out := c.NiftyReplaceDhcpOptionRequest(input)
	return out, req.Send()
}

// NiftyReplaceDhcpOptionWithContext is the same as NiftyReplaceDhcpOption with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyReplaceDhcpOption for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyReplaceDhcpOptionWithContext(ctx nifcloud.Context, input *NiftyReplaceDhcpOptionInput, opts ...request.Option) (*NiftyReplaceDhcpOptionOutput, error) {
	req, out := c.NiftyReplaceDhcpOptionRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyReplaceElasticLoadBalancerLatestVersion = "NiftyReplaceElasticLoadBalancerLatestVersion"

// NiftyReplaceElasticLoadBalancerLatestVersionRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyReplaceElasticLoadBalancerLatestVersion operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyReplaceElasticLoadBalancerLatestVersion for more information on using the NiftyReplaceElasticLoadBalancerLatestVersion
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyReplaceElasticLoadBalancerLatestVersionRequest method.
//    req, resp := client.NiftyReplaceElasticLoadBalancerLatestVersionRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyReplaceElasticLoadBalancerLatestVersion
func (c *Computing) NiftyReplaceElasticLoadBalancerLatestVersionRequest(input *NiftyReplaceElasticLoadBalancerLatestVersionInput) (req *request.Request, output *NiftyReplaceElasticLoadBalancerLatestVersionOutput) {
	op := &request.Operation{
		Name:       opNiftyReplaceElasticLoadBalancerLatestVersion,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyReplaceElasticLoadBalancerLatestVersionInput{}
	}

	output = &NiftyReplaceElasticLoadBalancerLatestVersionOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyReplaceElasticLoadBalancerLatestVersion API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyReplaceElasticLoadBalancerLatestVersion for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyReplaceElasticLoadBalancerLatestVersion
func (c *Computing) NiftyReplaceElasticLoadBalancerLatestVersion(input *NiftyReplaceElasticLoadBalancerLatestVersionInput) (*NiftyReplaceElasticLoadBalancerLatestVersionOutput, error) {
	req, out := c.NiftyReplaceElasticLoadBalancerLatestVersionRequest(input)
	return out, req.Send()
}

// NiftyReplaceElasticLoadBalancerLatestVersionWithContext is the same as NiftyReplaceElasticLoadBalancerLatestVersion with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyReplaceElasticLoadBalancerLatestVersion for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyReplaceElasticLoadBalancerLatestVersionWithContext(ctx nifcloud.Context, input *NiftyReplaceElasticLoadBalancerLatestVersionInput, opts ...request.Option) (*NiftyReplaceElasticLoadBalancerLatestVersionOutput, error) {
	req, out := c.NiftyReplaceElasticLoadBalancerLatestVersionRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyReplaceNatRule = "NiftyReplaceNatRule"

// NiftyReplaceNatRuleRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyReplaceNatRule operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyReplaceNatRule for more information on using the NiftyReplaceNatRule
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyReplaceNatRuleRequest method.
//    req, resp := client.NiftyReplaceNatRuleRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyReplaceNatRule
func (c *Computing) NiftyReplaceNatRuleRequest(input *NiftyReplaceNatRuleInput) (req *request.Request, output *NiftyReplaceNatRuleOutput) {
	op := &request.Operation{
		Name:       opNiftyReplaceNatRule,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyReplaceNatRuleInput{}
	}

	output = &NiftyReplaceNatRuleOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyReplaceNatRule API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyReplaceNatRule for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyReplaceNatRule
func (c *Computing) NiftyReplaceNatRule(input *NiftyReplaceNatRuleInput) (*NiftyReplaceNatRuleOutput, error) {
	req, out := c.NiftyReplaceNatRuleRequest(input)
	return out, req.Send()
}

// NiftyReplaceNatRuleWithContext is the same as NiftyReplaceNatRule with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyReplaceNatRule for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyReplaceNatRuleWithContext(ctx nifcloud.Context, input *NiftyReplaceNatRuleInput, opts ...request.Option) (*NiftyReplaceNatRuleOutput, error) {
	req, out := c.NiftyReplaceNatRuleRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyReplaceNatTableAssociation = "NiftyReplaceNatTableAssociation"

// NiftyReplaceNatTableAssociationRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyReplaceNatTableAssociation operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyReplaceNatTableAssociation for more information on using the NiftyReplaceNatTableAssociation
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyReplaceNatTableAssociationRequest method.
//    req, resp := client.NiftyReplaceNatTableAssociationRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyReplaceNatTableAssociation
func (c *Computing) NiftyReplaceNatTableAssociationRequest(input *NiftyReplaceNatTableAssociationInput) (req *request.Request, output *NiftyReplaceNatTableAssociationOutput) {
	op := &request.Operation{
		Name:       opNiftyReplaceNatTableAssociation,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyReplaceNatTableAssociationInput{}
	}

	output = &NiftyReplaceNatTableAssociationOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyReplaceNatTableAssociation API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyReplaceNatTableAssociation for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyReplaceNatTableAssociation
func (c *Computing) NiftyReplaceNatTableAssociation(input *NiftyReplaceNatTableAssociationInput) (*NiftyReplaceNatTableAssociationOutput, error) {
	req, out := c.NiftyReplaceNatTableAssociationRequest(input)
	return out, req.Send()
}

// NiftyReplaceNatTableAssociationWithContext is the same as NiftyReplaceNatTableAssociation with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyReplaceNatTableAssociation for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyReplaceNatTableAssociationWithContext(ctx nifcloud.Context, input *NiftyReplaceNatTableAssociationInput, opts ...request.Option) (*NiftyReplaceNatTableAssociationOutput, error) {
	req, out := c.NiftyReplaceNatTableAssociationRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyReplaceRouteTableAssociationWithVpnGateway = "NiftyReplaceRouteTableAssociationWithVpnGateway"

// NiftyReplaceRouteTableAssociationWithVpnGatewayRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyReplaceRouteTableAssociationWithVpnGateway operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyReplaceRouteTableAssociationWithVpnGateway for more information on using the NiftyReplaceRouteTableAssociationWithVpnGateway
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyReplaceRouteTableAssociationWithVpnGatewayRequest method.
//    req, resp := client.NiftyReplaceRouteTableAssociationWithVpnGatewayRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyReplaceRouteTableAssociationWithVpnGateway
func (c *Computing) NiftyReplaceRouteTableAssociationWithVpnGatewayRequest(input *NiftyReplaceRouteTableAssociationWithVpnGatewayInput) (req *request.Request, output *NiftyReplaceRouteTableAssociationWithVpnGatewayOutput) {
	op := &request.Operation{
		Name:       opNiftyReplaceRouteTableAssociationWithVpnGateway,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyReplaceRouteTableAssociationWithVpnGatewayInput{}
	}

	output = &NiftyReplaceRouteTableAssociationWithVpnGatewayOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyReplaceRouteTableAssociationWithVpnGateway API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyReplaceRouteTableAssociationWithVpnGateway for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyReplaceRouteTableAssociationWithVpnGateway
func (c *Computing) NiftyReplaceRouteTableAssociationWithVpnGateway(input *NiftyReplaceRouteTableAssociationWithVpnGatewayInput) (*NiftyReplaceRouteTableAssociationWithVpnGatewayOutput, error) {
	req, out := c.NiftyReplaceRouteTableAssociationWithVpnGatewayRequest(input)
	return out, req.Send()
}

// NiftyReplaceRouteTableAssociationWithVpnGatewayWithContext is the same as NiftyReplaceRouteTableAssociationWithVpnGateway with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyReplaceRouteTableAssociationWithVpnGateway for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyReplaceRouteTableAssociationWithVpnGatewayWithContext(ctx nifcloud.Context, input *NiftyReplaceRouteTableAssociationWithVpnGatewayInput, opts ...request.Option) (*NiftyReplaceRouteTableAssociationWithVpnGatewayOutput, error) {
	req, out := c.NiftyReplaceRouteTableAssociationWithVpnGatewayRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyReplaceRouterLatestVersion = "NiftyReplaceRouterLatestVersion"

// NiftyReplaceRouterLatestVersionRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyReplaceRouterLatestVersion operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyReplaceRouterLatestVersion for more information on using the NiftyReplaceRouterLatestVersion
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyReplaceRouterLatestVersionRequest method.
//    req, resp := client.NiftyReplaceRouterLatestVersionRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyReplaceRouterLatestVersion
func (c *Computing) NiftyReplaceRouterLatestVersionRequest(input *NiftyReplaceRouterLatestVersionInput) (req *request.Request, output *NiftyReplaceRouterLatestVersionOutput) {
	op := &request.Operation{
		Name:       opNiftyReplaceRouterLatestVersion,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyReplaceRouterLatestVersionInput{}
	}

	output = &NiftyReplaceRouterLatestVersionOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyReplaceRouterLatestVersion API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyReplaceRouterLatestVersion for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyReplaceRouterLatestVersion
func (c *Computing) NiftyReplaceRouterLatestVersion(input *NiftyReplaceRouterLatestVersionInput) (*NiftyReplaceRouterLatestVersionOutput, error) {
	req, out := c.NiftyReplaceRouterLatestVersionRequest(input)
	return out, req.Send()
}

// NiftyReplaceRouterLatestVersionWithContext is the same as NiftyReplaceRouterLatestVersion with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyReplaceRouterLatestVersion for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyReplaceRouterLatestVersionWithContext(ctx nifcloud.Context, input *NiftyReplaceRouterLatestVersionInput, opts ...request.Option) (*NiftyReplaceRouterLatestVersionOutput, error) {
	req, out := c.NiftyReplaceRouterLatestVersionRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyReplaceVpnGatewayLatestVersion = "NiftyReplaceVpnGatewayLatestVersion"

// NiftyReplaceVpnGatewayLatestVersionRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyReplaceVpnGatewayLatestVersion operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyReplaceVpnGatewayLatestVersion for more information on using the NiftyReplaceVpnGatewayLatestVersion
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyReplaceVpnGatewayLatestVersionRequest method.
//    req, resp := client.NiftyReplaceVpnGatewayLatestVersionRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyReplaceVpnGatewayLatestVersion
func (c *Computing) NiftyReplaceVpnGatewayLatestVersionRequest(input *NiftyReplaceVpnGatewayLatestVersionInput) (req *request.Request, output *NiftyReplaceVpnGatewayLatestVersionOutput) {
	op := &request.Operation{
		Name:       opNiftyReplaceVpnGatewayLatestVersion,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyReplaceVpnGatewayLatestVersionInput{}
	}

	output = &NiftyReplaceVpnGatewayLatestVersionOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyReplaceVpnGatewayLatestVersion API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyReplaceVpnGatewayLatestVersion for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyReplaceVpnGatewayLatestVersion
func (c *Computing) NiftyReplaceVpnGatewayLatestVersion(input *NiftyReplaceVpnGatewayLatestVersionInput) (*NiftyReplaceVpnGatewayLatestVersionOutput, error) {
	req, out := c.NiftyReplaceVpnGatewayLatestVersionRequest(input)
	return out, req.Send()
}

// NiftyReplaceVpnGatewayLatestVersionWithContext is the same as NiftyReplaceVpnGatewayLatestVersion with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyReplaceVpnGatewayLatestVersion for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyReplaceVpnGatewayLatestVersionWithContext(ctx nifcloud.Context, input *NiftyReplaceVpnGatewayLatestVersionInput, opts ...request.Option) (*NiftyReplaceVpnGatewayLatestVersionOutput, error) {
	req, out := c.NiftyReplaceVpnGatewayLatestVersionRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyRestoreInstanceSnapshot = "NiftyRestoreInstanceSnapshot"

// NiftyRestoreInstanceSnapshotRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyRestoreInstanceSnapshot operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyRestoreInstanceSnapshot for more information on using the NiftyRestoreInstanceSnapshot
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyRestoreInstanceSnapshotRequest method.
//    req, resp := client.NiftyRestoreInstanceSnapshotRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyRestoreInstanceSnapshot
func (c *Computing) NiftyRestoreInstanceSnapshotRequest(input *NiftyRestoreInstanceSnapshotInput) (req *request.Request, output *NiftyRestoreInstanceSnapshotOutput) {
	op := &request.Operation{
		Name:       opNiftyRestoreInstanceSnapshot,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyRestoreInstanceSnapshotInput{}
	}

	output = &NiftyRestoreInstanceSnapshotOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyRestoreInstanceSnapshot API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyRestoreInstanceSnapshot for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyRestoreInstanceSnapshot
func (c *Computing) NiftyRestoreInstanceSnapshot(input *NiftyRestoreInstanceSnapshotInput) (*NiftyRestoreInstanceSnapshotOutput, error) {
	req, out := c.NiftyRestoreInstanceSnapshotRequest(input)
	return out, req.Send()
}

// NiftyRestoreInstanceSnapshotWithContext is the same as NiftyRestoreInstanceSnapshot with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyRestoreInstanceSnapshot for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyRestoreInstanceSnapshotWithContext(ctx nifcloud.Context, input *NiftyRestoreInstanceSnapshotInput, opts ...request.Option) (*NiftyRestoreInstanceSnapshotOutput, error) {
	req, out := c.NiftyRestoreInstanceSnapshotRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyRestoreRouterPreviousVersion = "NiftyRestoreRouterPreviousVersion"

// NiftyRestoreRouterPreviousVersionRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyRestoreRouterPreviousVersion operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyRestoreRouterPreviousVersion for more information on using the NiftyRestoreRouterPreviousVersion
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyRestoreRouterPreviousVersionRequest method.
//    req, resp := client.NiftyRestoreRouterPreviousVersionRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyRestoreRouterPreviousVersion
func (c *Computing) NiftyRestoreRouterPreviousVersionRequest(input *NiftyRestoreRouterPreviousVersionInput) (req *request.Request, output *NiftyRestoreRouterPreviousVersionOutput) {
	op := &request.Operation{
		Name:       opNiftyRestoreRouterPreviousVersion,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyRestoreRouterPreviousVersionInput{}
	}

	output = &NiftyRestoreRouterPreviousVersionOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyRestoreRouterPreviousVersion API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyRestoreRouterPreviousVersion for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyRestoreRouterPreviousVersion
func (c *Computing) NiftyRestoreRouterPreviousVersion(input *NiftyRestoreRouterPreviousVersionInput) (*NiftyRestoreRouterPreviousVersionOutput, error) {
	req, out := c.NiftyRestoreRouterPreviousVersionRequest(input)
	return out, req.Send()
}

// NiftyRestoreRouterPreviousVersionWithContext is the same as NiftyRestoreRouterPreviousVersion with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyRestoreRouterPreviousVersion for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyRestoreRouterPreviousVersionWithContext(ctx nifcloud.Context, input *NiftyRestoreRouterPreviousVersionInput, opts ...request.Option) (*NiftyRestoreRouterPreviousVersionOutput, error) {
	req, out := c.NiftyRestoreRouterPreviousVersionRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyRestoreVpnGatewayPreviousVersion = "NiftyRestoreVpnGatewayPreviousVersion"

// NiftyRestoreVpnGatewayPreviousVersionRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyRestoreVpnGatewayPreviousVersion operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyRestoreVpnGatewayPreviousVersion for more information on using the NiftyRestoreVpnGatewayPreviousVersion
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyRestoreVpnGatewayPreviousVersionRequest method.
//    req, resp := client.NiftyRestoreVpnGatewayPreviousVersionRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyRestoreVpnGatewayPreviousVersion
func (c *Computing) NiftyRestoreVpnGatewayPreviousVersionRequest(input *NiftyRestoreVpnGatewayPreviousVersionInput) (req *request.Request, output *NiftyRestoreVpnGatewayPreviousVersionOutput) {
	op := &request.Operation{
		Name:       opNiftyRestoreVpnGatewayPreviousVersion,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyRestoreVpnGatewayPreviousVersionInput{}
	}

	output = &NiftyRestoreVpnGatewayPreviousVersionOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyRestoreVpnGatewayPreviousVersion API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyRestoreVpnGatewayPreviousVersion for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyRestoreVpnGatewayPreviousVersion
func (c *Computing) NiftyRestoreVpnGatewayPreviousVersion(input *NiftyRestoreVpnGatewayPreviousVersionInput) (*NiftyRestoreVpnGatewayPreviousVersionOutput, error) {
	req, out := c.NiftyRestoreVpnGatewayPreviousVersionRequest(input)
	return out, req.Send()
}

// NiftyRestoreVpnGatewayPreviousVersionWithContext is the same as NiftyRestoreVpnGatewayPreviousVersion with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyRestoreVpnGatewayPreviousVersion for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyRestoreVpnGatewayPreviousVersionWithContext(ctx nifcloud.Context, input *NiftyRestoreVpnGatewayPreviousVersionInput, opts ...request.Option) (*NiftyRestoreVpnGatewayPreviousVersionOutput, error) {
	req, out := c.NiftyRestoreVpnGatewayPreviousVersionRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyRetryImportInstance = "NiftyRetryImportInstance"

// NiftyRetryImportInstanceRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyRetryImportInstance operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyRetryImportInstance for more information on using the NiftyRetryImportInstance
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyRetryImportInstanceRequest method.
//    req, resp := client.NiftyRetryImportInstanceRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyRetryImportInstance
func (c *Computing) NiftyRetryImportInstanceRequest(input *NiftyRetryImportInstanceInput) (req *request.Request, output *NiftyRetryImportInstanceOutput) {
	op := &request.Operation{
		Name:       opNiftyRetryImportInstance,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyRetryImportInstanceInput{}
	}

	output = &NiftyRetryImportInstanceOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyRetryImportInstance API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyRetryImportInstance for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyRetryImportInstance
func (c *Computing) NiftyRetryImportInstance(input *NiftyRetryImportInstanceInput) (*NiftyRetryImportInstanceOutput, error) {
	req, out := c.NiftyRetryImportInstanceRequest(input)
	return out, req.Send()
}

// NiftyRetryImportInstanceWithContext is the same as NiftyRetryImportInstance with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyRetryImportInstance for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyRetryImportInstanceWithContext(ctx nifcloud.Context, input *NiftyRetryImportInstanceInput, opts ...request.Option) (*NiftyRetryImportInstanceOutput, error) {
	req, out := c.NiftyRetryImportInstanceRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyUpdateAlarm = "NiftyUpdateAlarm"

// NiftyUpdateAlarmRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyUpdateAlarm operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyUpdateAlarm for more information on using the NiftyUpdateAlarm
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyUpdateAlarmRequest method.
//    req, resp := client.NiftyUpdateAlarmRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyUpdateAlarm
func (c *Computing) NiftyUpdateAlarmRequest(input *NiftyUpdateAlarmInput) (req *request.Request, output *NiftyUpdateAlarmOutput) {
	op := &request.Operation{
		Name:       opNiftyUpdateAlarm,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyUpdateAlarmInput{}
	}

	output = &NiftyUpdateAlarmOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyUpdateAlarm API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyUpdateAlarm for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyUpdateAlarm
func (c *Computing) NiftyUpdateAlarm(input *NiftyUpdateAlarmInput) (*NiftyUpdateAlarmOutput, error) {
	req, out := c.NiftyUpdateAlarmRequest(input)
	return out, req.Send()
}

// NiftyUpdateAlarmWithContext is the same as NiftyUpdateAlarm with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyUpdateAlarm for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyUpdateAlarmWithContext(ctx nifcloud.Context, input *NiftyUpdateAlarmInput, opts ...request.Option) (*NiftyUpdateAlarmOutput, error) {
	req, out := c.NiftyUpdateAlarmRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyUpdateAutoScalingGroup = "NiftyUpdateAutoScalingGroup"

// NiftyUpdateAutoScalingGroupRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyUpdateAutoScalingGroup operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyUpdateAutoScalingGroup for more information on using the NiftyUpdateAutoScalingGroup
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyUpdateAutoScalingGroupRequest method.
//    req, resp := client.NiftyUpdateAutoScalingGroupRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyUpdateAutoScalingGroup
func (c *Computing) NiftyUpdateAutoScalingGroupRequest(input *NiftyUpdateAutoScalingGroupInput) (req *request.Request, output *NiftyUpdateAutoScalingGroupOutput) {
	op := &request.Operation{
		Name:       opNiftyUpdateAutoScalingGroup,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyUpdateAutoScalingGroupInput{}
	}

	output = &NiftyUpdateAutoScalingGroupOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyUpdateAutoScalingGroup API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyUpdateAutoScalingGroup for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyUpdateAutoScalingGroup
func (c *Computing) NiftyUpdateAutoScalingGroup(input *NiftyUpdateAutoScalingGroupInput) (*NiftyUpdateAutoScalingGroupOutput, error) {
	req, out := c.NiftyUpdateAutoScalingGroupRequest(input)
	return out, req.Send()
}

// NiftyUpdateAutoScalingGroupWithContext is the same as NiftyUpdateAutoScalingGroup with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyUpdateAutoScalingGroup for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyUpdateAutoScalingGroupWithContext(ctx nifcloud.Context, input *NiftyUpdateAutoScalingGroupInput, opts ...request.Option) (*NiftyUpdateAutoScalingGroupOutput, error) {
	req, out := c.NiftyUpdateAutoScalingGroupRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyUpdateElasticLoadBalancer = "NiftyUpdateElasticLoadBalancer"

// NiftyUpdateElasticLoadBalancerRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyUpdateElasticLoadBalancer operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyUpdateElasticLoadBalancer for more information on using the NiftyUpdateElasticLoadBalancer
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyUpdateElasticLoadBalancerRequest method.
//    req, resp := client.NiftyUpdateElasticLoadBalancerRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyUpdateElasticLoadBalancer
func (c *Computing) NiftyUpdateElasticLoadBalancerRequest(input *NiftyUpdateElasticLoadBalancerInput) (req *request.Request, output *NiftyUpdateElasticLoadBalancerOutput) {
	op := &request.Operation{
		Name:       opNiftyUpdateElasticLoadBalancer,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyUpdateElasticLoadBalancerInput{}
	}

	output = &NiftyUpdateElasticLoadBalancerOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyUpdateElasticLoadBalancer API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyUpdateElasticLoadBalancer for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyUpdateElasticLoadBalancer
func (c *Computing) NiftyUpdateElasticLoadBalancer(input *NiftyUpdateElasticLoadBalancerInput) (*NiftyUpdateElasticLoadBalancerOutput, error) {
	req, out := c.NiftyUpdateElasticLoadBalancerRequest(input)
	return out, req.Send()
}

// NiftyUpdateElasticLoadBalancerWithContext is the same as NiftyUpdateElasticLoadBalancer with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyUpdateElasticLoadBalancer for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyUpdateElasticLoadBalancerWithContext(ctx nifcloud.Context, input *NiftyUpdateElasticLoadBalancerInput, opts ...request.Option) (*NiftyUpdateElasticLoadBalancerOutput, error) {
	req, out := c.NiftyUpdateElasticLoadBalancerRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyUpdateInstanceNetworkInterfaces = "NiftyUpdateInstanceNetworkInterfaces"

// NiftyUpdateInstanceNetworkInterfacesRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyUpdateInstanceNetworkInterfaces operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyUpdateInstanceNetworkInterfaces for more information on using the NiftyUpdateInstanceNetworkInterfaces
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyUpdateInstanceNetworkInterfacesRequest method.
//    req, resp := client.NiftyUpdateInstanceNetworkInterfacesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyUpdateInstanceNetworkInterfaces
func (c *Computing) NiftyUpdateInstanceNetworkInterfacesRequest(input *NiftyUpdateInstanceNetworkInterfacesInput) (req *request.Request, output *NiftyUpdateInstanceNetworkInterfacesOutput) {
	op := &request.Operation{
		Name:       opNiftyUpdateInstanceNetworkInterfaces,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyUpdateInstanceNetworkInterfacesInput{}
	}

	output = &NiftyUpdateInstanceNetworkInterfacesOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyUpdateInstanceNetworkInterfaces API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyUpdateInstanceNetworkInterfaces for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyUpdateInstanceNetworkInterfaces
func (c *Computing) NiftyUpdateInstanceNetworkInterfaces(input *NiftyUpdateInstanceNetworkInterfacesInput) (*NiftyUpdateInstanceNetworkInterfacesOutput, error) {
	req, out := c.NiftyUpdateInstanceNetworkInterfacesRequest(input)
	return out, req.Send()
}

// NiftyUpdateInstanceNetworkInterfacesWithContext is the same as NiftyUpdateInstanceNetworkInterfaces with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyUpdateInstanceNetworkInterfaces for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyUpdateInstanceNetworkInterfacesWithContext(ctx nifcloud.Context, input *NiftyUpdateInstanceNetworkInterfacesInput, opts ...request.Option) (*NiftyUpdateInstanceNetworkInterfacesOutput, error) {
	req, out := c.NiftyUpdateInstanceNetworkInterfacesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyUpdateRouterNetworkInterfaces = "NiftyUpdateRouterNetworkInterfaces"

// NiftyUpdateRouterNetworkInterfacesRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyUpdateRouterNetworkInterfaces operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyUpdateRouterNetworkInterfaces for more information on using the NiftyUpdateRouterNetworkInterfaces
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyUpdateRouterNetworkInterfacesRequest method.
//    req, resp := client.NiftyUpdateRouterNetworkInterfacesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyUpdateRouterNetworkInterfaces
func (c *Computing) NiftyUpdateRouterNetworkInterfacesRequest(input *NiftyUpdateRouterNetworkInterfacesInput) (req *request.Request, output *NiftyUpdateRouterNetworkInterfacesOutput) {
	op := &request.Operation{
		Name:       opNiftyUpdateRouterNetworkInterfaces,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyUpdateRouterNetworkInterfacesInput{}
	}

	output = &NiftyUpdateRouterNetworkInterfacesOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyUpdateRouterNetworkInterfaces API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyUpdateRouterNetworkInterfaces for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyUpdateRouterNetworkInterfaces
func (c *Computing) NiftyUpdateRouterNetworkInterfaces(input *NiftyUpdateRouterNetworkInterfacesInput) (*NiftyUpdateRouterNetworkInterfacesOutput, error) {
	req, out := c.NiftyUpdateRouterNetworkInterfacesRequest(input)
	return out, req.Send()
}

// NiftyUpdateRouterNetworkInterfacesWithContext is the same as NiftyUpdateRouterNetworkInterfaces with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyUpdateRouterNetworkInterfaces for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyUpdateRouterNetworkInterfacesWithContext(ctx nifcloud.Context, input *NiftyUpdateRouterNetworkInterfacesInput, opts ...request.Option) (*NiftyUpdateRouterNetworkInterfacesOutput, error) {
	req, out := c.NiftyUpdateRouterNetworkInterfacesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyUpdateSeparateInstanceRule = "NiftyUpdateSeparateInstanceRule"

// NiftyUpdateSeparateInstanceRuleRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyUpdateSeparateInstanceRule operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyUpdateSeparateInstanceRule for more information on using the NiftyUpdateSeparateInstanceRule
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyUpdateSeparateInstanceRuleRequest method.
//    req, resp := client.NiftyUpdateSeparateInstanceRuleRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyUpdateSeparateInstanceRule
func (c *Computing) NiftyUpdateSeparateInstanceRuleRequest(input *NiftyUpdateSeparateInstanceRuleInput) (req *request.Request, output *NiftyUpdateSeparateInstanceRuleOutput) {
	op := &request.Operation{
		Name:       opNiftyUpdateSeparateInstanceRule,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyUpdateSeparateInstanceRuleInput{}
	}

	output = &NiftyUpdateSeparateInstanceRuleOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyUpdateSeparateInstanceRule API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyUpdateSeparateInstanceRule for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyUpdateSeparateInstanceRule
func (c *Computing) NiftyUpdateSeparateInstanceRule(input *NiftyUpdateSeparateInstanceRuleInput) (*NiftyUpdateSeparateInstanceRuleOutput, error) {
	req, out := c.NiftyUpdateSeparateInstanceRuleRequest(input)
	return out, req.Send()
}

// NiftyUpdateSeparateInstanceRuleWithContext is the same as NiftyUpdateSeparateInstanceRule with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyUpdateSeparateInstanceRule for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyUpdateSeparateInstanceRuleWithContext(ctx nifcloud.Context, input *NiftyUpdateSeparateInstanceRuleInput, opts ...request.Option) (*NiftyUpdateSeparateInstanceRuleOutput, error) {
	req, out := c.NiftyUpdateSeparateInstanceRuleRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opNiftyUpdateVpnGatewayNetworkInterfaces = "NiftyUpdateVpnGatewayNetworkInterfaces"

// NiftyUpdateVpnGatewayNetworkInterfacesRequest generates a "nifcloud/request.Request" representing the
// client's request for the NiftyUpdateVpnGatewayNetworkInterfaces operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See NiftyUpdateVpnGatewayNetworkInterfaces for more information on using the NiftyUpdateVpnGatewayNetworkInterfaces
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the NiftyUpdateVpnGatewayNetworkInterfacesRequest method.
//    req, resp := client.NiftyUpdateVpnGatewayNetworkInterfacesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyUpdateVpnGatewayNetworkInterfaces
func (c *Computing) NiftyUpdateVpnGatewayNetworkInterfacesRequest(input *NiftyUpdateVpnGatewayNetworkInterfacesInput) (req *request.Request, output *NiftyUpdateVpnGatewayNetworkInterfacesOutput) {
	op := &request.Operation{
		Name:       opNiftyUpdateVpnGatewayNetworkInterfaces,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyUpdateVpnGatewayNetworkInterfacesInput{}
	}

	output = &NiftyUpdateVpnGatewayNetworkInterfacesOutput{}
	req = c.newRequest(op, input, output)
	return
}

// NiftyUpdateVpnGatewayNetworkInterfaces API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation NiftyUpdateVpnGatewayNetworkInterfaces for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/NiftyUpdateVpnGatewayNetworkInterfaces
func (c *Computing) NiftyUpdateVpnGatewayNetworkInterfaces(input *NiftyUpdateVpnGatewayNetworkInterfacesInput) (*NiftyUpdateVpnGatewayNetworkInterfacesOutput, error) {
	req, out := c.NiftyUpdateVpnGatewayNetworkInterfacesRequest(input)
	return out, req.Send()
}

// NiftyUpdateVpnGatewayNetworkInterfacesWithContext is the same as NiftyUpdateVpnGatewayNetworkInterfaces with the addition of
// the ability to pass a context and additional request options.
//
// See NiftyUpdateVpnGatewayNetworkInterfaces for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) NiftyUpdateVpnGatewayNetworkInterfacesWithContext(ctx nifcloud.Context, input *NiftyUpdateVpnGatewayNetworkInterfacesInput, opts ...request.Option) (*NiftyUpdateVpnGatewayNetworkInterfacesOutput, error) {
	req, out := c.NiftyUpdateVpnGatewayNetworkInterfacesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opRebootInstances = "RebootInstances"

// RebootInstancesRequest generates a "nifcloud/request.Request" representing the
// client's request for the RebootInstances operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See RebootInstances for more information on using the RebootInstances
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the RebootInstancesRequest method.
//    req, resp := client.RebootInstancesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/RebootInstances
func (c *Computing) RebootInstancesRequest(input *RebootInstancesInput) (req *request.Request, output *RebootInstancesOutput) {
	op := &request.Operation{
		Name:       opRebootInstances,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &RebootInstancesInput{}
	}

	output = &RebootInstancesOutput{}
	req = c.newRequest(op, input, output)
	return
}

// RebootInstances API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation RebootInstances for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/RebootInstances
func (c *Computing) RebootInstances(input *RebootInstancesInput) (*RebootInstancesOutput, error) {
	req, out := c.RebootInstancesRequest(input)
	return out, req.Send()
}

// RebootInstancesWithContext is the same as RebootInstances with the addition of
// the ability to pass a context and additional request options.
//
// See RebootInstances for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) RebootInstancesWithContext(ctx nifcloud.Context, input *RebootInstancesInput, opts ...request.Option) (*RebootInstancesOutput, error) {
	req, out := c.RebootInstancesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opRegisterCorporateInfoForCertificate = "RegisterCorporateInfoForCertificate"

// RegisterCorporateInfoForCertificateRequest generates a "nifcloud/request.Request" representing the
// client's request for the RegisterCorporateInfoForCertificate operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See RegisterCorporateInfoForCertificate for more information on using the RegisterCorporateInfoForCertificate
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the RegisterCorporateInfoForCertificateRequest method.
//    req, resp := client.RegisterCorporateInfoForCertificateRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/RegisterCorporateInfoForCertificate
func (c *Computing) RegisterCorporateInfoForCertificateRequest(input *RegisterCorporateInfoForCertificateInput) (req *request.Request, output *RegisterCorporateInfoForCertificateOutput) {
	op := &request.Operation{
		Name:       opRegisterCorporateInfoForCertificate,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &RegisterCorporateInfoForCertificateInput{}
	}

	output = &RegisterCorporateInfoForCertificateOutput{}
	req = c.newRequest(op, input, output)
	return
}

// RegisterCorporateInfoForCertificate API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation RegisterCorporateInfoForCertificate for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/RegisterCorporateInfoForCertificate
func (c *Computing) RegisterCorporateInfoForCertificate(input *RegisterCorporateInfoForCertificateInput) (*RegisterCorporateInfoForCertificateOutput, error) {
	req, out := c.RegisterCorporateInfoForCertificateRequest(input)
	return out, req.Send()
}

// RegisterCorporateInfoForCertificateWithContext is the same as RegisterCorporateInfoForCertificate with the addition of
// the ability to pass a context and additional request options.
//
// See RegisterCorporateInfoForCertificate for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) RegisterCorporateInfoForCertificateWithContext(ctx nifcloud.Context, input *RegisterCorporateInfoForCertificateInput, opts ...request.Option) (*RegisterCorporateInfoForCertificateOutput, error) {
	req, out := c.RegisterCorporateInfoForCertificateRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opRegisterInstancesWithLoadBalancer = "RegisterInstancesWithLoadBalancer"

// RegisterInstancesWithLoadBalancerRequest generates a "nifcloud/request.Request" representing the
// client's request for the RegisterInstancesWithLoadBalancer operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See RegisterInstancesWithLoadBalancer for more information on using the RegisterInstancesWithLoadBalancer
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the RegisterInstancesWithLoadBalancerRequest method.
//    req, resp := client.RegisterInstancesWithLoadBalancerRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/RegisterInstancesWithLoadBalancer
func (c *Computing) RegisterInstancesWithLoadBalancerRequest(input *RegisterInstancesWithLoadBalancerInput) (req *request.Request, output *RegisterInstancesWithLoadBalancerOutput) {
	op := &request.Operation{
		Name:       opRegisterInstancesWithLoadBalancer,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &RegisterInstancesWithLoadBalancerInput{}
	}

	output = &RegisterInstancesWithLoadBalancerOutput{}
	req = c.newRequest(op, input, output)
	return
}

// RegisterInstancesWithLoadBalancer API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation RegisterInstancesWithLoadBalancer for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/RegisterInstancesWithLoadBalancer
func (c *Computing) RegisterInstancesWithLoadBalancer(input *RegisterInstancesWithLoadBalancerInput) (*RegisterInstancesWithLoadBalancerOutput, error) {
	req, out := c.RegisterInstancesWithLoadBalancerRequest(input)
	return out, req.Send()
}

// RegisterInstancesWithLoadBalancerWithContext is the same as RegisterInstancesWithLoadBalancer with the addition of
// the ability to pass a context and additional request options.
//
// See RegisterInstancesWithLoadBalancer for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) RegisterInstancesWithLoadBalancerWithContext(ctx nifcloud.Context, input *RegisterInstancesWithLoadBalancerInput, opts ...request.Option) (*RegisterInstancesWithLoadBalancerOutput, error) {
	req, out := c.RegisterInstancesWithLoadBalancerRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opRegisterInstancesWithSecurityGroup = "RegisterInstancesWithSecurityGroup"

// RegisterInstancesWithSecurityGroupRequest generates a "nifcloud/request.Request" representing the
// client's request for the RegisterInstancesWithSecurityGroup operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See RegisterInstancesWithSecurityGroup for more information on using the RegisterInstancesWithSecurityGroup
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the RegisterInstancesWithSecurityGroupRequest method.
//    req, resp := client.RegisterInstancesWithSecurityGroupRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/RegisterInstancesWithSecurityGroup
func (c *Computing) RegisterInstancesWithSecurityGroupRequest(input *RegisterInstancesWithSecurityGroupInput) (req *request.Request, output *RegisterInstancesWithSecurityGroupOutput) {
	op := &request.Operation{
		Name:       opRegisterInstancesWithSecurityGroup,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &RegisterInstancesWithSecurityGroupInput{}
	}

	output = &RegisterInstancesWithSecurityGroupOutput{}
	req = c.newRequest(op, input, output)
	return
}

// RegisterInstancesWithSecurityGroup API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation RegisterInstancesWithSecurityGroup for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/RegisterInstancesWithSecurityGroup
func (c *Computing) RegisterInstancesWithSecurityGroup(input *RegisterInstancesWithSecurityGroupInput) (*RegisterInstancesWithSecurityGroupOutput, error) {
	req, out := c.RegisterInstancesWithSecurityGroupRequest(input)
	return out, req.Send()
}

// RegisterInstancesWithSecurityGroupWithContext is the same as RegisterInstancesWithSecurityGroup with the addition of
// the ability to pass a context and additional request options.
//
// See RegisterInstancesWithSecurityGroup for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) RegisterInstancesWithSecurityGroupWithContext(ctx nifcloud.Context, input *RegisterInstancesWithSecurityGroupInput, opts ...request.Option) (*RegisterInstancesWithSecurityGroupOutput, error) {
	req, out := c.RegisterInstancesWithSecurityGroupRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opRegisterPortWithLoadBalancer = "RegisterPortWithLoadBalancer"

// RegisterPortWithLoadBalancerRequest generates a "nifcloud/request.Request" representing the
// client's request for the RegisterPortWithLoadBalancer operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See RegisterPortWithLoadBalancer for more information on using the RegisterPortWithLoadBalancer
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the RegisterPortWithLoadBalancerRequest method.
//    req, resp := client.RegisterPortWithLoadBalancerRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/RegisterPortWithLoadBalancer
func (c *Computing) RegisterPortWithLoadBalancerRequest(input *RegisterPortWithLoadBalancerInput) (req *request.Request, output *RegisterPortWithLoadBalancerOutput) {
	op := &request.Operation{
		Name:       opRegisterPortWithLoadBalancer,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &RegisterPortWithLoadBalancerInput{}
	}

	output = &RegisterPortWithLoadBalancerOutput{}
	req = c.newRequest(op, input, output)
	return
}

// RegisterPortWithLoadBalancer API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation RegisterPortWithLoadBalancer for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/RegisterPortWithLoadBalancer
func (c *Computing) RegisterPortWithLoadBalancer(input *RegisterPortWithLoadBalancerInput) (*RegisterPortWithLoadBalancerOutput, error) {
	req, out := c.RegisterPortWithLoadBalancerRequest(input)
	return out, req.Send()
}

// RegisterPortWithLoadBalancerWithContext is the same as RegisterPortWithLoadBalancer with the addition of
// the ability to pass a context and additional request options.
//
// See RegisterPortWithLoadBalancer for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) RegisterPortWithLoadBalancerWithContext(ctx nifcloud.Context, input *RegisterPortWithLoadBalancerInput, opts ...request.Option) (*RegisterPortWithLoadBalancerOutput, error) {
	req, out := c.RegisterPortWithLoadBalancerRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opReleaseAddress = "ReleaseAddress"

// ReleaseAddressRequest generates a "nifcloud/request.Request" representing the
// client's request for the ReleaseAddress operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See ReleaseAddress for more information on using the ReleaseAddress
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the ReleaseAddressRequest method.
//    req, resp := client.ReleaseAddressRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/ReleaseAddress
func (c *Computing) ReleaseAddressRequest(input *ReleaseAddressInput) (req *request.Request, output *ReleaseAddressOutput) {
	op := &request.Operation{
		Name:       opReleaseAddress,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &ReleaseAddressInput{}
	}

	output = &ReleaseAddressOutput{}
	req = c.newRequest(op, input, output)
	return
}

// ReleaseAddress API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation ReleaseAddress for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/ReleaseAddress
func (c *Computing) ReleaseAddress(input *ReleaseAddressInput) (*ReleaseAddressOutput, error) {
	req, out := c.ReleaseAddressRequest(input)
	return out, req.Send()
}

// ReleaseAddressWithContext is the same as ReleaseAddress with the addition of
// the ability to pass a context and additional request options.
//
// See ReleaseAddress for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) ReleaseAddressWithContext(ctx nifcloud.Context, input *ReleaseAddressInput, opts ...request.Option) (*ReleaseAddressOutput, error) {
	req, out := c.ReleaseAddressRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opReplaceRoute = "ReplaceRoute"

// ReplaceRouteRequest generates a "nifcloud/request.Request" representing the
// client's request for the ReplaceRoute operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See ReplaceRoute for more information on using the ReplaceRoute
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the ReplaceRouteRequest method.
//    req, resp := client.ReplaceRouteRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/ReplaceRoute
func (c *Computing) ReplaceRouteRequest(input *ReplaceRouteInput) (req *request.Request, output *ReplaceRouteOutput) {
	op := &request.Operation{
		Name:       opReplaceRoute,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &ReplaceRouteInput{}
	}

	output = &ReplaceRouteOutput{}
	req = c.newRequest(op, input, output)
	return
}

// ReplaceRoute API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation ReplaceRoute for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/ReplaceRoute
func (c *Computing) ReplaceRoute(input *ReplaceRouteInput) (*ReplaceRouteOutput, error) {
	req, out := c.ReplaceRouteRequest(input)
	return out, req.Send()
}

// ReplaceRouteWithContext is the same as ReplaceRoute with the addition of
// the ability to pass a context and additional request options.
//
// See ReplaceRoute for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) ReplaceRouteWithContext(ctx nifcloud.Context, input *ReplaceRouteInput, opts ...request.Option) (*ReplaceRouteOutput, error) {
	req, out := c.ReplaceRouteRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opReplaceRouteTableAssociation = "ReplaceRouteTableAssociation"

// ReplaceRouteTableAssociationRequest generates a "nifcloud/request.Request" representing the
// client's request for the ReplaceRouteTableAssociation operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See ReplaceRouteTableAssociation for more information on using the ReplaceRouteTableAssociation
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the ReplaceRouteTableAssociationRequest method.
//    req, resp := client.ReplaceRouteTableAssociationRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/ReplaceRouteTableAssociation
func (c *Computing) ReplaceRouteTableAssociationRequest(input *ReplaceRouteTableAssociationInput) (req *request.Request, output *ReplaceRouteTableAssociationOutput) {
	op := &request.Operation{
		Name:       opReplaceRouteTableAssociation,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &ReplaceRouteTableAssociationInput{}
	}

	output = &ReplaceRouteTableAssociationOutput{}
	req = c.newRequest(op, input, output)
	return
}

// ReplaceRouteTableAssociation API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation ReplaceRouteTableAssociation for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/ReplaceRouteTableAssociation
func (c *Computing) ReplaceRouteTableAssociation(input *ReplaceRouteTableAssociationInput) (*ReplaceRouteTableAssociationOutput, error) {
	req, out := c.ReplaceRouteTableAssociationRequest(input)
	return out, req.Send()
}

// ReplaceRouteTableAssociationWithContext is the same as ReplaceRouteTableAssociation with the addition of
// the ability to pass a context and additional request options.
//
// See ReplaceRouteTableAssociation for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) ReplaceRouteTableAssociationWithContext(ctx nifcloud.Context, input *ReplaceRouteTableAssociationInput, opts ...request.Option) (*ReplaceRouteTableAssociationOutput, error) {
	req, out := c.ReplaceRouteTableAssociationRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opRevokeSecurityGroupIngress = "RevokeSecurityGroupIngress"

// RevokeSecurityGroupIngressRequest generates a "nifcloud/request.Request" representing the
// client's request for the RevokeSecurityGroupIngress operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See RevokeSecurityGroupIngress for more information on using the RevokeSecurityGroupIngress
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the RevokeSecurityGroupIngressRequest method.
//    req, resp := client.RevokeSecurityGroupIngressRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/RevokeSecurityGroupIngress
func (c *Computing) RevokeSecurityGroupIngressRequest(input *RevokeSecurityGroupIngressInput) (req *request.Request, output *RevokeSecurityGroupIngressOutput) {
	op := &request.Operation{
		Name:       opRevokeSecurityGroupIngress,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &RevokeSecurityGroupIngressInput{}
	}

	output = &RevokeSecurityGroupIngressOutput{}
	req = c.newRequest(op, input, output)
	return
}

// RevokeSecurityGroupIngress API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation RevokeSecurityGroupIngress for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/RevokeSecurityGroupIngress
func (c *Computing) RevokeSecurityGroupIngress(input *RevokeSecurityGroupIngressInput) (*RevokeSecurityGroupIngressOutput, error) {
	req, out := c.RevokeSecurityGroupIngressRequest(input)
	return out, req.Send()
}

// RevokeSecurityGroupIngressWithContext is the same as RevokeSecurityGroupIngress with the addition of
// the ability to pass a context and additional request options.
//
// See RevokeSecurityGroupIngress for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) RevokeSecurityGroupIngressWithContext(ctx nifcloud.Context, input *RevokeSecurityGroupIngressInput, opts ...request.Option) (*RevokeSecurityGroupIngressOutput, error) {
	req, out := c.RevokeSecurityGroupIngressRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opRunInstances = "RunInstances"

// RunInstancesRequest generates a "nifcloud/request.Request" representing the
// client's request for the RunInstances operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See RunInstances for more information on using the RunInstances
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the RunInstancesRequest method.
//    req, resp := client.RunInstancesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/RunInstances
func (c *Computing) RunInstancesRequest(input *RunInstancesInput) (req *request.Request, output *RunInstancesOutput) {
	op := &request.Operation{
		Name:       opRunInstances,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &RunInstancesInput{}
	}

	output = &RunInstancesOutput{}
	req = c.newRequest(op, input, output)
	return
}

// RunInstances API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation RunInstances for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/RunInstances
func (c *Computing) RunInstances(input *RunInstancesInput) (*RunInstancesOutput, error) {
	req, out := c.RunInstancesRequest(input)
	return out, req.Send()
}

// RunInstancesWithContext is the same as RunInstances with the addition of
// the ability to pass a context and additional request options.
//
// See RunInstances for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) RunInstancesWithContext(ctx nifcloud.Context, input *RunInstancesInput, opts ...request.Option) (*RunInstancesOutput, error) {
	req, out := c.RunInstancesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opSetFilterForLoadBalancer = "SetFilterForLoadBalancer"

// SetFilterForLoadBalancerRequest generates a "nifcloud/request.Request" representing the
// client's request for the SetFilterForLoadBalancer operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See SetFilterForLoadBalancer for more information on using the SetFilterForLoadBalancer
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the SetFilterForLoadBalancerRequest method.
//    req, resp := client.SetFilterForLoadBalancerRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/SetFilterForLoadBalancer
func (c *Computing) SetFilterForLoadBalancerRequest(input *SetFilterForLoadBalancerInput) (req *request.Request, output *SetFilterForLoadBalancerOutput) {
	op := &request.Operation{
		Name:       opSetFilterForLoadBalancer,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &SetFilterForLoadBalancerInput{}
	}

	output = &SetFilterForLoadBalancerOutput{}
	req = c.newRequest(op, input, output)
	return
}

// SetFilterForLoadBalancer API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation SetFilterForLoadBalancer for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/SetFilterForLoadBalancer
func (c *Computing) SetFilterForLoadBalancer(input *SetFilterForLoadBalancerInput) (*SetFilterForLoadBalancerOutput, error) {
	req, out := c.SetFilterForLoadBalancerRequest(input)
	return out, req.Send()
}

// SetFilterForLoadBalancerWithContext is the same as SetFilterForLoadBalancer with the addition of
// the ability to pass a context and additional request options.
//
// See SetFilterForLoadBalancer for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) SetFilterForLoadBalancerWithContext(ctx nifcloud.Context, input *SetFilterForLoadBalancerInput, opts ...request.Option) (*SetFilterForLoadBalancerOutput, error) {
	req, out := c.SetFilterForLoadBalancerRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opStartInstances = "StartInstances"

// StartInstancesRequest generates a "nifcloud/request.Request" representing the
// client's request for the StartInstances operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See StartInstances for more information on using the StartInstances
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the StartInstancesRequest method.
//    req, resp := client.StartInstancesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/StartInstances
func (c *Computing) StartInstancesRequest(input *StartInstancesInput) (req *request.Request, output *StartInstancesOutput) {
	op := &request.Operation{
		Name:       opStartInstances,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &StartInstancesInput{}
	}

	output = &StartInstancesOutput{}
	req = c.newRequest(op, input, output)
	return
}

// StartInstances API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation StartInstances for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/StartInstances
func (c *Computing) StartInstances(input *StartInstancesInput) (*StartInstancesOutput, error) {
	req, out := c.StartInstancesRequest(input)
	return out, req.Send()
}

// StartInstancesWithContext is the same as StartInstances with the addition of
// the ability to pass a context and additional request options.
//
// See StartInstances for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) StartInstancesWithContext(ctx nifcloud.Context, input *StartInstancesInput, opts ...request.Option) (*StartInstancesOutput, error) {
	req, out := c.StartInstancesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opStopInstances = "StopInstances"

// StopInstancesRequest generates a "nifcloud/request.Request" representing the
// client's request for the StopInstances operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See StopInstances for more information on using the StopInstances
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the StopInstancesRequest method.
//    req, resp := client.StopInstancesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/StopInstances
func (c *Computing) StopInstancesRequest(input *StopInstancesInput) (req *request.Request, output *StopInstancesOutput) {
	op := &request.Operation{
		Name:       opStopInstances,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &StopInstancesInput{}
	}

	output = &StopInstancesOutput{}
	req = c.newRequest(op, input, output)
	return
}

// StopInstances API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation StopInstances for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/StopInstances
func (c *Computing) StopInstances(input *StopInstancesInput) (*StopInstancesOutput, error) {
	req, out := c.StopInstancesRequest(input)
	return out, req.Send()
}

// StopInstancesWithContext is the same as StopInstances with the addition of
// the ability to pass a context and additional request options.
//
// See StopInstances for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) StopInstancesWithContext(ctx nifcloud.Context, input *StopInstancesInput, opts ...request.Option) (*StopInstancesOutput, error) {
	req, out := c.StopInstancesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opTerminateInstances = "TerminateInstances"

// TerminateInstancesRequest generates a "nifcloud/request.Request" representing the
// client's request for the TerminateInstances operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See TerminateInstances for more information on using the TerminateInstances
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the TerminateInstancesRequest method.
//    req, resp := client.TerminateInstancesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/TerminateInstances
func (c *Computing) TerminateInstancesRequest(input *TerminateInstancesInput) (req *request.Request, output *TerminateInstancesOutput) {
	op := &request.Operation{
		Name:       opTerminateInstances,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &TerminateInstancesInput{}
	}

	output = &TerminateInstancesOutput{}
	req = c.newRequest(op, input, output)
	return
}

// TerminateInstances API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation TerminateInstances for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/TerminateInstances
func (c *Computing) TerminateInstances(input *TerminateInstancesInput) (*TerminateInstancesOutput, error) {
	req, out := c.TerminateInstancesRequest(input)
	return out, req.Send()
}

// TerminateInstancesWithContext is the same as TerminateInstances with the addition of
// the ability to pass a context and additional request options.
//
// See TerminateInstances for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) TerminateInstancesWithContext(ctx nifcloud.Context, input *TerminateInstancesInput, opts ...request.Option) (*TerminateInstancesOutput, error) {
	req, out := c.TerminateInstancesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opUpdateLoadBalancer = "UpdateLoadBalancer"

// UpdateLoadBalancerRequest generates a "nifcloud/request.Request" representing the
// client's request for the UpdateLoadBalancer operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See UpdateLoadBalancer for more information on using the UpdateLoadBalancer
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the UpdateLoadBalancerRequest method.
//    req, resp := client.UpdateLoadBalancerRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/UpdateLoadBalancer
func (c *Computing) UpdateLoadBalancerRequest(input *UpdateLoadBalancerInput) (req *request.Request, output *UpdateLoadBalancerOutput) {
	op := &request.Operation{
		Name:       opUpdateLoadBalancer,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &UpdateLoadBalancerInput{}
	}

	output = &UpdateLoadBalancerOutput{}
	req = c.newRequest(op, input, output)
	return
}

// UpdateLoadBalancer API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation UpdateLoadBalancer for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/UpdateLoadBalancer
func (c *Computing) UpdateLoadBalancer(input *UpdateLoadBalancerInput) (*UpdateLoadBalancerOutput, error) {
	req, out := c.UpdateLoadBalancerRequest(input)
	return out, req.Send()
}

// UpdateLoadBalancerWithContext is the same as UpdateLoadBalancer with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateLoadBalancer for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) UpdateLoadBalancerWithContext(ctx nifcloud.Context, input *UpdateLoadBalancerInput, opts ...request.Option) (*UpdateLoadBalancerOutput, error) {
	req, out := c.UpdateLoadBalancerRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opUpdateLoadBalancerOption = "UpdateLoadBalancerOption"

// UpdateLoadBalancerOptionRequest generates a "nifcloud/request.Request" representing the
// client's request for the UpdateLoadBalancerOption operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See UpdateLoadBalancerOption for more information on using the UpdateLoadBalancerOption
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the UpdateLoadBalancerOptionRequest method.
//    req, resp := client.UpdateLoadBalancerOptionRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/UpdateLoadBalancerOption
func (c *Computing) UpdateLoadBalancerOptionRequest(input *UpdateLoadBalancerOptionInput) (req *request.Request, output *UpdateLoadBalancerOptionOutput) {
	op := &request.Operation{
		Name:       opUpdateLoadBalancerOption,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &UpdateLoadBalancerOptionInput{}
	}

	output = &UpdateLoadBalancerOptionOutput{}
	req = c.newRequest(op, input, output)
	return
}

// UpdateLoadBalancerOption API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation UpdateLoadBalancerOption for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/UpdateLoadBalancerOption
func (c *Computing) UpdateLoadBalancerOption(input *UpdateLoadBalancerOptionInput) (*UpdateLoadBalancerOptionOutput, error) {
	req, out := c.UpdateLoadBalancerOptionRequest(input)
	return out, req.Send()
}

// UpdateLoadBalancerOptionWithContext is the same as UpdateLoadBalancerOption with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateLoadBalancerOption for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) UpdateLoadBalancerOptionWithContext(ctx nifcloud.Context, input *UpdateLoadBalancerOptionInput, opts ...request.Option) (*UpdateLoadBalancerOptionOutput, error) {
	req, out := c.UpdateLoadBalancerOptionRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opUpdateSecurityGroup = "UpdateSecurityGroup"

// UpdateSecurityGroupRequest generates a "nifcloud/request.Request" representing the
// client's request for the UpdateSecurityGroup operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See UpdateSecurityGroup for more information on using the UpdateSecurityGroup
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the UpdateSecurityGroupRequest method.
//    req, resp := client.UpdateSecurityGroupRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/UpdateSecurityGroup
func (c *Computing) UpdateSecurityGroupRequest(input *UpdateSecurityGroupInput) (req *request.Request, output *UpdateSecurityGroupOutput) {
	op := &request.Operation{
		Name:       opUpdateSecurityGroup,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &UpdateSecurityGroupInput{}
	}

	output = &UpdateSecurityGroupOutput{}
	req = c.newRequest(op, input, output)
	return
}

// UpdateSecurityGroup API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation UpdateSecurityGroup for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/UpdateSecurityGroup
func (c *Computing) UpdateSecurityGroup(input *UpdateSecurityGroupInput) (*UpdateSecurityGroupOutput, error) {
	req, out := c.UpdateSecurityGroupRequest(input)
	return out, req.Send()
}

// UpdateSecurityGroupWithContext is the same as UpdateSecurityGroup with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateSecurityGroup for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) UpdateSecurityGroupWithContext(ctx nifcloud.Context, input *UpdateSecurityGroupInput, opts ...request.Option) (*UpdateSecurityGroupOutput, error) {
	req, out := c.UpdateSecurityGroupRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opUpdateSecurityGroupOption = "UpdateSecurityGroupOption"

// UpdateSecurityGroupOptionRequest generates a "nifcloud/request.Request" representing the
// client's request for the UpdateSecurityGroupOption operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See UpdateSecurityGroupOption for more information on using the UpdateSecurityGroupOption
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the UpdateSecurityGroupOptionRequest method.
//    req, resp := client.UpdateSecurityGroupOptionRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/UpdateSecurityGroupOption
func (c *Computing) UpdateSecurityGroupOptionRequest(input *UpdateSecurityGroupOptionInput) (req *request.Request, output *UpdateSecurityGroupOptionOutput) {
	op := &request.Operation{
		Name:       opUpdateSecurityGroupOption,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &UpdateSecurityGroupOptionInput{}
	}

	output = &UpdateSecurityGroupOptionOutput{}
	req = c.newRequest(op, input, output)
	return
}

// UpdateSecurityGroupOption API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation UpdateSecurityGroupOption for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/UpdateSecurityGroupOption
func (c *Computing) UpdateSecurityGroupOption(input *UpdateSecurityGroupOptionInput) (*UpdateSecurityGroupOptionOutput, error) {
	req, out := c.UpdateSecurityGroupOptionRequest(input)
	return out, req.Send()
}

// UpdateSecurityGroupOptionWithContext is the same as UpdateSecurityGroupOption with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateSecurityGroupOption for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) UpdateSecurityGroupOptionWithContext(ctx nifcloud.Context, input *UpdateSecurityGroupOptionInput, opts ...request.Option) (*UpdateSecurityGroupOptionOutput, error) {
	req, out := c.UpdateSecurityGroupOptionRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opUploadSslCertificate = "UploadSslCertificate"

// UploadSslCertificateRequest generates a "nifcloud/request.Request" representing the
// client's request for the UploadSslCertificate operation. The "output" return
// value will be populated with the request's response once the request completes
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See UploadSslCertificate for more information on using the UploadSslCertificate
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the UploadSslCertificateRequest method.
//    req, resp := client.UploadSslCertificateRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/UploadSslCertificate
func (c *Computing) UploadSslCertificateRequest(input *UploadSslCertificateInput) (req *request.Request, output *UploadSslCertificateOutput) {
	op := &request.Operation{
		Name:       opUploadSslCertificate,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &UploadSslCertificateInput{}
	}

	output = &UploadSslCertificateOutput{}
	req = c.newRequest(op, input, output)
	return
}

// UploadSslCertificate API operation for NIFCLOUD Computing.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for NIFCLOUD Computing's
// API operation UploadSslCertificate for usage and error information.
// See also, https://docs.aws.amazon.com/goto/WebAPI/computing-2.2/UploadSslCertificate
func (c *Computing) UploadSslCertificate(input *UploadSslCertificateInput) (*UploadSslCertificateOutput, error) {
	req, out := c.UploadSslCertificateRequest(input)
	return out, req.Send()
}

// UploadSslCertificateWithContext is the same as UploadSslCertificate with the addition of
// the ability to pass a context and additional request options.
//
// See UploadSslCertificate for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Computing) UploadSslCertificateWithContext(ctx nifcloud.Context, input *UploadSslCertificateInput, opts ...request.Option) (*UploadSslCertificateOutput, error) {
	req, out := c.UploadSslCertificateRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AccountingType struct {
	_ struct{} `type:"structure"`

	Value *string `locationName:"value" type:"string"`
}

// String returns the string representation
func (s AccountingType) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AccountingType) GoString() string {
	return s.String()
}

// SetValue sets the Value field's value.
func (s *AccountingType) SetValue(v string) *AccountingType {
	s.Value = &v
	return s
}

type AddressesSetItem struct {
	_ struct{} `type:"structure"`

	AllocationId *string `locationName:"allocationId" type:"string"`

	AssociationId *string `locationName:"associationId" type:"string"`

	AvailabilityZone *string `locationName:"availabilityZone" type:"string"`

	Description *string `locationName:"description" type:"string"`

	Domain *string `locationName:"domain" type:"string"`

	InstanceId *string `locationName:"instanceId" type:"string"`

	InstanceUniqueId *string `locationName:"instanceUniqueId" type:"string"`

	NetworkInterfaceId *string `locationName:"networkInterfaceId" type:"string"`

	NetworkInterfaceOwnerId *string `locationName:"networkInterfaceOwnerId" type:"string"`

	PrivateIpAddress *string `locationName:"privateIpAddress" type:"string"`

	PublicIp *string `locationName:"publicIp" type:"string"`
}

// String returns the string representation
func (s AddressesSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AddressesSetItem) GoString() string {
	return s.String()
}

// SetAllocationId sets the AllocationId field's value.
func (s *AddressesSetItem) SetAllocationId(v string) *AddressesSetItem {
	s.AllocationId = &v
	return s
}

// SetAssociationId sets the AssociationId field's value.
func (s *AddressesSetItem) SetAssociationId(v string) *AddressesSetItem {
	s.AssociationId = &v
	return s
}

// SetAvailabilityZone sets the AvailabilityZone field's value.
func (s *AddressesSetItem) SetAvailabilityZone(v string) *AddressesSetItem {
	s.AvailabilityZone = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *AddressesSetItem) SetDescription(v string) *AddressesSetItem {
	s.Description = &v
	return s
}

// SetDomain sets the Domain field's value.
func (s *AddressesSetItem) SetDomain(v string) *AddressesSetItem {
	s.Domain = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *AddressesSetItem) SetInstanceId(v string) *AddressesSetItem {
	s.InstanceId = &v
	return s
}

// SetInstanceUniqueId sets the InstanceUniqueId field's value.
func (s *AddressesSetItem) SetInstanceUniqueId(v string) *AddressesSetItem {
	s.InstanceUniqueId = &v
	return s
}

// SetNetworkInterfaceId sets the NetworkInterfaceId field's value.
func (s *AddressesSetItem) SetNetworkInterfaceId(v string) *AddressesSetItem {
	s.NetworkInterfaceId = &v
	return s
}

// SetNetworkInterfaceOwnerId sets the NetworkInterfaceOwnerId field's value.
func (s *AddressesSetItem) SetNetworkInterfaceOwnerId(v string) *AddressesSetItem {
	s.NetworkInterfaceOwnerId = &v
	return s
}

// SetPrivateIpAddress sets the PrivateIpAddress field's value.
func (s *AddressesSetItem) SetPrivateIpAddress(v string) *AddressesSetItem {
	s.PrivateIpAddress = &v
	return s
}

// SetPublicIp sets the PublicIp field's value.
func (s *AddressesSetItem) SetPublicIp(v string) *AddressesSetItem {
	s.PublicIp = &v
	return s
}

type AlarmDateHistorySetItem struct {
	_ struct{} `type:"structure"`

	AlarmEventHistorySet []*AlarmEventHistorySetItem `locationName:"alarmEventHistorySet" locationNameList:"item" type:"list"`

	Date *string `locationName:"date" type:"string"`
}

// String returns the string representation
func (s AlarmDateHistorySetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AlarmDateHistorySetItem) GoString() string {
	return s.String()
}

// SetAlarmEventHistorySet sets the AlarmEventHistorySet field's value.
func (s *AlarmDateHistorySetItem) SetAlarmEventHistorySet(v []*AlarmEventHistorySetItem) *AlarmDateHistorySetItem {
	s.AlarmEventHistorySet = v
	return s
}

// SetDate sets the Date field's value.
func (s *AlarmDateHistorySetItem) SetDate(v string) *AlarmDateHistorySetItem {
	s.Date = &v
	return s
}

type AlarmEventHistorySetItem struct {
	_ struct{} `type:"structure"`

	AlarmEvent *string `locationName:"alarmEvent" type:"string"`

	AlarmEventDatetime *time.Time `locationName:"alarmEventDatetime" type:"timestamp" timestampFormat:""`
}

// String returns the string representation
func (s AlarmEventHistorySetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AlarmEventHistorySetItem) GoString() string {
	return s.String()
}

// SetAlarmEvent sets the AlarmEvent field's value.
func (s *AlarmEventHistorySetItem) SetAlarmEvent(v string) *AlarmEventHistorySetItem {
	s.AlarmEvent = &v
	return s
}

// SetAlarmEventDatetime sets the AlarmEventDatetime field's value.
func (s *AlarmEventHistorySetItem) SetAlarmEventDatetime(v time.Time) *AlarmEventHistorySetItem {
	s.AlarmEventDatetime = &v
	return s
}

type AlarmRulesActivitiesDateSetItem struct {
	_ struct{} `type:"structure"`

	AlarmRulesActivitiesEventSet []*AlarmRulesActivitiesEventSetItem `locationName:"alarmRulesActivitiesEventSet" locationNameList:"item" type:"list"`

	Date *string `locationName:"date" type:"string"`
}

// String returns the string representation
func (s AlarmRulesActivitiesDateSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AlarmRulesActivitiesDateSetItem) GoString() string {
	return s.String()
}

// SetAlarmRulesActivitiesEventSet sets the AlarmRulesActivitiesEventSet field's value.
func (s *AlarmRulesActivitiesDateSetItem) SetAlarmRulesActivitiesEventSet(v []*AlarmRulesActivitiesEventSetItem) *AlarmRulesActivitiesDateSetItem {
	s.AlarmRulesActivitiesEventSet = v
	return s
}

// SetDate sets the Date field's value.
func (s *AlarmRulesActivitiesDateSetItem) SetDate(v string) *AlarmRulesActivitiesDateSetItem {
	s.Date = &v
	return s
}

type AlarmRulesActivitiesEventSetItem struct {
	_ struct{} `type:"structure"`

	AlarmRulesActivitiesEvent *string `locationName:"alarmRulesActivitiesEvent" type:"string"`

	AlarmRulesActivitiesEventDatetime *time.Time `locationName:"alarmRulesActivitiesEventDatetime" type:"timestamp" timestampFormat:""`

	ResourceName *string `locationName:"resourceName" type:"string"`

	Value *string `locationName:"value" type:"string"`
}

// String returns the string representation
func (s AlarmRulesActivitiesEventSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AlarmRulesActivitiesEventSetItem) GoString() string {
	return s.String()
}

// SetAlarmRulesActivitiesEvent sets the AlarmRulesActivitiesEvent field's value.
func (s *AlarmRulesActivitiesEventSetItem) SetAlarmRulesActivitiesEvent(v string) *AlarmRulesActivitiesEventSetItem {
	s.AlarmRulesActivitiesEvent = &v
	return s
}

// SetAlarmRulesActivitiesEventDatetime sets the AlarmRulesActivitiesEventDatetime field's value.
func (s *AlarmRulesActivitiesEventSetItem) SetAlarmRulesActivitiesEventDatetime(v time.Time) *AlarmRulesActivitiesEventSetItem {
	s.AlarmRulesActivitiesEventDatetime = &v
	return s
}

// SetResourceName sets the ResourceName field's value.
func (s *AlarmRulesActivitiesEventSetItem) SetResourceName(v string) *AlarmRulesActivitiesEventSetItem {
	s.ResourceName = &v
	return s
}

// SetValue sets the Value field's value.
func (s *AlarmRulesActivitiesEventSetItem) SetValue(v string) *AlarmRulesActivitiesEventSetItem {
	s.Value = &v
	return s
}

type AlarmRulesActivitiesSetItem struct {
	_ struct{} `type:"structure"`

	AlarmRulesActivitiesDateSet []*AlarmRulesActivitiesDateSetItem `locationName:"alarmRulesActivitiesDateSet" locationNameList:"item" type:"list"`

	DataType *string `locationName:"dataType" type:"string"`
}

// String returns the string representation
func (s AlarmRulesActivitiesSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AlarmRulesActivitiesSetItem) GoString() string {
	return s.String()
}

// SetAlarmRulesActivitiesDateSet sets the AlarmRulesActivitiesDateSet field's value.
func (s *AlarmRulesActivitiesSetItem) SetAlarmRulesActivitiesDateSet(v []*AlarmRulesActivitiesDateSetItem) *AlarmRulesActivitiesSetItem {
	s.AlarmRulesActivitiesDateSet = v
	return s
}

// SetDataType sets the DataType field's value.
func (s *AlarmRulesActivitiesSetItem) SetDataType(v string) *AlarmRulesActivitiesSetItem {
	s.DataType = &v
	return s
}

type AlarmTargetSetItem struct {
	_ struct{} `type:"structure"`

	InstanceId *string `locationName:"instanceId" type:"string"`

	PartitionsSet []*PartitionsSetItem `locationName:"partitionsSet" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s AlarmTargetSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AlarmTargetSetItem) GoString() string {
	return s.String()
}

// SetInstanceId sets the InstanceId field's value.
func (s *AlarmTargetSetItem) SetInstanceId(v string) *AlarmTargetSetItem {
	s.InstanceId = &v
	return s
}

// SetPartitionsSet sets the PartitionsSet field's value.
func (s *AlarmTargetSetItem) SetPartitionsSet(v []*PartitionsSetItem) *AlarmTargetSetItem {
	s.PartitionsSet = v
	return s
}

type AlarmTargetsSetItem struct {
	_ struct{} `type:"structure"`

	ResourceName *string `locationName:"resourceName" type:"string"`
}

// String returns the string representation
func (s AlarmTargetsSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AlarmTargetsSetItem) GoString() string {
	return s.String()
}

// SetResourceName sets the ResourceName field's value.
func (s *AlarmTargetsSetItem) SetResourceName(v string) *AlarmTargetsSetItem {
	s.ResourceName = &v
	return s
}

type AllocateAddressInput struct {
	_ struct{} `type:"structure"`

	InstanceId *string `locationName:"InstanceId" type:"string"`

	NiftyPrivateIp *bool `locationName:"NiftyPrivateIp" type:"boolean"`

	Placement *RequestPlacementStruct `locationName:"Placement" type:"structure"`
}

// String returns the string representation
func (s AllocateAddressInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AllocateAddressInput) GoString() string {
	return s.String()
}

// SetInstanceId sets the InstanceId field's value.
func (s *AllocateAddressInput) SetInstanceId(v string) *AllocateAddressInput {
	s.InstanceId = &v
	return s
}

// SetNiftyPrivateIp sets the NiftyPrivateIp field's value.
func (s *AllocateAddressInput) SetNiftyPrivateIp(v bool) *AllocateAddressInput {
	s.NiftyPrivateIp = &v
	return s
}

// SetPlacement sets the Placement field's value.
func (s *AllocateAddressInput) SetPlacement(v *RequestPlacementStruct) *AllocateAddressInput {
	s.Placement = v
	return s
}

type AllocateAddressOutput struct {
	_ struct{} `type:"structure"`

	AllocationId *string `locationName:"allocationId" type:"string"`

	Domain *string `locationName:"domain" type:"string"`

	Placement *Placement `locationName:"placement" type:"structure"`

	PrivateIpAddress *string `locationName:"privateIpAddress" type:"string"`

	PublicIp *string `locationName:"publicIp" type:"string"`

	RequestId *string `locationName:"requestId" type:"string"`
}

// String returns the string representation
func (s AllocateAddressOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AllocateAddressOutput) GoString() string {
	return s.String()
}

// SetAllocationId sets the AllocationId field's value.
func (s *AllocateAddressOutput) SetAllocationId(v string) *AllocateAddressOutput {
	s.AllocationId = &v
	return s
}

// SetDomain sets the Domain field's value.
func (s *AllocateAddressOutput) SetDomain(v string) *AllocateAddressOutput {
	s.Domain = &v
	return s
}

// SetPlacement sets the Placement field's value.
func (s *AllocateAddressOutput) SetPlacement(v *Placement) *AllocateAddressOutput {
	s.Placement = v
	return s
}

// SetPrivateIpAddress sets the PrivateIpAddress field's value.
func (s *AllocateAddressOutput) SetPrivateIpAddress(v string) *AllocateAddressOutput {
	s.PrivateIpAddress = &v
	return s
}

// SetPublicIp sets the PublicIp field's value.
func (s *AllocateAddressOutput) SetPublicIp(v string) *AllocateAddressOutput {
	s.PublicIp = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *AllocateAddressOutput) SetRequestId(v string) *AllocateAddressOutput {
	s.RequestId = &v
	return s
}

type AnalyzeResultSetItem struct {
	_ struct{} `type:"structure"`

	AnalyzeCode *string `locationName:"analyzeCode" type:"string"`

	Line *string `locationName:"line" type:"string"`
}

// String returns the string representation
func (s AnalyzeResultSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AnalyzeResultSetItem) GoString() string {
	return s.String()
}

// SetAnalyzeCode sets the AnalyzeCode field's value.
func (s *AnalyzeResultSetItem) SetAnalyzeCode(v string) *AnalyzeResultSetItem {
	s.AnalyzeCode = &v
	return s
}

// SetLine sets the Line field's value.
func (s *AnalyzeResultSetItem) SetLine(v string) *AnalyzeResultSetItem {
	s.Line = &v
	return s
}

type AppCookieStickinessPoliciesMemberItem struct {
	_ struct{} `type:"structure"`

	CookieName *string `locationName:"CookieName" type:"string"`

	PolicyName *string `locationName:"PolicyName" type:"string"`
}

// String returns the string representation
func (s AppCookieStickinessPoliciesMemberItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AppCookieStickinessPoliciesMemberItem) GoString() string {
	return s.String()
}

// SetCookieName sets the CookieName field's value.
func (s *AppCookieStickinessPoliciesMemberItem) SetCookieName(v string) *AppCookieStickinessPoliciesMemberItem {
	s.CookieName = &v
	return s
}

// SetPolicyName sets the PolicyName field's value.
func (s *AppCookieStickinessPoliciesMemberItem) SetPolicyName(v string) *AppCookieStickinessPoliciesMemberItem {
	s.PolicyName = &v
	return s
}

type AssociateAddressInput struct {
	_ struct{} `type:"structure"`

	InstanceId *string `locationName:"InstanceId" type:"string"`

	NiftyReboot *string `locationName:"NiftyReboot" type:"string"`

	PrivateIpAddress *string `locationName:"PrivateIpAddress" type:"string"`

	PublicIp *string `locationName:"PublicIp" type:"string"`
}

// String returns the string representation
func (s AssociateAddressInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AssociateAddressInput) GoString() string {
	return s.String()
}

// SetInstanceId sets the InstanceId field's value.
func (s *AssociateAddressInput) SetInstanceId(v string) *AssociateAddressInput {
	s.InstanceId = &v
	return s
}

// SetNiftyReboot sets the NiftyReboot field's value.
func (s *AssociateAddressInput) SetNiftyReboot(v string) *AssociateAddressInput {
	s.NiftyReboot = &v
	return s
}

// SetPrivateIpAddress sets the PrivateIpAddress field's value.
func (s *AssociateAddressInput) SetPrivateIpAddress(v string) *AssociateAddressInput {
	s.PrivateIpAddress = &v
	return s
}

// SetPublicIp sets the PublicIp field's value.
func (s *AssociateAddressInput) SetPublicIp(v string) *AssociateAddressInput {
	s.PublicIp = &v
	return s
}

type AssociateAddressOutput struct {
	_ struct{} `type:"structure"`

	AssociationId *string `locationName:"associationId" type:"string"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s AssociateAddressOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AssociateAddressOutput) GoString() string {
	return s.String()
}

// SetAssociationId sets the AssociationId field's value.
func (s *AssociateAddressOutput) SetAssociationId(v string) *AssociateAddressOutput {
	s.AssociationId = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *AssociateAddressOutput) SetRequestId(v string) *AssociateAddressOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *AssociateAddressOutput) SetReturn(v bool) *AssociateAddressOutput {
	s.Return = &v
	return s
}

type AssociateRouteTableInput struct {
	_ struct{} `type:"structure"`

	Agreement *bool `locationName:"Agreement" type:"boolean"`

	RouteTableId *string `locationName:"RouteTableId" type:"string"`

	RouterId *string `locationName:"RouterId" type:"string"`

	RouterName *string `locationName:"RouterName" type:"string"`
}

// String returns the string representation
func (s AssociateRouteTableInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AssociateRouteTableInput) GoString() string {
	return s.String()
}

// SetAgreement sets the Agreement field's value.
func (s *AssociateRouteTableInput) SetAgreement(v bool) *AssociateRouteTableInput {
	s.Agreement = &v
	return s
}

// SetRouteTableId sets the RouteTableId field's value.
func (s *AssociateRouteTableInput) SetRouteTableId(v string) *AssociateRouteTableInput {
	s.RouteTableId = &v
	return s
}

// SetRouterId sets the RouterId field's value.
func (s *AssociateRouteTableInput) SetRouterId(v string) *AssociateRouteTableInput {
	s.RouterId = &v
	return s
}

// SetRouterName sets the RouterName field's value.
func (s *AssociateRouteTableInput) SetRouterName(v string) *AssociateRouteTableInput {
	s.RouterName = &v
	return s
}

type AssociateRouteTableOutput struct {
	_ struct{} `type:"structure"`

	AssociationId *string `locationName:"associationId" type:"string"`

	RequestId *string `locationName:"requestId" type:"string"`
}

// String returns the string representation
func (s AssociateRouteTableOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AssociateRouteTableOutput) GoString() string {
	return s.String()
}

// SetAssociationId sets the AssociationId field's value.
func (s *AssociateRouteTableOutput) SetAssociationId(v string) *AssociateRouteTableOutput {
	s.AssociationId = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *AssociateRouteTableOutput) SetRequestId(v string) *AssociateRouteTableOutput {
	s.RequestId = &v
	return s
}

type AssociateUsersInput struct {
	_ struct{} `type:"structure"`

	FunctionName *string `locationName:"FunctionName" type:"string"`

	Users []*RequestUsersStruct `locationName:"Users" locationNameList:"member" type:"list"`
}

// String returns the string representation
func (s AssociateUsersInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AssociateUsersInput) GoString() string {
	return s.String()
}

// SetFunctionName sets the FunctionName field's value.
func (s *AssociateUsersInput) SetFunctionName(v string) *AssociateUsersInput {
	s.FunctionName = &v
	return s
}

// SetUsers sets the Users field's value.
func (s *AssociateUsersInput) SetUsers(v []*RequestUsersStruct) *AssociateUsersInput {
	s.Users = v
	return s
}

type AssociateUsersOutput struct {
	_ struct{} `type:"structure"`

	AssociateUsersResult *AssociateUsersOutput `locationName:"AssociateUsersResult" type:"structure"`

	ResponseMetadata *ResponseMetadata `locationName:"ResponseMetadata" type:"structure"`

	Users []*UsersMemberItem `locationName:"Users" locationNameList:"member" type:"list"`
}

// String returns the string representation
func (s AssociateUsersOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AssociateUsersOutput) GoString() string {
	return s.String()
}

// SetAssociateUsersResult sets the AssociateUsersResult field's value.
func (s *AssociateUsersOutput) SetAssociateUsersResult(v *AssociateUsersOutput) *AssociateUsersOutput {
	s.AssociateUsersResult = v
	return s
}

// SetResponseMetadata sets the ResponseMetadata field's value.
func (s *AssociateUsersOutput) SetResponseMetadata(v *ResponseMetadata) *AssociateUsersOutput {
	s.ResponseMetadata = v
	return s
}

// SetUsers sets the Users field's value.
func (s *AssociateUsersOutput) SetUsers(v []*UsersMemberItem) *AssociateUsersOutput {
	s.Users = v
	return s
}

type Association struct {
	_ struct{} `type:"structure"`

	IpOwnerId *string `locationName:"ipOwnerId" type:"string"`

	PublicDnsName *string `locationName:"publicDnsName" type:"string"`

	PublicIp *string `locationName:"publicIp" type:"string"`

	PublicIpV6 *string `locationName:"publicIpV6" type:"string"`
}

// String returns the string representation
func (s Association) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s Association) GoString() string {
	return s.String()
}

// SetIpOwnerId sets the IpOwnerId field's value.
func (s *Association) SetIpOwnerId(v string) *Association {
	s.IpOwnerId = &v
	return s
}

// SetPublicDnsName sets the PublicDnsName field's value.
func (s *Association) SetPublicDnsName(v string) *Association {
	s.PublicDnsName = &v
	return s
}

// SetPublicIp sets the PublicIp field's value.
func (s *Association) SetPublicIp(v string) *Association {
	s.PublicIp = &v
	return s
}

// SetPublicIpV6 sets the PublicIpV6 field's value.
func (s *Association) SetPublicIpV6(v string) *Association {
	s.PublicIpV6 = &v
	return s
}

type AssociationSetItem struct {
	_ struct{} `type:"structure"`

	AssociationId *string `locationName:"associationId" type:"string"`

	Main *bool `locationName:"main" type:"boolean"`

	NatTableId *string `locationName:"natTableId" type:"string"`

	RouteTableAssociationId *string `locationName:"routeTableAssociationId" type:"string"`

	RouteTableId *string `locationName:"routeTableId" type:"string"`

	RouterId *string `locationName:"routerId" type:"string"`

	RouterName *string `locationName:"routerName" type:"string"`

	SubnetId *string `locationName:"subnetId" type:"string"`
}

// String returns the string representation
func (s AssociationSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AssociationSetItem) GoString() string {
	return s.String()
}

// SetAssociationId sets the AssociationId field's value.
func (s *AssociationSetItem) SetAssociationId(v string) *AssociationSetItem {
	s.AssociationId = &v
	return s
}

// SetMain sets the Main field's value.
func (s *AssociationSetItem) SetMain(v bool) *AssociationSetItem {
	s.Main = &v
	return s
}

// SetNatTableId sets the NatTableId field's value.
func (s *AssociationSetItem) SetNatTableId(v string) *AssociationSetItem {
	s.NatTableId = &v
	return s
}

// SetRouteTableAssociationId sets the RouteTableAssociationId field's value.
func (s *AssociationSetItem) SetRouteTableAssociationId(v string) *AssociationSetItem {
	s.RouteTableAssociationId = &v
	return s
}

// SetRouteTableId sets the RouteTableId field's value.
func (s *AssociationSetItem) SetRouteTableId(v string) *AssociationSetItem {
	s.RouteTableId = &v
	return s
}

// SetRouterId sets the RouterId field's value.
func (s *AssociationSetItem) SetRouterId(v string) *AssociationSetItem {
	s.RouterId = &v
	return s
}

// SetRouterName sets the RouterName field's value.
func (s *AssociationSetItem) SetRouterName(v string) *AssociationSetItem {
	s.RouterName = &v
	return s
}

// SetSubnetId sets the SubnetId field's value.
func (s *AssociationSetItem) SetSubnetId(v string) *AssociationSetItem {
	s.SubnetId = &v
	return s
}

type AttachVolumeInput struct {
	_ struct{} `type:"structure"`

	InstanceId *string `locationName:"InstanceId" type:"string"`

	VolumeId *string `locationName:"VolumeId" type:"string"`
}

// String returns the string representation
func (s AttachVolumeInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AttachVolumeInput) GoString() string {
	return s.String()
}

// SetInstanceId sets the InstanceId field's value.
func (s *AttachVolumeInput) SetInstanceId(v string) *AttachVolumeInput {
	s.InstanceId = &v
	return s
}

// SetVolumeId sets the VolumeId field's value.
func (s *AttachVolumeInput) SetVolumeId(v string) *AttachVolumeInput {
	s.VolumeId = &v
	return s
}

type AttachVolumeOutput struct {
	_ struct{} `type:"structure"`

	AttachTime *time.Time `locationName:"attachTime" type:"timestamp" timestampFormat:""`

	Device *string `locationName:"device" type:"string"`

	InstanceId *string `locationName:"instanceId" type:"string"`

	InstanceUniqueId *string `locationName:"instanceUniqueId" type:"string"`

	RequestId *string `locationName:"requestId" type:"string"`

	Status *string `locationName:"status" type:"string"`

	VolumeId *string `locationName:"volumeId" type:"string"`
}

// String returns the string representation
func (s AttachVolumeOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AttachVolumeOutput) GoString() string {
	return s.String()
}

// SetAttachTime sets the AttachTime field's value.
func (s *AttachVolumeOutput) SetAttachTime(v time.Time) *AttachVolumeOutput {
	s.AttachTime = &v
	return s
}

// SetDevice sets the Device field's value.
func (s *AttachVolumeOutput) SetDevice(v string) *AttachVolumeOutput {
	s.Device = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *AttachVolumeOutput) SetInstanceId(v string) *AttachVolumeOutput {
	s.InstanceId = &v
	return s
}

// SetInstanceUniqueId sets the InstanceUniqueId field's value.
func (s *AttachVolumeOutput) SetInstanceUniqueId(v string) *AttachVolumeOutput {
	s.InstanceUniqueId = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *AttachVolumeOutput) SetRequestId(v string) *AttachVolumeOutput {
	s.RequestId = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *AttachVolumeOutput) SetStatus(v string) *AttachVolumeOutput {
	s.Status = &v
	return s
}

// SetVolumeId sets the VolumeId field's value.
func (s *AttachVolumeOutput) SetVolumeId(v string) *AttachVolumeOutput {
	s.VolumeId = &v
	return s
}

type Attachment struct {
	_ struct{} `type:"structure"`

	AttachTime *time.Time `locationName:"attachTime" type:"timestamp" timestampFormat:""`

	AttachmentID *string `locationName:"attachmentID" type:"string"`

	DeleteOnTermination *bool `locationName:"deleteOnTermination" type:"boolean"`

	DeviceIndex *int64 `locationName:"deviceIndex" type:"integer"`

	Status *string `locationName:"status" type:"string"`
}

// String returns the string representation
func (s Attachment) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s Attachment) GoString() string {
	return s.String()
}

// SetAttachTime sets the AttachTime field's value.
func (s *Attachment) SetAttachTime(v time.Time) *Attachment {
	s.AttachTime = &v
	return s
}

// SetAttachmentID sets the AttachmentID field's value.
func (s *Attachment) SetAttachmentID(v string) *Attachment {
	s.AttachmentID = &v
	return s
}

// SetDeleteOnTermination sets the DeleteOnTermination field's value.
func (s *Attachment) SetDeleteOnTermination(v bool) *Attachment {
	s.DeleteOnTermination = &v
	return s
}

// SetDeviceIndex sets the DeviceIndex field's value.
func (s *Attachment) SetDeviceIndex(v int64) *Attachment {
	s.DeviceIndex = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *Attachment) SetStatus(v string) *Attachment {
	s.Status = &v
	return s
}

type AttachmentSetItem struct {
	_ struct{} `type:"structure"`

	AttachTime *time.Time `locationName:"attachTime" type:"timestamp" timestampFormat:""`

	DeleteOnTermination *bool `locationName:"deleteOnTermination" type:"boolean"`

	Device *string `locationName:"device" type:"string"`

	InstanceId *string `locationName:"instanceId" type:"string"`

	InstanceUniqueId *string `locationName:"instanceUniqueId" type:"string"`

	Status *string `locationName:"status" type:"string"`

	VolumeId *string `locationName:"volumeId" type:"string"`
}

// String returns the string representation
func (s AttachmentSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AttachmentSetItem) GoString() string {
	return s.String()
}

// SetAttachTime sets the AttachTime field's value.
func (s *AttachmentSetItem) SetAttachTime(v time.Time) *AttachmentSetItem {
	s.AttachTime = &v
	return s
}

// SetDeleteOnTermination sets the DeleteOnTermination field's value.
func (s *AttachmentSetItem) SetDeleteOnTermination(v bool) *AttachmentSetItem {
	s.DeleteOnTermination = &v
	return s
}

// SetDevice sets the Device field's value.
func (s *AttachmentSetItem) SetDevice(v string) *AttachmentSetItem {
	s.Device = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *AttachmentSetItem) SetInstanceId(v string) *AttachmentSetItem {
	s.InstanceId = &v
	return s
}

// SetInstanceUniqueId sets the InstanceUniqueId field's value.
func (s *AttachmentSetItem) SetInstanceUniqueId(v string) *AttachmentSetItem {
	s.InstanceUniqueId = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *AttachmentSetItem) SetStatus(v string) *AttachmentSetItem {
	s.Status = &v
	return s
}

// SetVolumeId sets the VolumeId field's value.
func (s *AttachmentSetItem) SetVolumeId(v string) *AttachmentSetItem {
	s.VolumeId = &v
	return s
}

type AttachmentsSetItem struct {
	_ struct{} `type:"structure"`

	State *string `locationName:"state" type:"string"`

	VpcId *string `locationName:"vpcId" type:"string"`
}

// String returns the string representation
func (s AttachmentsSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AttachmentsSetItem) GoString() string {
	return s.String()
}

// SetState sets the State field's value.
func (s *AttachmentsSetItem) SetState(v string) *AttachmentsSetItem {
	s.State = &v
	return s
}

// SetVpcId sets the VpcId field's value.
func (s *AttachmentsSetItem) SetVpcId(v string) *AttachmentsSetItem {
	s.VpcId = &v
	return s
}

type AuthorizeSecurityGroupIngressInput struct {
	_ struct{} `type:"structure"`

	GroupName *string `locationName:"GroupName" type:"string"`

	IpPermissions []*RequestIpPermissionsStruct `locationName:"IpPermissions" type:"list"`
}

// String returns the string representation
func (s AuthorizeSecurityGroupIngressInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AuthorizeSecurityGroupIngressInput) GoString() string {
	return s.String()
}

// SetGroupName sets the GroupName field's value.
func (s *AuthorizeSecurityGroupIngressInput) SetGroupName(v string) *AuthorizeSecurityGroupIngressInput {
	s.GroupName = &v
	return s
}

// SetIpPermissions sets the IpPermissions field's value.
func (s *AuthorizeSecurityGroupIngressInput) SetIpPermissions(v []*RequestIpPermissionsStruct) *AuthorizeSecurityGroupIngressInput {
	s.IpPermissions = v
	return s
}

type AuthorizeSecurityGroupIngressOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s AuthorizeSecurityGroupIngressOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AuthorizeSecurityGroupIngressOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *AuthorizeSecurityGroupIngressOutput) SetRequestId(v string) *AuthorizeSecurityGroupIngressOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *AuthorizeSecurityGroupIngressOutput) SetReturn(v bool) *AuthorizeSecurityGroupIngressOutput {
	s.Return = &v
	return s
}

type AutoScaleCount struct {
	_ struct{} `type:"structure"`

	Charge *int64 `locationName:"charge" type:"integer"`

	Type *string `locationName:"type" type:"string"`

	Unit *string `locationName:"unit" type:"string"`

	Value *int64 `locationName:"value" type:"integer"`
}

// String returns the string representation
func (s AutoScaleCount) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AutoScaleCount) GoString() string {
	return s.String()
}

// SetCharge sets the Charge field's value.
func (s *AutoScaleCount) SetCharge(v int64) *AutoScaleCount {
	s.Charge = &v
	return s
}

// SetType sets the Type field's value.
func (s *AutoScaleCount) SetType(v string) *AutoScaleCount {
	s.Type = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *AutoScaleCount) SetUnit(v string) *AutoScaleCount {
	s.Unit = &v
	return s
}

// SetValue sets the Value field's value.
func (s *AutoScaleCount) SetValue(v int64) *AutoScaleCount {
	s.Value = &v
	return s
}

type AutoScaleInfo struct {
	_ struct{} `type:"structure"`

	AutoScaleCount *AutoScaleCount `locationName:"autoScaleCount" type:"structure"`

	RunningScaleOutInstanceSet []*RunningScaleOutInstanceSetItem `locationName:"runningScaleOutInstanceSet" locationNameList:"item" type:"list"`

	RunningScaleOutOsSet []*RunningScaleOutOsSetItem `locationName:"runningScaleOutOsSet" locationNameList:"item" type:"list"`

	StoppedScaleOutInstanceSet []*StoppedScaleOutInstanceSetItem `locationName:"stoppedScaleOutInstanceSet" locationNameList:"item" type:"list"`

	StoppedScaleOutOsSet []*StoppedScaleOutOsSetItem `locationName:"stoppedScaleOutOsSet" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s AutoScaleInfo) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AutoScaleInfo) GoString() string {
	return s.String()
}

// SetAutoScaleCount sets the AutoScaleCount field's value.
func (s *AutoScaleInfo) SetAutoScaleCount(v *AutoScaleCount) *AutoScaleInfo {
	s.AutoScaleCount = v
	return s
}

// SetRunningScaleOutInstanceSet sets the RunningScaleOutInstanceSet field's value.
func (s *AutoScaleInfo) SetRunningScaleOutInstanceSet(v []*RunningScaleOutInstanceSetItem) *AutoScaleInfo {
	s.RunningScaleOutInstanceSet = v
	return s
}

// SetRunningScaleOutOsSet sets the RunningScaleOutOsSet field's value.
func (s *AutoScaleInfo) SetRunningScaleOutOsSet(v []*RunningScaleOutOsSetItem) *AutoScaleInfo {
	s.RunningScaleOutOsSet = v
	return s
}

// SetStoppedScaleOutInstanceSet sets the StoppedScaleOutInstanceSet field's value.
func (s *AutoScaleInfo) SetStoppedScaleOutInstanceSet(v []*StoppedScaleOutInstanceSetItem) *AutoScaleInfo {
	s.StoppedScaleOutInstanceSet = v
	return s
}

// SetStoppedScaleOutOsSet sets the StoppedScaleOutOsSet field's value.
func (s *AutoScaleInfo) SetStoppedScaleOutOsSet(v []*StoppedScaleOutOsSetItem) *AutoScaleInfo {
	s.StoppedScaleOutOsSet = v
	return s
}

type AutoScalingReservationSetItem struct {
	_ struct{} `type:"structure"`

	Alarm *string `locationName:"alarm" type:"string"`

	AutoScalingGroupName *string `locationName:"autoScalingGroupName" type:"string"`

	ChangeInCapacity *int64 `locationName:"changeInCapacity" type:"integer"`

	CreatedTime *time.Time `locationName:"createdTime" type:"timestamp" timestampFormat:""`

	DefaultCooldown *int64 `locationName:"defaultCooldown" type:"integer"`

	Description *string `locationName:"description" type:"string"`

	GroupSet []*GroupSetItem `locationName:"groupSet" locationNameList:"item" type:"list"`

	ImageId *string `locationName:"imageId" type:"string"`

	InstanceLifecycleLimit *int64 `locationName:"instanceLifecycleLimit" type:"integer"`

	InstanceType *string `locationName:"instanceType" type:"string"`

	InstancesSet []*InstancesSetItem `locationName:"instancesSet" locationNameList:"item" type:"list"`

	LoadBalancing []*LoadBalancingSetItem `locationName:"loadBalancing" locationNameList:"item" type:"list"`

	MaxSize *int64 `locationName:"maxSize" type:"integer"`

	MinSize *int64 `locationName:"minSize" type:"integer"`

	Placement *Placement `locationName:"placement" type:"structure"`

	Scaleout *int64 `locationName:"scaleout" type:"integer"`

	ScaleoutCondition *string `locationName:"scaleoutCondition" type:"string"`

	ScheduleSet []*ScheduleSetItem `locationName:"scheduleSet" locationNameList:"item" type:"list"`

	TriggerSet []*TriggerSetItem `locationName:"triggerSet" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s AutoScalingReservationSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AutoScalingReservationSetItem) GoString() string {
	return s.String()
}

// SetAlarm sets the Alarm field's value.
func (s *AutoScalingReservationSetItem) SetAlarm(v string) *AutoScalingReservationSetItem {
	s.Alarm = &v
	return s
}

// SetAutoScalingGroupName sets the AutoScalingGroupName field's value.
func (s *AutoScalingReservationSetItem) SetAutoScalingGroupName(v string) *AutoScalingReservationSetItem {
	s.AutoScalingGroupName = &v
	return s
}

// SetChangeInCapacity sets the ChangeInCapacity field's value.
func (s *AutoScalingReservationSetItem) SetChangeInCapacity(v int64) *AutoScalingReservationSetItem {
	s.ChangeInCapacity = &v
	return s
}

// SetCreatedTime sets the CreatedTime field's value.
func (s *AutoScalingReservationSetItem) SetCreatedTime(v time.Time) *AutoScalingReservationSetItem {
	s.CreatedTime = &v
	return s
}

// SetDefaultCooldown sets the DefaultCooldown field's value.
func (s *AutoScalingReservationSetItem) SetDefaultCooldown(v int64) *AutoScalingReservationSetItem {
	s.DefaultCooldown = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *AutoScalingReservationSetItem) SetDescription(v string) *AutoScalingReservationSetItem {
	s.Description = &v
	return s
}

// SetGroupSet sets the GroupSet field's value.
func (s *AutoScalingReservationSetItem) SetGroupSet(v []*GroupSetItem) *AutoScalingReservationSetItem {
	s.GroupSet = v
	return s
}

// SetImageId sets the ImageId field's value.
func (s *AutoScalingReservationSetItem) SetImageId(v string) *AutoScalingReservationSetItem {
	s.ImageId = &v
	return s
}

// SetInstanceLifecycleLimit sets the InstanceLifecycleLimit field's value.
func (s *AutoScalingReservationSetItem) SetInstanceLifecycleLimit(v int64) *AutoScalingReservationSetItem {
	s.InstanceLifecycleLimit = &v
	return s
}

// SetInstanceType sets the InstanceType field's value.
func (s *AutoScalingReservationSetItem) SetInstanceType(v string) *AutoScalingReservationSetItem {
	s.InstanceType = &v
	return s
}

// SetInstancesSet sets the InstancesSet field's value.
func (s *AutoScalingReservationSetItem) SetInstancesSet(v []*InstancesSetItem) *AutoScalingReservationSetItem {
	s.InstancesSet = v
	return s
}

// SetLoadBalancing sets the LoadBalancing field's value.
func (s *AutoScalingReservationSetItem) SetLoadBalancing(v []*LoadBalancingSetItem) *AutoScalingReservationSetItem {
	s.LoadBalancing = v
	return s
}

// SetMaxSize sets the MaxSize field's value.
func (s *AutoScalingReservationSetItem) SetMaxSize(v int64) *AutoScalingReservationSetItem {
	s.MaxSize = &v
	return s
}

// SetMinSize sets the MinSize field's value.
func (s *AutoScalingReservationSetItem) SetMinSize(v int64) *AutoScalingReservationSetItem {
	s.MinSize = &v
	return s
}

// SetPlacement sets the Placement field's value.
func (s *AutoScalingReservationSetItem) SetPlacement(v *Placement) *AutoScalingReservationSetItem {
	s.Placement = v
	return s
}

// SetScaleout sets the Scaleout field's value.
func (s *AutoScalingReservationSetItem) SetScaleout(v int64) *AutoScalingReservationSetItem {
	s.Scaleout = &v
	return s
}

// SetScaleoutCondition sets the ScaleoutCondition field's value.
func (s *AutoScalingReservationSetItem) SetScaleoutCondition(v string) *AutoScalingReservationSetItem {
	s.ScaleoutCondition = &v
	return s
}

// SetScheduleSet sets the ScheduleSet field's value.
func (s *AutoScalingReservationSetItem) SetScheduleSet(v []*ScheduleSetItem) *AutoScalingReservationSetItem {
	s.ScheduleSet = v
	return s
}

// SetTriggerSet sets the TriggerSet field's value.
func (s *AutoScalingReservationSetItem) SetTriggerSet(v []*TriggerSetItem) *AutoScalingReservationSetItem {
	s.TriggerSet = v
	return s
}

type Autoscaling struct {
	_ struct{} `type:"structure"`

	AutoScalingGroupName *string `locationName:"autoScalingGroupName" type:"string"`

	ExpireTime *time.Time `locationName:"expireTime" type:"timestamp" timestampFormat:""`
}

// String returns the string representation
func (s Autoscaling) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s Autoscaling) GoString() string {
	return s.String()
}

// SetAutoScalingGroupName sets the AutoScalingGroupName field's value.
func (s *Autoscaling) SetAutoScalingGroupName(v string) *Autoscaling {
	s.AutoScalingGroupName = &v
	return s
}

// SetExpireTime sets the ExpireTime field's value.
func (s *Autoscaling) SetExpireTime(v time.Time) *Autoscaling {
	s.ExpireTime = &v
	return s
}

type AvailabilityZoneInfoSetItem struct {
	_ struct{} `type:"structure"`

	MessageSet []*MessageSetItem `locationName:"messageSet" locationNameList:"item" type:"list"`

	RegionName *string `locationName:"regionName" type:"string"`

	ZoneName *string `locationName:"zoneName" type:"string"`

	ZoneState *string `locationName:"zoneState" type:"string"`
}

// String returns the string representation
func (s AvailabilityZoneInfoSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AvailabilityZoneInfoSetItem) GoString() string {
	return s.String()
}

// SetMessageSet sets the MessageSet field's value.
func (s *AvailabilityZoneInfoSetItem) SetMessageSet(v []*MessageSetItem) *AvailabilityZoneInfoSetItem {
	s.MessageSet = v
	return s
}

// SetRegionName sets the RegionName field's value.
func (s *AvailabilityZoneInfoSetItem) SetRegionName(v string) *AvailabilityZoneInfoSetItem {
	s.RegionName = &v
	return s
}

// SetZoneName sets the ZoneName field's value.
func (s *AvailabilityZoneInfoSetItem) SetZoneName(v string) *AvailabilityZoneInfoSetItem {
	s.ZoneName = &v
	return s
}

// SetZoneState sets the ZoneState field's value.
func (s *AvailabilityZoneInfoSetItem) SetZoneState(v string) *AvailabilityZoneInfoSetItem {
	s.ZoneState = &v
	return s
}

type BackupInformation struct {
	_ struct{} `type:"structure"`

	ExpirationDate *time.Time `locationName:"expirationDate" type:"timestamp" timestampFormat:""`

	IsBackup *bool `locationName:"isBackup" type:"boolean"`
}

// String returns the string representation
func (s BackupInformation) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s BackupInformation) GoString() string {
	return s.String()
}

// SetExpirationDate sets the ExpirationDate field's value.
func (s *BackupInformation) SetExpirationDate(v time.Time) *BackupInformation {
	s.ExpirationDate = &v
	return s
}

// SetIsBackup sets the IsBackup field's value.
func (s *BackupInformation) SetIsBackup(v bool) *BackupInformation {
	s.IsBackup = &v
	return s
}

type BlockDeviceMappingSetItem struct {
	_ struct{} `type:"structure"`

	DeviceName *string `locationName:"deviceName" type:"string"`

	Ebs *Ebs `locationName:"ebs" type:"structure"`

	NoDevice *string `locationName:"noDevice" type:"string"`

	VirtualName *string `locationName:"virtualName" type:"string"`
}

// String returns the string representation
func (s BlockDeviceMappingSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s BlockDeviceMappingSetItem) GoString() string {
	return s.String()
}

// SetDeviceName sets the DeviceName field's value.
func (s *BlockDeviceMappingSetItem) SetDeviceName(v string) *BlockDeviceMappingSetItem {
	s.DeviceName = &v
	return s
}

// SetEbs sets the Ebs field's value.
func (s *BlockDeviceMappingSetItem) SetEbs(v *Ebs) *BlockDeviceMappingSetItem {
	s.Ebs = v
	return s
}

// SetNoDevice sets the NoDevice field's value.
func (s *BlockDeviceMappingSetItem) SetNoDevice(v string) *BlockDeviceMappingSetItem {
	s.NoDevice = &v
	return s
}

// SetVirtualName sets the VirtualName field's value.
func (s *BlockDeviceMappingSetItem) SetVirtualName(v string) *BlockDeviceMappingSetItem {
	s.VirtualName = &v
	return s
}

type BypassInterface struct {
	_ struct{} `type:"structure"`

	NetworkId *string `locationName:"networkId" type:"string"`

	NetworkName *string `locationName:"networkName" type:"string"`
}

// String returns the string representation
func (s BypassInterface) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s BypassInterface) GoString() string {
	return s.String()
}

// SetNetworkId sets the NetworkId field's value.
func (s *BypassInterface) SetNetworkId(v string) *BypassInterface {
	s.NetworkId = &v
	return s
}

// SetNetworkName sets the NetworkName field's value.
func (s *BypassInterface) SetNetworkName(v string) *BypassInterface {
	s.NetworkName = &v
	return s
}

type CaState struct {
	_ struct{} `type:"structure"`

	Value *string `locationName:"value" type:"string"`
}

// String returns the string representation
func (s CaState) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CaState) GoString() string {
	return s.String()
}

// SetValue sets the Value field's value.
func (s *CaState) SetValue(v string) *CaState {
	s.Value = &v
	return s
}

type CancelCopyInstancesInput struct {
	_ struct{} `type:"structure"`

	InstanceId *string `locationName:"InstanceId" type:"string"`
}

// String returns the string representation
func (s CancelCopyInstancesInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CancelCopyInstancesInput) GoString() string {
	return s.String()
}

// SetInstanceId sets the InstanceId field's value.
func (s *CancelCopyInstancesInput) SetInstanceId(v string) *CancelCopyInstancesInput {
	s.InstanceId = &v
	return s
}

type CancelCopyInstancesOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`
}

// String returns the string representation
func (s CancelCopyInstancesOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CancelCopyInstancesOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *CancelCopyInstancesOutput) SetRequestId(v string) *CancelCopyInstancesOutput {
	s.RequestId = &v
	return s
}

type CancelUploadInput struct {
	_ struct{} `type:"structure"`

	ConversionTaskId *string `locationName:"ConversionTaskId" type:"string"`
}

// String returns the string representation
func (s CancelUploadInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CancelUploadInput) GoString() string {
	return s.String()
}

// SetConversionTaskId sets the ConversionTaskId field's value.
func (s *CancelUploadInput) SetConversionTaskId(v string) *CancelUploadInput {
	s.ConversionTaskId = &v
	return s
}

type CancelUploadOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s CancelUploadOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CancelUploadOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *CancelUploadOutput) SetRequestId(v string) *CancelUploadOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *CancelUploadOutput) SetReturn(v bool) *CancelUploadOutput {
	s.Return = &v
	return s
}

type CertAuthority struct {
	_ struct{} `type:"structure"`

	Value *string `locationName:"value" type:"string"`
}

// String returns the string representation
func (s CertAuthority) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CertAuthority) GoString() string {
	return s.String()
}

// SetValue sets the Value field's value.
func (s *CertAuthority) SetValue(v string) *CertAuthority {
	s.Value = &v
	return s
}

type CertInfo struct {
	_ struct{} `type:"structure"`

	CountryName *string `locationName:"countryName" type:"string"`

	EmailAddress *string `locationName:"emailAddress" type:"string"`

	LocationName *string `locationName:"locationName" type:"string"`

	OrganizationName *string `locationName:"organizationName" type:"string"`

	OrganizationUnitName *string `locationName:"organizationUnitName" type:"string"`

	StateName *string `locationName:"stateName" type:"string"`
}

// String returns the string representation
func (s CertInfo) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CertInfo) GoString() string {
	return s.String()
}

// SetCountryName sets the CountryName field's value.
func (s *CertInfo) SetCountryName(v string) *CertInfo {
	s.CountryName = &v
	return s
}

// SetEmailAddress sets the EmailAddress field's value.
func (s *CertInfo) SetEmailAddress(v string) *CertInfo {
	s.EmailAddress = &v
	return s
}

// SetLocationName sets the LocationName field's value.
func (s *CertInfo) SetLocationName(v string) *CertInfo {
	s.LocationName = &v
	return s
}

// SetOrganizationName sets the OrganizationName field's value.
func (s *CertInfo) SetOrganizationName(v string) *CertInfo {
	s.OrganizationName = &v
	return s
}

// SetOrganizationUnitName sets the OrganizationUnitName field's value.
func (s *CertInfo) SetOrganizationUnitName(v string) *CertInfo {
	s.OrganizationUnitName = &v
	return s
}

// SetStateName sets the StateName field's value.
func (s *CertInfo) SetStateName(v string) *CertInfo {
	s.StateName = &v
	return s
}

type CertState struct {
	_ struct{} `type:"structure"`

	Value *string `locationName:"value" type:"string"`
}

// String returns the string representation
func (s CertState) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CertState) GoString() string {
	return s.String()
}

// SetValue sets the Value field's value.
func (s *CertState) SetValue(v string) *CertState {
	s.Value = &v
	return s
}

type CertsSetItem struct {
	_ struct{} `type:"structure"`

	CaState *bool `locationName:"caState" type:"boolean"`

	CertAuthority *string `locationName:"certAuthority" type:"string"`

	CertInfo *CertInfo `locationName:"certInfo" type:"structure"`

	CertState *string `locationName:"certState" type:"string"`

	Count *int64 `locationName:"count" type:"integer"`

	Description *string `locationName:"description" type:"string"`

	Fqdn *string `locationName:"fqdn" type:"string"`

	FqdnId *string `locationName:"fqdnId" type:"string"`

	KeyLength *int64 `locationName:"keyLength" type:"integer"`

	Period *Period `locationName:"period" type:"structure"`

	UploadState *bool `locationName:"uploadState" type:"boolean"`
}

// String returns the string representation
func (s CertsSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CertsSetItem) GoString() string {
	return s.String()
}

// SetCaState sets the CaState field's value.
func (s *CertsSetItem) SetCaState(v bool) *CertsSetItem {
	s.CaState = &v
	return s
}

// SetCertAuthority sets the CertAuthority field's value.
func (s *CertsSetItem) SetCertAuthority(v string) *CertsSetItem {
	s.CertAuthority = &v
	return s
}

// SetCertInfo sets the CertInfo field's value.
func (s *CertsSetItem) SetCertInfo(v *CertInfo) *CertsSetItem {
	s.CertInfo = v
	return s
}

// SetCertState sets the CertState field's value.
func (s *CertsSetItem) SetCertState(v string) *CertsSetItem {
	s.CertState = &v
	return s
}

// SetCount sets the Count field's value.
func (s *CertsSetItem) SetCount(v int64) *CertsSetItem {
	s.Count = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *CertsSetItem) SetDescription(v string) *CertsSetItem {
	s.Description = &v
	return s
}

// SetFqdn sets the Fqdn field's value.
func (s *CertsSetItem) SetFqdn(v string) *CertsSetItem {
	s.Fqdn = &v
	return s
}

// SetFqdnId sets the FqdnId field's value.
func (s *CertsSetItem) SetFqdnId(v string) *CertsSetItem {
	s.FqdnId = &v
	return s
}

// SetKeyLength sets the KeyLength field's value.
func (s *CertsSetItem) SetKeyLength(v int64) *CertsSetItem {
	s.KeyLength = &v
	return s
}

// SetPeriod sets the Period field's value.
func (s *CertsSetItem) SetPeriod(v *Period) *CertsSetItem {
	s.Period = v
	return s
}

// SetUploadState sets the UploadState field's value.
func (s *CertsSetItem) SetUploadState(v bool) *CertsSetItem {
	s.UploadState = &v
	return s
}

type ChargeDetail struct {
	_ struct{} `type:"structure"`

	Charge *int64 `locationName:"charge" type:"integer"`

	Type *string `locationName:"type" type:"string"`

	Unit *string `locationName:"unit" type:"string"`

	Value *int64 `locationName:"value" type:"integer"`
}

// String returns the string representation
func (s ChargeDetail) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ChargeDetail) GoString() string {
	return s.String()
}

// SetCharge sets the Charge field's value.
func (s *ChargeDetail) SetCharge(v int64) *ChargeDetail {
	s.Charge = &v
	return s
}

// SetType sets the Type field's value.
func (s *ChargeDetail) SetType(v string) *ChargeDetail {
	s.Type = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *ChargeDetail) SetUnit(v string) *ChargeDetail {
	s.Unit = &v
	return s
}

// SetValue sets the Value field's value.
func (s *ChargeDetail) SetValue(v int64) *ChargeDetail {
	s.Value = &v
	return s
}

type ChargeDetailInfo struct {
	_ struct{} `type:"structure"`

	ChargeDetail *ChargeDetail `locationName:"chargeDetail" type:"structure"`
}

// String returns the string representation
func (s ChargeDetailInfo) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ChargeDetailInfo) GoString() string {
	return s.String()
}

// SetChargeDetail sets the ChargeDetail field's value.
func (s *ChargeDetailInfo) SetChargeDetail(v *ChargeDetail) *ChargeDetailInfo {
	s.ChargeDetail = v
	return s
}

type ClearLoadBalancerSessionInput struct {
	_ struct{} `type:"structure"`

	InstancePort *int64 `locationName:"InstancePort" type:"integer"`

	LoadBalancerName *string `locationName:"LoadBalancerName" type:"string"`

	LoadBalancerPort *int64 `locationName:"LoadBalancerPort" type:"integer"`
}

// String returns the string representation
func (s ClearLoadBalancerSessionInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ClearLoadBalancerSessionInput) GoString() string {
	return s.String()
}

// SetInstancePort sets the InstancePort field's value.
func (s *ClearLoadBalancerSessionInput) SetInstancePort(v int64) *ClearLoadBalancerSessionInput {
	s.InstancePort = &v
	return s
}

// SetLoadBalancerName sets the LoadBalancerName field's value.
func (s *ClearLoadBalancerSessionInput) SetLoadBalancerName(v string) *ClearLoadBalancerSessionInput {
	s.LoadBalancerName = &v
	return s
}

// SetLoadBalancerPort sets the LoadBalancerPort field's value.
func (s *ClearLoadBalancerSessionInput) SetLoadBalancerPort(v int64) *ClearLoadBalancerSessionInput {
	s.LoadBalancerPort = &v
	return s
}

type ClearLoadBalancerSessionOutput struct {
	_ struct{} `type:"structure"`

	ResponseMetadata *ResponseMetadata `locationName:"ResponseMetadata" type:"structure"`
}

// String returns the string representation
func (s ClearLoadBalancerSessionOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ClearLoadBalancerSessionOutput) GoString() string {
	return s.String()
}

// SetResponseMetadata sets the ResponseMetadata field's value.
func (s *ClearLoadBalancerSessionOutput) SetResponseMetadata(v *ResponseMetadata) *ClearLoadBalancerSessionOutput {
	s.ResponseMetadata = v
	return s
}

type ConfigureHealthCheckInput struct {
	_ struct{} `type:"structure"`

	HealthCheck *RequestHealthCheckStruct `locationName:"HealthCheck" type:"structure"`

	InstancePort *int64 `locationName:"InstancePort" type:"integer"`

	LoadBalancerName *string `locationName:"LoadBalancerName" type:"string"`

	LoadBalancerPort *int64 `locationName:"LoadBalancerPort" type:"integer"`
}

// String returns the string representation
func (s ConfigureHealthCheckInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ConfigureHealthCheckInput) GoString() string {
	return s.String()
}

// SetHealthCheck sets the HealthCheck field's value.
func (s *ConfigureHealthCheckInput) SetHealthCheck(v *RequestHealthCheckStruct) *ConfigureHealthCheckInput {
	s.HealthCheck = v
	return s
}

// SetInstancePort sets the InstancePort field's value.
func (s *ConfigureHealthCheckInput) SetInstancePort(v int64) *ConfigureHealthCheckInput {
	s.InstancePort = &v
	return s
}

// SetLoadBalancerName sets the LoadBalancerName field's value.
func (s *ConfigureHealthCheckInput) SetLoadBalancerName(v string) *ConfigureHealthCheckInput {
	s.LoadBalancerName = &v
	return s
}

// SetLoadBalancerPort sets the LoadBalancerPort field's value.
func (s *ConfigureHealthCheckInput) SetLoadBalancerPort(v int64) *ConfigureHealthCheckInput {
	s.LoadBalancerPort = &v
	return s
}

type ConfigureHealthCheckOutput struct {
	_ struct{} `type:"structure"`

	ConfigureHealthCheckResult *ConfigureHealthCheckOutput `locationName:"ConfigureHealthCheckResult" type:"structure"`

	HealthCheck *HealthCheck `locationName:"HealthCheck" type:"structure"`

	ResponseMetadata *ResponseMetadata `locationName:"ResponseMetadata" type:"structure"`
}

// String returns the string representation
func (s ConfigureHealthCheckOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ConfigureHealthCheckOutput) GoString() string {
	return s.String()
}

// SetConfigureHealthCheckResult sets the ConfigureHealthCheckResult field's value.
func (s *ConfigureHealthCheckOutput) SetConfigureHealthCheckResult(v *ConfigureHealthCheckOutput) *ConfigureHealthCheckOutput {
	s.ConfigureHealthCheckResult = v
	return s
}

// SetHealthCheck sets the HealthCheck field's value.
func (s *ConfigureHealthCheckOutput) SetHealthCheck(v *HealthCheck) *ConfigureHealthCheckOutput {
	s.HealthCheck = v
	return s
}

// SetResponseMetadata sets the ResponseMetadata field's value.
func (s *ConfigureHealthCheckOutput) SetResponseMetadata(v *ResponseMetadata) *ConfigureHealthCheckOutput {
	s.ResponseMetadata = v
	return s
}

type ConversionTask struct {
	_ struct{} `type:"structure"`

	ConversionTaskId *string `locationName:"conversionTaskId" type:"string"`

	ExpirationTime *string `locationName:"expirationTime" type:"string"`

	ImportInstance *ImportInstance `locationName:"importInstance" type:"structure"`

	NetworkInterfaceSet []*NetworkInterfaceSetItem `locationName:"networkInterfaceSet" locationNameList:"item" type:"list"`

	State *string `locationName:"state" type:"string"`

	StatusMessage *string `locationName:"statusMessage" type:"string"`

	TagSet []*TagSetItem `locationName:"tagSet" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s ConversionTask) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ConversionTask) GoString() string {
	return s.String()
}

// SetConversionTaskId sets the ConversionTaskId field's value.
func (s *ConversionTask) SetConversionTaskId(v string) *ConversionTask {
	s.ConversionTaskId = &v
	return s
}

// SetExpirationTime sets the ExpirationTime field's value.
func (s *ConversionTask) SetExpirationTime(v string) *ConversionTask {
	s.ExpirationTime = &v
	return s
}

// SetImportInstance sets the ImportInstance field's value.
func (s *ConversionTask) SetImportInstance(v *ImportInstance) *ConversionTask {
	s.ImportInstance = v
	return s
}

// SetNetworkInterfaceSet sets the NetworkInterfaceSet field's value.
func (s *ConversionTask) SetNetworkInterfaceSet(v []*NetworkInterfaceSetItem) *ConversionTask {
	s.NetworkInterfaceSet = v
	return s
}

// SetState sets the State field's value.
func (s *ConversionTask) SetState(v string) *ConversionTask {
	s.State = &v
	return s
}

// SetStatusMessage sets the StatusMessage field's value.
func (s *ConversionTask) SetStatusMessage(v string) *ConversionTask {
	s.StatusMessage = &v
	return s
}

// SetTagSet sets the TagSet field's value.
func (s *ConversionTask) SetTagSet(v []*TagSetItem) *ConversionTask {
	s.TagSet = v
	return s
}

type CopyInfo struct {
	_ struct{} `type:"structure"`

	InstanceCopy *InstanceCopy `locationName:"instanceCopy" type:"structure"`

	Value *string `locationName:"value" type:"string"`
}

// String returns the string representation
func (s CopyInfo) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CopyInfo) GoString() string {
	return s.String()
}

// SetInstanceCopy sets the InstanceCopy field's value.
func (s *CopyInfo) SetInstanceCopy(v *InstanceCopy) *CopyInfo {
	s.InstanceCopy = v
	return s
}

// SetValue sets the Value field's value.
func (s *CopyInfo) SetValue(v string) *CopyInfo {
	s.Value = &v
	return s
}

type CopyInstanceSetItem struct {
	_ struct{} `type:"structure"`

	InstanceId *string `locationName:"instanceId" type:"string"`

	InstanceState *string `locationName:"instanceState" type:"string"`

	InstanceUniqueId *string `locationName:"instanceUniqueId" type:"string"`
}

// String returns the string representation
func (s CopyInstanceSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CopyInstanceSetItem) GoString() string {
	return s.String()
}

// SetInstanceId sets the InstanceId field's value.
func (s *CopyInstanceSetItem) SetInstanceId(v string) *CopyInstanceSetItem {
	s.InstanceId = &v
	return s
}

// SetInstanceState sets the InstanceState field's value.
func (s *CopyInstanceSetItem) SetInstanceState(v string) *CopyInstanceSetItem {
	s.InstanceState = &v
	return s
}

// SetInstanceUniqueId sets the InstanceUniqueId field's value.
func (s *CopyInstanceSetItem) SetInstanceUniqueId(v string) *CopyInstanceSetItem {
	s.InstanceUniqueId = &v
	return s
}

type CopyInstancesInput struct {
	_ struct{} `type:"structure"`

	CopyCount *int64 `locationName:"CopyCount" type:"integer"`

	CopyInstance *RequestCopyInstanceStruct `locationName:"CopyInstance" type:"structure"`

	InstanceId *string `locationName:"InstanceId" type:"string"`

	NetworkInterface []*RequestNetworkInterfaceStruct `locationName:"NetworkInterface" type:"list"`
}

// String returns the string representation
func (s CopyInstancesInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CopyInstancesInput) GoString() string {
	return s.String()
}

// SetCopyCount sets the CopyCount field's value.
func (s *CopyInstancesInput) SetCopyCount(v int64) *CopyInstancesInput {
	s.CopyCount = &v
	return s
}

// SetCopyInstance sets the CopyInstance field's value.
func (s *CopyInstancesInput) SetCopyInstance(v *RequestCopyInstanceStruct) *CopyInstancesInput {
	s.CopyInstance = v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *CopyInstancesInput) SetInstanceId(v string) *CopyInstancesInput {
	s.InstanceId = &v
	return s
}

// SetNetworkInterface sets the NetworkInterface field's value.
func (s *CopyInstancesInput) SetNetworkInterface(v []*RequestNetworkInterfaceStruct) *CopyInstancesInput {
	s.NetworkInterface = v
	return s
}

type CopyInstancesOutput struct {
	_ struct{} `type:"structure"`

	CopyInstanceSet []*CopyInstanceSetItem `locationName:"copyInstanceSet" locationNameList:"item" type:"list"`

	RequestId *string `locationName:"requestId" type:"string"`
}

// String returns the string representation
func (s CopyInstancesOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CopyInstancesOutput) GoString() string {
	return s.String()
}

// SetCopyInstanceSet sets the CopyInstanceSet field's value.
func (s *CopyInstancesOutput) SetCopyInstanceSet(v []*CopyInstanceSetItem) *CopyInstancesOutput {
	s.CopyInstanceSet = v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *CopyInstancesOutput) SetRequestId(v string) *CopyInstancesOutput {
	s.RequestId = &v
	return s
}

type Count struct {
	_ struct{} `type:"structure"`

	Value *string `locationName:"value" type:"string"`
}

// String returns the string representation
func (s Count) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s Count) GoString() string {
	return s.String()
}

// SetValue sets the Value field's value.
func (s *Count) SetValue(v string) *Count {
	s.Value = &v
	return s
}

type CreateCustomerGatewayInput struct {
	_ struct{} `type:"structure"`

	IpAddress *string `locationName:"IpAddress" type:"string"`

	NiftyCustomerGatewayDescription *string `locationName:"NiftyCustomerGatewayDescription" type:"string"`

	NiftyCustomerGatewayName *string `locationName:"NiftyCustomerGatewayName" type:"string"`

	NiftyLanSideCidrBlock *string `locationName:"NiftyLanSideCidrBlock" type:"string"`

	NiftyLanSideIpAddress *string `locationName:"NiftyLanSideIpAddress" type:"string"`
}

// String returns the string representation
func (s CreateCustomerGatewayInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateCustomerGatewayInput) GoString() string {
	return s.String()
}

// SetIpAddress sets the IpAddress field's value.
func (s *CreateCustomerGatewayInput) SetIpAddress(v string) *CreateCustomerGatewayInput {
	s.IpAddress = &v
	return s
}

// SetNiftyCustomerGatewayDescription sets the NiftyCustomerGatewayDescription field's value.
func (s *CreateCustomerGatewayInput) SetNiftyCustomerGatewayDescription(v string) *CreateCustomerGatewayInput {
	s.NiftyCustomerGatewayDescription = &v
	return s
}

// SetNiftyCustomerGatewayName sets the NiftyCustomerGatewayName field's value.
func (s *CreateCustomerGatewayInput) SetNiftyCustomerGatewayName(v string) *CreateCustomerGatewayInput {
	s.NiftyCustomerGatewayName = &v
	return s
}

// SetNiftyLanSideCidrBlock sets the NiftyLanSideCidrBlock field's value.
func (s *CreateCustomerGatewayInput) SetNiftyLanSideCidrBlock(v string) *CreateCustomerGatewayInput {
	s.NiftyLanSideCidrBlock = &v
	return s
}

// SetNiftyLanSideIpAddress sets the NiftyLanSideIpAddress field's value.
func (s *CreateCustomerGatewayInput) SetNiftyLanSideIpAddress(v string) *CreateCustomerGatewayInput {
	s.NiftyLanSideIpAddress = &v
	return s
}

type CreateCustomerGatewayOutput struct {
	_ struct{} `type:"structure"`

	CustomerGateway *CustomerGateway `locationName:"customerGateway" type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`
}

// String returns the string representation
func (s CreateCustomerGatewayOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateCustomerGatewayOutput) GoString() string {
	return s.String()
}

// SetCustomerGateway sets the CustomerGateway field's value.
func (s *CreateCustomerGatewayOutput) SetCustomerGateway(v *CustomerGateway) *CreateCustomerGatewayOutput {
	s.CustomerGateway = v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *CreateCustomerGatewayOutput) SetRequestId(v string) *CreateCustomerGatewayOutput {
	s.RequestId = &v
	return s
}

type CreateDhcpOptionsInput struct {
	_ struct{} `type:"structure"`

	DhcpConfiguration []*RequestDhcpConfigurationStruct `locationName:"DhcpConfiguration" type:"list"`
}

// String returns the string representation
func (s CreateDhcpOptionsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateDhcpOptionsInput) GoString() string {
	return s.String()
}

// SetDhcpConfiguration sets the DhcpConfiguration field's value.
func (s *CreateDhcpOptionsInput) SetDhcpConfiguration(v []*RequestDhcpConfigurationStruct) *CreateDhcpOptionsInput {
	s.DhcpConfiguration = v
	return s
}

type CreateDhcpOptionsOutput struct {
	_ struct{} `type:"structure"`

	DhcpOptions *DhcpOptions `locationName:"dhcpOptions" type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`
}

// String returns the string representation
func (s CreateDhcpOptionsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateDhcpOptionsOutput) GoString() string {
	return s.String()
}

// SetDhcpOptions sets the DhcpOptions field's value.
func (s *CreateDhcpOptionsOutput) SetDhcpOptions(v *DhcpOptions) *CreateDhcpOptionsOutput {
	s.DhcpOptions = v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *CreateDhcpOptionsOutput) SetRequestId(v string) *CreateDhcpOptionsOutput {
	s.RequestId = &v
	return s
}

type CreateImage struct {
	_ struct{} `type:"structure"`

	Charge *int64 `locationName:"charge" type:"integer"`

	Type *string `locationName:"type" type:"string"`

	Unit *string `locationName:"unit" type:"string"`

	Value *int64 `locationName:"value" type:"integer"`
}

// String returns the string representation
func (s CreateImage) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateImage) GoString() string {
	return s.String()
}

// SetCharge sets the Charge field's value.
func (s *CreateImage) SetCharge(v int64) *CreateImage {
	s.Charge = &v
	return s
}

// SetType sets the Type field's value.
func (s *CreateImage) SetType(v string) *CreateImage {
	s.Type = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *CreateImage) SetUnit(v string) *CreateImage {
	s.Unit = &v
	return s
}

// SetValue sets the Value field's value.
func (s *CreateImage) SetValue(v int64) *CreateImage {
	s.Value = &v
	return s
}

type CreateImageInput struct {
	_ struct{} `type:"structure"`

	Description *string `locationName:"Description" type:"string"`

	InstanceId *string `locationName:"InstanceId" type:"string"`

	LeftInstance *bool `locationName:"LeftInstance" type:"boolean"`

	Name *string `locationName:"Name" type:"string"`

	Placement *RequestPlacementStruct `locationName:"Placement" type:"structure"`
}

// String returns the string representation
func (s CreateImageInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateImageInput) GoString() string {
	return s.String()
}

// SetDescription sets the Description field's value.
func (s *CreateImageInput) SetDescription(v string) *CreateImageInput {
	s.Description = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *CreateImageInput) SetInstanceId(v string) *CreateImageInput {
	s.InstanceId = &v
	return s
}

// SetLeftInstance sets the LeftInstance field's value.
func (s *CreateImageInput) SetLeftInstance(v bool) *CreateImageInput {
	s.LeftInstance = &v
	return s
}

// SetName sets the Name field's value.
func (s *CreateImageInput) SetName(v string) *CreateImageInput {
	s.Name = &v
	return s
}

// SetPlacement sets the Placement field's value.
func (s *CreateImageInput) SetPlacement(v *RequestPlacementStruct) *CreateImageInput {
	s.Placement = v
	return s
}

type CreateImageOutput struct {
	_ struct{} `type:"structure"`

	ImageId *string `locationName:"imageId" type:"string"`

	ImageState *string `locationName:"imageState" type:"string"`

	RequestId *string `locationName:"requestId" type:"string"`
}

// String returns the string representation
func (s CreateImageOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateImageOutput) GoString() string {
	return s.String()
}

// SetImageId sets the ImageId field's value.
func (s *CreateImageOutput) SetImageId(v string) *CreateImageOutput {
	s.ImageId = &v
	return s
}

// SetImageState sets the ImageState field's value.
func (s *CreateImageOutput) SetImageState(v string) *CreateImageOutput {
	s.ImageState = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *CreateImageOutput) SetRequestId(v string) *CreateImageOutput {
	s.RequestId = &v
	return s
}

type CreateKeyPairInput struct {
	_ struct{} `type:"structure"`

	Description *string `locationName:"Description" type:"string"`

	KeyName *string `locationName:"KeyName" type:"string"`

	Password *string `locationName:"Password" type:"string"`
}

// String returns the string representation
func (s CreateKeyPairInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateKeyPairInput) GoString() string {
	return s.String()
}

// SetDescription sets the Description field's value.
func (s *CreateKeyPairInput) SetDescription(v string) *CreateKeyPairInput {
	s.Description = &v
	return s
}

// SetKeyName sets the KeyName field's value.
func (s *CreateKeyPairInput) SetKeyName(v string) *CreateKeyPairInput {
	s.KeyName = &v
	return s
}

// SetPassword sets the Password field's value.
func (s *CreateKeyPairInput) SetPassword(v string) *CreateKeyPairInput {
	s.Password = &v
	return s
}

type CreateKeyPairOutput struct {
	_ struct{} `type:"structure"`

	KeyFingerprint *string `locationName:"keyFingerprint" type:"string"`

	KeyMaterial *string `locationName:"keyMaterial" type:"string"`

	KeyName *string `locationName:"keyName" type:"string"`

	RequestId *string `locationName:"requestId" type:"string"`
}

// String returns the string representation
func (s CreateKeyPairOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateKeyPairOutput) GoString() string {
	return s.String()
}

// SetKeyFingerprint sets the KeyFingerprint field's value.
func (s *CreateKeyPairOutput) SetKeyFingerprint(v string) *CreateKeyPairOutput {
	s.KeyFingerprint = &v
	return s
}

// SetKeyMaterial sets the KeyMaterial field's value.
func (s *CreateKeyPairOutput) SetKeyMaterial(v string) *CreateKeyPairOutput {
	s.KeyMaterial = &v
	return s
}

// SetKeyName sets the KeyName field's value.
func (s *CreateKeyPairOutput) SetKeyName(v string) *CreateKeyPairOutput {
	s.KeyName = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *CreateKeyPairOutput) SetRequestId(v string) *CreateKeyPairOutput {
	s.RequestId = &v
	return s
}

type CreateLoadBalancerInput struct {
	_ struct{} `type:"structure"`

	AccountingType *string `locationName:"AccountingType" type:"string"`

	AvailabilityZones []*string `locationName:"AvailabilityZones" locationNameList:"member" type:"list"`

	IpVersion *string `locationName:"IpVersion" type:"string"`

	Listeners []*RequestListenersStruct `locationName:"Listeners" locationNameList:"member" type:"list"`

	LoadBalancerName *string `locationName:"LoadBalancerName" type:"string"`

	NetworkVolume *int64 `locationName:"NetworkVolume" type:"integer"`
}

// String returns the string representation
func (s CreateLoadBalancerInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateLoadBalancerInput) GoString() string {
	return s.String()
}

// SetAccountingType sets the AccountingType field's value.
func (s *CreateLoadBalancerInput) SetAccountingType(v string) *CreateLoadBalancerInput {
	s.AccountingType = &v
	return s
}

// SetAvailabilityZones sets the AvailabilityZones field's value.
func (s *CreateLoadBalancerInput) SetAvailabilityZones(v []*string) *CreateLoadBalancerInput {
	s.AvailabilityZones = v
	return s
}

// SetIpVersion sets the IpVersion field's value.
func (s *CreateLoadBalancerInput) SetIpVersion(v string) *CreateLoadBalancerInput {
	s.IpVersion = &v
	return s
}

// SetListeners sets the Listeners field's value.
func (s *CreateLoadBalancerInput) SetListeners(v []*RequestListenersStruct) *CreateLoadBalancerInput {
	s.Listeners = v
	return s
}

// SetLoadBalancerName sets the LoadBalancerName field's value.
func (s *CreateLoadBalancerInput) SetLoadBalancerName(v string) *CreateLoadBalancerInput {
	s.LoadBalancerName = &v
	return s
}

// SetNetworkVolume sets the NetworkVolume field's value.
func (s *CreateLoadBalancerInput) SetNetworkVolume(v int64) *CreateLoadBalancerInput {
	s.NetworkVolume = &v
	return s
}

type CreateLoadBalancerOutput struct {
	_ struct{} `type:"structure"`

	CreateLoadBalancerResult *CreateLoadBalancerOutput `locationName:"CreateLoadBalancerResult" type:"structure"`

	DNSName *string `locationName:"DNSName" type:"string"`

	ResponseMetadata *ResponseMetadata `locationName:"ResponseMetadata" type:"structure"`
}

// String returns the string representation
func (s CreateLoadBalancerOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateLoadBalancerOutput) GoString() string {
	return s.String()
}

// SetCreateLoadBalancerResult sets the CreateLoadBalancerResult field's value.
func (s *CreateLoadBalancerOutput) SetCreateLoadBalancerResult(v *CreateLoadBalancerOutput) *CreateLoadBalancerOutput {
	s.CreateLoadBalancerResult = v
	return s
}

// SetDNSName sets the DNSName field's value.
func (s *CreateLoadBalancerOutput) SetDNSName(v string) *CreateLoadBalancerOutput {
	s.DNSName = &v
	return s
}

// SetResponseMetadata sets the ResponseMetadata field's value.
func (s *CreateLoadBalancerOutput) SetResponseMetadata(v *ResponseMetadata) *CreateLoadBalancerOutput {
	s.ResponseMetadata = v
	return s
}

type CreateRouteInput struct {
	_ struct{} `type:"structure"`

	DestinationCidrBlock *string `locationName:"DestinationCidrBlock" type:"string"`

	IpAddress *string `locationName:"IpAddress" type:"string"`

	NetworkId *string `locationName:"NetworkId" type:"string"`

	NetworkName *string `locationName:"NetworkName" type:"string"`

	RouteTableId *string `locationName:"RouteTableId" type:"string"`
}

// String returns the string representation
func (s CreateRouteInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateRouteInput) GoString() string {
	return s.String()
}

// SetDestinationCidrBlock sets the DestinationCidrBlock field's value.
func (s *CreateRouteInput) SetDestinationCidrBlock(v string) *CreateRouteInput {
	s.DestinationCidrBlock = &v
	return s
}

// SetIpAddress sets the IpAddress field's value.
func (s *CreateRouteInput) SetIpAddress(v string) *CreateRouteInput {
	s.IpAddress = &v
	return s
}

// SetNetworkId sets the NetworkId field's value.
func (s *CreateRouteInput) SetNetworkId(v string) *CreateRouteInput {
	s.NetworkId = &v
	return s
}

// SetNetworkName sets the NetworkName field's value.
func (s *CreateRouteInput) SetNetworkName(v string) *CreateRouteInput {
	s.NetworkName = &v
	return s
}

// SetRouteTableId sets the RouteTableId field's value.
func (s *CreateRouteInput) SetRouteTableId(v string) *CreateRouteInput {
	s.RouteTableId = &v
	return s
}

type CreateRouteOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s CreateRouteOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateRouteOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *CreateRouteOutput) SetRequestId(v string) *CreateRouteOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *CreateRouteOutput) SetReturn(v bool) *CreateRouteOutput {
	s.Return = &v
	return s
}

type CreateRouteTableInput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s CreateRouteTableInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateRouteTableInput) GoString() string {
	return s.String()
}

type CreateRouteTableOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	RouteTable *RouteTable `locationName:"routeTable" type:"structure"`
}

// String returns the string representation
func (s CreateRouteTableOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateRouteTableOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *CreateRouteTableOutput) SetRequestId(v string) *CreateRouteTableOutput {
	s.RequestId = &v
	return s
}

// SetRouteTable sets the RouteTable field's value.
func (s *CreateRouteTableOutput) SetRouteTable(v *RouteTable) *CreateRouteTableOutput {
	s.RouteTable = v
	return s
}

type CreateSecurityGroupInput struct {
	_ struct{} `type:"structure"`

	GroupDescription *string `locationName:"GroupDescription" type:"string"`

	GroupName *string `locationName:"GroupName" type:"string"`

	Placement *RequestPlacementStruct `locationName:"Placement" type:"structure"`
}

// String returns the string representation
func (s CreateSecurityGroupInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateSecurityGroupInput) GoString() string {
	return s.String()
}

// SetGroupDescription sets the GroupDescription field's value.
func (s *CreateSecurityGroupInput) SetGroupDescription(v string) *CreateSecurityGroupInput {
	s.GroupDescription = &v
	return s
}

// SetGroupName sets the GroupName field's value.
func (s *CreateSecurityGroupInput) SetGroupName(v string) *CreateSecurityGroupInput {
	s.GroupName = &v
	return s
}

// SetPlacement sets the Placement field's value.
func (s *CreateSecurityGroupInput) SetPlacement(v *RequestPlacementStruct) *CreateSecurityGroupInput {
	s.Placement = v
	return s
}

type CreateSecurityGroupOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s CreateSecurityGroupOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateSecurityGroupOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *CreateSecurityGroupOutput) SetRequestId(v string) *CreateSecurityGroupOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *CreateSecurityGroupOutput) SetReturn(v bool) *CreateSecurityGroupOutput {
	s.Return = &v
	return s
}

type CreateSslCertSetItem struct {
	_ struct{} `type:"structure"`

	Charge *int64 `locationName:"charge" type:"integer"`

	Type *string `locationName:"type" type:"string"`

	Unit *string `locationName:"unit" type:"string"`

	Value *int64 `locationName:"value" type:"integer"`
}

// String returns the string representation
func (s CreateSslCertSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateSslCertSetItem) GoString() string {
	return s.String()
}

// SetCharge sets the Charge field's value.
func (s *CreateSslCertSetItem) SetCharge(v int64) *CreateSslCertSetItem {
	s.Charge = &v
	return s
}

// SetType sets the Type field's value.
func (s *CreateSslCertSetItem) SetType(v string) *CreateSslCertSetItem {
	s.Type = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *CreateSslCertSetItem) SetUnit(v string) *CreateSslCertSetItem {
	s.Unit = &v
	return s
}

// SetValue sets the Value field's value.
func (s *CreateSslCertSetItem) SetValue(v int64) *CreateSslCertSetItem {
	s.Value = &v
	return s
}

type CreateSslCertificateInput struct {
	_ struct{} `type:"structure"`

	ApproverEmailAddress *string `locationName:"ApproverEmailAddress" type:"string"`

	CertAuthority *int64 `locationName:"CertAuthority" type:"integer"`

	CertInfo *RequestCertInfoStruct `locationName:"CertInfo" type:"structure"`

	Count *int64 `locationName:"Count" type:"integer"`

	Fqdn *string `locationName:"Fqdn" type:"string"`

	FqdnId *string `locationName:"FqdnId" type:"string"`

	KeyLength *int64 `locationName:"KeyLength" type:"integer"`

	ValidityTerm *int64 `locationName:"ValidityTerm" type:"integer"`
}

// String returns the string representation
func (s CreateSslCertificateInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateSslCertificateInput) GoString() string {
	return s.String()
}

// SetApproverEmailAddress sets the ApproverEmailAddress field's value.
func (s *CreateSslCertificateInput) SetApproverEmailAddress(v string) *CreateSslCertificateInput {
	s.ApproverEmailAddress = &v
	return s
}

// SetCertAuthority sets the CertAuthority field's value.
func (s *CreateSslCertificateInput) SetCertAuthority(v int64) *CreateSslCertificateInput {
	s.CertAuthority = &v
	return s
}

// SetCertInfo sets the CertInfo field's value.
func (s *CreateSslCertificateInput) SetCertInfo(v *RequestCertInfoStruct) *CreateSslCertificateInput {
	s.CertInfo = v
	return s
}

// SetCount sets the Count field's value.
func (s *CreateSslCertificateInput) SetCount(v int64) *CreateSslCertificateInput {
	s.Count = &v
	return s
}

// SetFqdn sets the Fqdn field's value.
func (s *CreateSslCertificateInput) SetFqdn(v string) *CreateSslCertificateInput {
	s.Fqdn = &v
	return s
}

// SetFqdnId sets the FqdnId field's value.
func (s *CreateSslCertificateInput) SetFqdnId(v string) *CreateSslCertificateInput {
	s.FqdnId = &v
	return s
}

// SetKeyLength sets the KeyLength field's value.
func (s *CreateSslCertificateInput) SetKeyLength(v int64) *CreateSslCertificateInput {
	s.KeyLength = &v
	return s
}

// SetValidityTerm sets the ValidityTerm field's value.
func (s *CreateSslCertificateInput) SetValidityTerm(v int64) *CreateSslCertificateInput {
	s.ValidityTerm = &v
	return s
}

type CreateSslCertificateOutput struct {
	_ struct{} `type:"structure"`

	ApproverEmailAddress *int64 `locationName:"approverEmailAddress" type:"integer"`

	CertAuthority *string `locationName:"certAuthority" type:"string"`

	CertState *string `locationName:"certState" type:"string"`

	Fqdn *string `locationName:"fqdn" type:"string"`

	FqdnId *string `locationName:"fqdnId" type:"string"`

	RequestId *string `locationName:"requestId" type:"string"`

	ValidityTerm *int64 `locationName:"validityTerm" type:"integer"`
}

// String returns the string representation
func (s CreateSslCertificateOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateSslCertificateOutput) GoString() string {
	return s.String()
}

// SetApproverEmailAddress sets the ApproverEmailAddress field's value.
func (s *CreateSslCertificateOutput) SetApproverEmailAddress(v int64) *CreateSslCertificateOutput {
	s.ApproverEmailAddress = &v
	return s
}

// SetCertAuthority sets the CertAuthority field's value.
func (s *CreateSslCertificateOutput) SetCertAuthority(v string) *CreateSslCertificateOutput {
	s.CertAuthority = &v
	return s
}

// SetCertState sets the CertState field's value.
func (s *CreateSslCertificateOutput) SetCertState(v string) *CreateSslCertificateOutput {
	s.CertState = &v
	return s
}

// SetFqdn sets the Fqdn field's value.
func (s *CreateSslCertificateOutput) SetFqdn(v string) *CreateSslCertificateOutput {
	s.Fqdn = &v
	return s
}

// SetFqdnId sets the FqdnId field's value.
func (s *CreateSslCertificateOutput) SetFqdnId(v string) *CreateSslCertificateOutput {
	s.FqdnId = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *CreateSslCertificateOutput) SetRequestId(v string) *CreateSslCertificateOutput {
	s.RequestId = &v
	return s
}

// SetValidityTerm sets the ValidityTerm field's value.
func (s *CreateSslCertificateOutput) SetValidityTerm(v int64) *CreateSslCertificateOutput {
	s.ValidityTerm = &v
	return s
}

type CreateVolumeInput struct {
	_ struct{} `type:"structure"`

	AccountingType *string `locationName:"AccountingType" type:"string"`

	Description *string `locationName:"Description" type:"string"`

	DiskType *string `locationName:"DiskType" type:"string"`

	InstanceId *string `locationName:"InstanceId" type:"string"`

	Size *int64 `locationName:"Size" type:"integer"`

	VolumeId *string `locationName:"VolumeId" type:"string"`
}

// String returns the string representation
func (s CreateVolumeInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateVolumeInput) GoString() string {
	return s.String()
}

// SetAccountingType sets the AccountingType field's value.
func (s *CreateVolumeInput) SetAccountingType(v string) *CreateVolumeInput {
	s.AccountingType = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *CreateVolumeInput) SetDescription(v string) *CreateVolumeInput {
	s.Description = &v
	return s
}

// SetDiskType sets the DiskType field's value.
func (s *CreateVolumeInput) SetDiskType(v string) *CreateVolumeInput {
	s.DiskType = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *CreateVolumeInput) SetInstanceId(v string) *CreateVolumeInput {
	s.InstanceId = &v
	return s
}

// SetSize sets the Size field's value.
func (s *CreateVolumeInput) SetSize(v int64) *CreateVolumeInput {
	s.Size = &v
	return s
}

// SetVolumeId sets the VolumeId field's value.
func (s *CreateVolumeInput) SetVolumeId(v string) *CreateVolumeInput {
	s.VolumeId = &v
	return s
}

type CreateVolumeOutput struct {
	_ struct{} `type:"structure"`

	AccountingType *string `locationName:"accountingType" type:"string"`

	AvailabilityZone *string `locationName:"availabilityZone" type:"string"`

	CreateTime *time.Time `locationName:"createTime" type:"timestamp" timestampFormat:""`

	DiskType *string `locationName:"diskType" type:"string"`

	RequestId *string `locationName:"requestId" type:"string"`

	Size *string `locationName:"size" type:"string"`

	SnapshotId *string `locationName:"snapshotId" type:"string"`

	Status *string `locationName:"status" type:"string"`

	VolumeId *string `locationName:"volumeId" type:"string"`
}

// String returns the string representation
func (s CreateVolumeOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateVolumeOutput) GoString() string {
	return s.String()
}

// SetAccountingType sets the AccountingType field's value.
func (s *CreateVolumeOutput) SetAccountingType(v string) *CreateVolumeOutput {
	s.AccountingType = &v
	return s
}

// SetAvailabilityZone sets the AvailabilityZone field's value.
func (s *CreateVolumeOutput) SetAvailabilityZone(v string) *CreateVolumeOutput {
	s.AvailabilityZone = &v
	return s
}

// SetCreateTime sets the CreateTime field's value.
func (s *CreateVolumeOutput) SetCreateTime(v time.Time) *CreateVolumeOutput {
	s.CreateTime = &v
	return s
}

// SetDiskType sets the DiskType field's value.
func (s *CreateVolumeOutput) SetDiskType(v string) *CreateVolumeOutput {
	s.DiskType = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *CreateVolumeOutput) SetRequestId(v string) *CreateVolumeOutput {
	s.RequestId = &v
	return s
}

// SetSize sets the Size field's value.
func (s *CreateVolumeOutput) SetSize(v string) *CreateVolumeOutput {
	s.Size = &v
	return s
}

// SetSnapshotId sets the SnapshotId field's value.
func (s *CreateVolumeOutput) SetSnapshotId(v string) *CreateVolumeOutput {
	s.SnapshotId = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *CreateVolumeOutput) SetStatus(v string) *CreateVolumeOutput {
	s.Status = &v
	return s
}

// SetVolumeId sets the VolumeId field's value.
func (s *CreateVolumeOutput) SetVolumeId(v string) *CreateVolumeOutput {
	s.VolumeId = &v
	return s
}

type CreateVpnConnectionInput struct {
	_ struct{} `type:"structure"`

	Agreement *bool `locationName:"Agreement" type:"boolean"`

	CustomerGatewayId *string `locationName:"CustomerGatewayId" type:"string"`

	NiftyCustomerGatewayName *string `locationName:"NiftyCustomerGatewayName" type:"string"`

	NiftyIPsecConfiguration *RequestNiftyIPsecConfigurationStruct `locationName:"NiftyIPsecConfiguration" type:"structure"`

	NiftyIpsecConfiguration *RequestNiftyIpsecConfigurationStruct `locationName:"NiftyIpsecConfiguration" type:"structure"`

	NiftyTunnel *RequestNiftyTunnelStruct `locationName:"NiftyTunnel" type:"structure"`

	NiftyVpnConnectionDescription *string `locationName:"NiftyVpnConnectionDescription" type:"string"`

	NiftyVpnConnectionMtu *string `locationName:"NiftyVpnConnectionMtu" type:"string"`

	NiftyVpnGatewayName *string `locationName:"NiftyVpnGatewayName" type:"string"`

	Type *string `locationName:"Type" type:"string"`

	VpnGatewayId *string `locationName:"VpnGatewayId" type:"string"`
}

// String returns the string representation
func (s CreateVpnConnectionInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateVpnConnectionInput) GoString() string {
	return s.String()
}

// SetAgreement sets the Agreement field's value.
func (s *CreateVpnConnectionInput) SetAgreement(v bool) *CreateVpnConnectionInput {
	s.Agreement = &v
	return s
}

// SetCustomerGatewayId sets the CustomerGatewayId field's value.
func (s *CreateVpnConnectionInput) SetCustomerGatewayId(v string) *CreateVpnConnectionInput {
	s.CustomerGatewayId = &v
	return s
}

// SetNiftyCustomerGatewayName sets the NiftyCustomerGatewayName field's value.
func (s *CreateVpnConnectionInput) SetNiftyCustomerGatewayName(v string) *CreateVpnConnectionInput {
	s.NiftyCustomerGatewayName = &v
	return s
}

// SetNiftyIPsecConfiguration sets the NiftyIPsecConfiguration field's value.
func (s *CreateVpnConnectionInput) SetNiftyIPsecConfiguration(v *RequestNiftyIPsecConfigurationStruct) *CreateVpnConnectionInput {
	s.NiftyIPsecConfiguration = v
	return s
}

// SetNiftyIpsecConfiguration sets the NiftyIpsecConfiguration field's value.
func (s *CreateVpnConnectionInput) SetNiftyIpsecConfiguration(v *RequestNiftyIpsecConfigurationStruct) *CreateVpnConnectionInput {
	s.NiftyIpsecConfiguration = v
	return s
}

// SetNiftyTunnel sets the NiftyTunnel field's value.
func (s *CreateVpnConnectionInput) SetNiftyTunnel(v *RequestNiftyTunnelStruct) *CreateVpnConnectionInput {
	s.NiftyTunnel = v
	return s
}

// SetNiftyVpnConnectionDescription sets the NiftyVpnConnectionDescription field's value.
func (s *CreateVpnConnectionInput) SetNiftyVpnConnectionDescription(v string) *CreateVpnConnectionInput {
	s.NiftyVpnConnectionDescription = &v
	return s
}

// SetNiftyVpnConnectionMtu sets the NiftyVpnConnectionMtu field's value.
func (s *CreateVpnConnectionInput) SetNiftyVpnConnectionMtu(v string) *CreateVpnConnectionInput {
	s.NiftyVpnConnectionMtu = &v
	return s
}

// SetNiftyVpnGatewayName sets the NiftyVpnGatewayName field's value.
func (s *CreateVpnConnectionInput) SetNiftyVpnGatewayName(v string) *CreateVpnConnectionInput {
	s.NiftyVpnGatewayName = &v
	return s
}

// SetType sets the Type field's value.
func (s *CreateVpnConnectionInput) SetType(v string) *CreateVpnConnectionInput {
	s.Type = &v
	return s
}

// SetVpnGatewayId sets the VpnGatewayId field's value.
func (s *CreateVpnConnectionInput) SetVpnGatewayId(v string) *CreateVpnConnectionInput {
	s.VpnGatewayId = &v
	return s
}

type CreateVpnConnectionOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	VpnConnection *VpnConnection `locationName:"vpnConnection" type:"structure"`
}

// String returns the string representation
func (s CreateVpnConnectionOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateVpnConnectionOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *CreateVpnConnectionOutput) SetRequestId(v string) *CreateVpnConnectionOutput {
	s.RequestId = &v
	return s
}

// SetVpnConnection sets the VpnConnection field's value.
func (s *CreateVpnConnectionOutput) SetVpnConnection(v *VpnConnection) *CreateVpnConnectionOutput {
	s.VpnConnection = v
	return s
}

type CreateVpnGatewayInput struct {
	_ struct{} `type:"structure"`

	AccountingType *string `locationName:"AccountingType" type:"string"`

	NiftyNetwork *RequestNiftyNetworkStruct `locationName:"NiftyNetwork" type:"structure"`

	NiftyRedundancy *bool `locationName:"NiftyRedundancy" type:"boolean"`

	NiftyVpnGatewayDescription *string `locationName:"NiftyVpnGatewayDescription" type:"string"`

	NiftyVpnGatewayName *string `locationName:"NiftyVpnGatewayName" type:"string"`

	NiftyVpnGatewayType *string `locationName:"NiftyVpnGatewayType" type:"string"`

	Placement *RequestPlacementStruct `locationName:"Placement" type:"structure"`

	SecurityGroup []*string `locationName:"SecurityGroup" type:"list"`
}

// String returns the string representation
func (s CreateVpnGatewayInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateVpnGatewayInput) GoString() string {
	return s.String()
}

// SetAccountingType sets the AccountingType field's value.
func (s *CreateVpnGatewayInput) SetAccountingType(v string) *CreateVpnGatewayInput {
	s.AccountingType = &v
	return s
}

// SetNiftyNetwork sets the NiftyNetwork field's value.
func (s *CreateVpnGatewayInput) SetNiftyNetwork(v *RequestNiftyNetworkStruct) *CreateVpnGatewayInput {
	s.NiftyNetwork = v
	return s
}

// SetNiftyRedundancy sets the NiftyRedundancy field's value.
func (s *CreateVpnGatewayInput) SetNiftyRedundancy(v bool) *CreateVpnGatewayInput {
	s.NiftyRedundancy = &v
	return s
}

// SetNiftyVpnGatewayDescription sets the NiftyVpnGatewayDescription field's value.
func (s *CreateVpnGatewayInput) SetNiftyVpnGatewayDescription(v string) *CreateVpnGatewayInput {
	s.NiftyVpnGatewayDescription = &v
	return s
}

// SetNiftyVpnGatewayName sets the NiftyVpnGatewayName field's value.
func (s *CreateVpnGatewayInput) SetNiftyVpnGatewayName(v string) *CreateVpnGatewayInput {
	s.NiftyVpnGatewayName = &v
	return s
}

// SetNiftyVpnGatewayType sets the NiftyVpnGatewayType field's value.
func (s *CreateVpnGatewayInput) SetNiftyVpnGatewayType(v string) *CreateVpnGatewayInput {
	s.NiftyVpnGatewayType = &v
	return s
}

// SetPlacement sets the Placement field's value.
func (s *CreateVpnGatewayInput) SetPlacement(v *RequestPlacementStruct) *CreateVpnGatewayInput {
	s.Placement = v
	return s
}

// SetSecurityGroup sets the SecurityGroup field's value.
func (s *CreateVpnGatewayInput) SetSecurityGroup(v []*string) *CreateVpnGatewayInput {
	s.SecurityGroup = v
	return s
}

type CreateVpnGatewayOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	VpnGateway *VpnGateway `locationName:"vpnGateway" type:"structure"`
}

// String returns the string representation
func (s CreateVpnGatewayOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateVpnGatewayOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *CreateVpnGatewayOutput) SetRequestId(v string) *CreateVpnGatewayOutput {
	s.RequestId = &v
	return s
}

// SetVpnGateway sets the VpnGateway field's value.
func (s *CreateVpnGatewayOutput) SetVpnGateway(v *VpnGateway) *CreateVpnGatewayOutput {
	s.VpnGateway = v
	return s
}

type CurrentState struct {
	_ struct{} `type:"structure"`

	Code *int64 `locationName:"code" type:"integer"`

	Name *string `locationName:"name" type:"string"`
}

// String returns the string representation
func (s CurrentState) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CurrentState) GoString() string {
	return s.String()
}

// SetCode sets the Code field's value.
func (s *CurrentState) SetCode(v int64) *CurrentState {
	s.Code = &v
	return s
}

// SetName sets the Name field's value.
func (s *CurrentState) SetName(v string) *CurrentState {
	s.Name = &v
	return s
}

type CustomerGateway struct {
	_ struct{} `type:"structure"`

	BgpAsn *string `locationName:"bgpAsn" type:"string"`

	CustomerGatewayId *string `locationName:"customerGatewayId" type:"string"`

	IpAddress *string `locationName:"ipAddress" type:"string"`

	NiftyCustomerGatewayDescription *string `locationName:"niftyCustomerGatewayDescription" type:"string"`

	NiftyCustomerGatewayName *string `locationName:"niftyCustomerGatewayName" type:"string"`

	NiftyLanSideCidrBlock *string `locationName:"niftyLanSideCidrBlock" type:"string"`

	NiftyLanSideIpAddress *string `locationName:"niftyLanSideIpAddress" type:"string"`

	State *string `locationName:"state" type:"string"`

	TagSet []*TagSetItem `locationName:"tagSet" locationNameList:"item" type:"list"`

	Type *string `locationName:"type" type:"string"`
}

// String returns the string representation
func (s CustomerGateway) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CustomerGateway) GoString() string {
	return s.String()
}

// SetBgpAsn sets the BgpAsn field's value.
func (s *CustomerGateway) SetBgpAsn(v string) *CustomerGateway {
	s.BgpAsn = &v
	return s
}

// SetCustomerGatewayId sets the CustomerGatewayId field's value.
func (s *CustomerGateway) SetCustomerGatewayId(v string) *CustomerGateway {
	s.CustomerGatewayId = &v
	return s
}

// SetIpAddress sets the IpAddress field's value.
func (s *CustomerGateway) SetIpAddress(v string) *CustomerGateway {
	s.IpAddress = &v
	return s
}

// SetNiftyCustomerGatewayDescription sets the NiftyCustomerGatewayDescription field's value.
func (s *CustomerGateway) SetNiftyCustomerGatewayDescription(v string) *CustomerGateway {
	s.NiftyCustomerGatewayDescription = &v
	return s
}

// SetNiftyCustomerGatewayName sets the NiftyCustomerGatewayName field's value.
func (s *CustomerGateway) SetNiftyCustomerGatewayName(v string) *CustomerGateway {
	s.NiftyCustomerGatewayName = &v
	return s
}

// SetNiftyLanSideCidrBlock sets the NiftyLanSideCidrBlock field's value.
func (s *CustomerGateway) SetNiftyLanSideCidrBlock(v string) *CustomerGateway {
	s.NiftyLanSideCidrBlock = &v
	return s
}

// SetNiftyLanSideIpAddress sets the NiftyLanSideIpAddress field's value.
func (s *CustomerGateway) SetNiftyLanSideIpAddress(v string) *CustomerGateway {
	s.NiftyLanSideIpAddress = &v
	return s
}

// SetState sets the State field's value.
func (s *CustomerGateway) SetState(v string) *CustomerGateway {
	s.State = &v
	return s
}

// SetTagSet sets the TagSet field's value.
func (s *CustomerGateway) SetTagSet(v []*TagSetItem) *CustomerGateway {
	s.TagSet = v
	return s
}

// SetType sets the Type field's value.
func (s *CustomerGateway) SetType(v string) *CustomerGateway {
	s.Type = &v
	return s
}

type CustomerGatewaySetItem struct {
	_ struct{} `type:"structure"`

	BgpAsn *string `locationName:"bgpAsn" type:"string"`

	CreatedTime *time.Time `locationName:"createdTime" type:"timestamp" timestampFormat:""`

	CustomerGatewayId *string `locationName:"customerGatewayId" type:"string"`

	IpAddress *string `locationName:"ipAddress" type:"string"`

	NiftyCustomerGatewayDescription *string `locationName:"niftyCustomerGatewayDescription" type:"string"`

	NiftyCustomerGatewayName *string `locationName:"niftyCustomerGatewayName" type:"string"`

	NiftyLanSideCidrBlock *string `locationName:"niftyLanSideCidrBlock" type:"string"`

	NiftyLanSideIpAddress *string `locationName:"niftyLanSideIpAddress" type:"string"`

	State *string `locationName:"state" type:"string"`

	TagSet []*TagSetItem `locationName:"tagSet" locationNameList:"item" type:"list"`

	Type *string `locationName:"type" type:"string"`
}

// String returns the string representation
func (s CustomerGatewaySetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CustomerGatewaySetItem) GoString() string {
	return s.String()
}

// SetBgpAsn sets the BgpAsn field's value.
func (s *CustomerGatewaySetItem) SetBgpAsn(v string) *CustomerGatewaySetItem {
	s.BgpAsn = &v
	return s
}

// SetCreatedTime sets the CreatedTime field's value.
func (s *CustomerGatewaySetItem) SetCreatedTime(v time.Time) *CustomerGatewaySetItem {
	s.CreatedTime = &v
	return s
}

// SetCustomerGatewayId sets the CustomerGatewayId field's value.
func (s *CustomerGatewaySetItem) SetCustomerGatewayId(v string) *CustomerGatewaySetItem {
	s.CustomerGatewayId = &v
	return s
}

// SetIpAddress sets the IpAddress field's value.
func (s *CustomerGatewaySetItem) SetIpAddress(v string) *CustomerGatewaySetItem {
	s.IpAddress = &v
	return s
}

// SetNiftyCustomerGatewayDescription sets the NiftyCustomerGatewayDescription field's value.
func (s *CustomerGatewaySetItem) SetNiftyCustomerGatewayDescription(v string) *CustomerGatewaySetItem {
	s.NiftyCustomerGatewayDescription = &v
	return s
}

// SetNiftyCustomerGatewayName sets the NiftyCustomerGatewayName field's value.
func (s *CustomerGatewaySetItem) SetNiftyCustomerGatewayName(v string) *CustomerGatewaySetItem {
	s.NiftyCustomerGatewayName = &v
	return s
}

// SetNiftyLanSideCidrBlock sets the NiftyLanSideCidrBlock field's value.
func (s *CustomerGatewaySetItem) SetNiftyLanSideCidrBlock(v string) *CustomerGatewaySetItem {
	s.NiftyLanSideCidrBlock = &v
	return s
}

// SetNiftyLanSideIpAddress sets the NiftyLanSideIpAddress field's value.
func (s *CustomerGatewaySetItem) SetNiftyLanSideIpAddress(v string) *CustomerGatewaySetItem {
	s.NiftyLanSideIpAddress = &v
	return s
}

// SetState sets the State field's value.
func (s *CustomerGatewaySetItem) SetState(v string) *CustomerGatewaySetItem {
	s.State = &v
	return s
}

// SetTagSet sets the TagSet field's value.
func (s *CustomerGatewaySetItem) SetTagSet(v []*TagSetItem) *CustomerGatewaySetItem {
	s.TagSet = v
	return s
}

// SetType sets the Type field's value.
func (s *CustomerGatewaySetItem) SetType(v string) *CustomerGatewaySetItem {
	s.Type = &v
	return s
}

type DDay struct {
	_ struct{} `type:"structure"`

	EndingDDay *string `locationName:"endingDDay" type:"string"`

	StartingDDay *string `locationName:"startingDDay" type:"string"`
}

// String returns the string representation
func (s DDay) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DDay) GoString() string {
	return s.String()
}

// SetEndingDDay sets the EndingDDay field's value.
func (s *DDay) SetEndingDDay(v string) *DDay {
	s.EndingDDay = &v
	return s
}

// SetStartingDDay sets the StartingDDay field's value.
func (s *DDay) SetStartingDDay(v string) *DDay {
	s.StartingDDay = &v
	return s
}

type DataSetItem struct {
	_ struct{} `type:"structure"`

	DateTime *string `locationName:"dateTime" type:"string"`

	Value *string `locationName:"value" type:"string"`
}

// String returns the string representation
func (s DataSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DataSetItem) GoString() string {
	return s.String()
}

// SetDateTime sets the DateTime field's value.
func (s *DataSetItem) SetDateTime(v string) *DataSetItem {
	s.DateTime = &v
	return s
}

// SetValue sets the Value field's value.
func (s *DataSetItem) SetValue(v string) *DataSetItem {
	s.Value = &v
	return s
}

type Day struct {
	_ struct{} `type:"structure"`

	SetFriday *string `locationName:"setFriday" type:"string"`

	SetMonday *string `locationName:"setMonday" type:"string"`

	SetSaturday *string `locationName:"setSaturday" type:"string"`

	SetSunday *string `locationName:"setSunday" type:"string"`

	SetThursday *string `locationName:"setThursday" type:"string"`

	SetTuesday *string `locationName:"setTuesday" type:"string"`

	SetWednesday *string `locationName:"setWednesday" type:"string"`
}

// String returns the string representation
func (s Day) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s Day) GoString() string {
	return s.String()
}

// SetSetFriday sets the SetFriday field's value.
func (s *Day) SetSetFriday(v string) *Day {
	s.SetFriday = &v
	return s
}

// SetSetMonday sets the SetMonday field's value.
func (s *Day) SetSetMonday(v string) *Day {
	s.SetMonday = &v
	return s
}

// SetSetSaturday sets the SetSaturday field's value.
func (s *Day) SetSetSaturday(v string) *Day {
	s.SetSaturday = &v
	return s
}

// SetSetSunday sets the SetSunday field's value.
func (s *Day) SetSetSunday(v string) *Day {
	s.SetSunday = &v
	return s
}

// SetSetThursday sets the SetThursday field's value.
func (s *Day) SetSetThursday(v string) *Day {
	s.SetThursday = &v
	return s
}

// SetSetTuesday sets the SetTuesday field's value.
func (s *Day) SetSetTuesday(v string) *Day {
	s.SetTuesday = &v
	return s
}

// SetSetWednesday sets the SetWednesday field's value.
func (s *Day) SetSetWednesday(v string) *Day {
	s.SetWednesday = &v
	return s
}

type DeleteCustomerGatewayInput struct {
	_ struct{} `type:"structure"`

	CustomerGatewayId *string `locationName:"CustomerGatewayId" type:"string"`

	NiftyCustomerGatewayName *string `locationName:"NiftyCustomerGatewayName" type:"string"`
}

// String returns the string representation
func (s DeleteCustomerGatewayInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteCustomerGatewayInput) GoString() string {
	return s.String()
}

// SetCustomerGatewayId sets the CustomerGatewayId field's value.
func (s *DeleteCustomerGatewayInput) SetCustomerGatewayId(v string) *DeleteCustomerGatewayInput {
	s.CustomerGatewayId = &v
	return s
}

// SetNiftyCustomerGatewayName sets the NiftyCustomerGatewayName field's value.
func (s *DeleteCustomerGatewayInput) SetNiftyCustomerGatewayName(v string) *DeleteCustomerGatewayInput {
	s.NiftyCustomerGatewayName = &v
	return s
}

type DeleteCustomerGatewayOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s DeleteCustomerGatewayOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteCustomerGatewayOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *DeleteCustomerGatewayOutput) SetRequestId(v string) *DeleteCustomerGatewayOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *DeleteCustomerGatewayOutput) SetReturn(v bool) *DeleteCustomerGatewayOutput {
	s.Return = &v
	return s
}

type DeleteDhcpOptionsInput struct {
	_ struct{} `type:"structure"`

	DhcpOptionsId *string `locationName:"DhcpOptionsId" type:"string"`
}

// String returns the string representation
func (s DeleteDhcpOptionsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteDhcpOptionsInput) GoString() string {
	return s.String()
}

// SetDhcpOptionsId sets the DhcpOptionsId field's value.
func (s *DeleteDhcpOptionsInput) SetDhcpOptionsId(v string) *DeleteDhcpOptionsInput {
	s.DhcpOptionsId = &v
	return s
}

type DeleteDhcpOptionsOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s DeleteDhcpOptionsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteDhcpOptionsOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *DeleteDhcpOptionsOutput) SetRequestId(v string) *DeleteDhcpOptionsOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *DeleteDhcpOptionsOutput) SetReturn(v bool) *DeleteDhcpOptionsOutput {
	s.Return = &v
	return s
}

type DeleteImageInput struct {
	_ struct{} `type:"structure"`

	ImageId *string `locationName:"ImageId" type:"string"`
}

// String returns the string representation
func (s DeleteImageInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteImageInput) GoString() string {
	return s.String()
}

// SetImageId sets the ImageId field's value.
func (s *DeleteImageInput) SetImageId(v string) *DeleteImageInput {
	s.ImageId = &v
	return s
}

type DeleteImageOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`
}

// String returns the string representation
func (s DeleteImageOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteImageOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *DeleteImageOutput) SetRequestId(v string) *DeleteImageOutput {
	s.RequestId = &v
	return s
}

type DeleteKeyPairInput struct {
	_ struct{} `type:"structure"`

	KeyName *string `locationName:"KeyName" type:"string"`
}

// String returns the string representation
func (s DeleteKeyPairInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteKeyPairInput) GoString() string {
	return s.String()
}

// SetKeyName sets the KeyName field's value.
func (s *DeleteKeyPairInput) SetKeyName(v string) *DeleteKeyPairInput {
	s.KeyName = &v
	return s
}

type DeleteKeyPairOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s DeleteKeyPairOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteKeyPairOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *DeleteKeyPairOutput) SetRequestId(v string) *DeleteKeyPairOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *DeleteKeyPairOutput) SetReturn(v bool) *DeleteKeyPairOutput {
	s.Return = &v
	return s
}

type DeleteLoadBalancerInput struct {
	_ struct{} `type:"structure"`

	InstancePort *int64 `locationName:"InstancePort" type:"integer"`

	LoadBalancerName *string `locationName:"LoadBalancerName" type:"string"`

	LoadBalancerPort *int64 `locationName:"LoadBalancerPort" type:"integer"`
}

// String returns the string representation
func (s DeleteLoadBalancerInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteLoadBalancerInput) GoString() string {
	return s.String()
}

// SetInstancePort sets the InstancePort field's value.
func (s *DeleteLoadBalancerInput) SetInstancePort(v int64) *DeleteLoadBalancerInput {
	s.InstancePort = &v
	return s
}

// SetLoadBalancerName sets the LoadBalancerName field's value.
func (s *DeleteLoadBalancerInput) SetLoadBalancerName(v string) *DeleteLoadBalancerInput {
	s.LoadBalancerName = &v
	return s
}

// SetLoadBalancerPort sets the LoadBalancerPort field's value.
func (s *DeleteLoadBalancerInput) SetLoadBalancerPort(v int64) *DeleteLoadBalancerInput {
	s.LoadBalancerPort = &v
	return s
}

type DeleteLoadBalancerOutput struct {
	_ struct{} `type:"structure"`

	ResponseMetadata *ResponseMetadata `locationName:"ResponseMetadata" type:"structure"`
}

// String returns the string representation
func (s DeleteLoadBalancerOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteLoadBalancerOutput) GoString() string {
	return s.String()
}

// SetResponseMetadata sets the ResponseMetadata field's value.
func (s *DeleteLoadBalancerOutput) SetResponseMetadata(v *ResponseMetadata) *DeleteLoadBalancerOutput {
	s.ResponseMetadata = v
	return s
}

type DeleteRouteInput struct {
	_ struct{} `type:"structure"`

	DestinationCidrBlock *string `locationName:"DestinationCidrBlock" type:"string"`

	RouteTableId *string `locationName:"RouteTableId" type:"string"`
}

// String returns the string representation
func (s DeleteRouteInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteRouteInput) GoString() string {
	return s.String()
}

// SetDestinationCidrBlock sets the DestinationCidrBlock field's value.
func (s *DeleteRouteInput) SetDestinationCidrBlock(v string) *DeleteRouteInput {
	s.DestinationCidrBlock = &v
	return s
}

// SetRouteTableId sets the RouteTableId field's value.
func (s *DeleteRouteInput) SetRouteTableId(v string) *DeleteRouteInput {
	s.RouteTableId = &v
	return s
}

type DeleteRouteOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s DeleteRouteOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteRouteOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *DeleteRouteOutput) SetRequestId(v string) *DeleteRouteOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *DeleteRouteOutput) SetReturn(v bool) *DeleteRouteOutput {
	s.Return = &v
	return s
}

type DeleteRouteTableInput struct {
	_ struct{} `type:"structure"`

	RouteTableId *string `locationName:"RouteTableId" type:"string"`
}

// String returns the string representation
func (s DeleteRouteTableInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteRouteTableInput) GoString() string {
	return s.String()
}

// SetRouteTableId sets the RouteTableId field's value.
func (s *DeleteRouteTableInput) SetRouteTableId(v string) *DeleteRouteTableInput {
	s.RouteTableId = &v
	return s
}

type DeleteRouteTableOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s DeleteRouteTableOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteRouteTableOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *DeleteRouteTableOutput) SetRequestId(v string) *DeleteRouteTableOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *DeleteRouteTableOutput) SetReturn(v bool) *DeleteRouteTableOutput {
	s.Return = &v
	return s
}

type DeleteSecurityGroupInput struct {
	_ struct{} `type:"structure"`

	GroupName *string `locationName:"GroupName" type:"string"`
}

// String returns the string representation
func (s DeleteSecurityGroupInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteSecurityGroupInput) GoString() string {
	return s.String()
}

// SetGroupName sets the GroupName field's value.
func (s *DeleteSecurityGroupInput) SetGroupName(v string) *DeleteSecurityGroupInput {
	s.GroupName = &v
	return s
}

type DeleteSecurityGroupOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s DeleteSecurityGroupOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteSecurityGroupOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *DeleteSecurityGroupOutput) SetRequestId(v string) *DeleteSecurityGroupOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *DeleteSecurityGroupOutput) SetReturn(v bool) *DeleteSecurityGroupOutput {
	s.Return = &v
	return s
}

type DeleteSslCertificateInput struct {
	_ struct{} `type:"structure"`

	FqdnId *string `locationName:"FqdnId" type:"string"`
}

// String returns the string representation
func (s DeleteSslCertificateInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteSslCertificateInput) GoString() string {
	return s.String()
}

// SetFqdnId sets the FqdnId field's value.
func (s *DeleteSslCertificateInput) SetFqdnId(v string) *DeleteSslCertificateInput {
	s.FqdnId = &v
	return s
}

type DeleteSslCertificateOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s DeleteSslCertificateOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteSslCertificateOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *DeleteSslCertificateOutput) SetRequestId(v string) *DeleteSslCertificateOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *DeleteSslCertificateOutput) SetReturn(v bool) *DeleteSslCertificateOutput {
	s.Return = &v
	return s
}

type DeleteVolumeInput struct {
	_ struct{} `type:"structure"`

	VolumeId *string `locationName:"VolumeId" type:"string"`
}

// String returns the string representation
func (s DeleteVolumeInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteVolumeInput) GoString() string {
	return s.String()
}

// SetVolumeId sets the VolumeId field's value.
func (s *DeleteVolumeInput) SetVolumeId(v string) *DeleteVolumeInput {
	s.VolumeId = &v
	return s
}

type DeleteVolumeOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s DeleteVolumeOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteVolumeOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *DeleteVolumeOutput) SetRequestId(v string) *DeleteVolumeOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *DeleteVolumeOutput) SetReturn(v bool) *DeleteVolumeOutput {
	s.Return = &v
	return s
}

type DeleteVpnConnectionInput struct {
	_ struct{} `type:"structure"`

	Agreement *bool `locationName:"Agreement" type:"boolean"`

	VpnConnectionId *string `locationName:"VpnConnectionId" type:"string"`
}

// String returns the string representation
func (s DeleteVpnConnectionInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteVpnConnectionInput) GoString() string {
	return s.String()
}

// SetAgreement sets the Agreement field's value.
func (s *DeleteVpnConnectionInput) SetAgreement(v bool) *DeleteVpnConnectionInput {
	s.Agreement = &v
	return s
}

// SetVpnConnectionId sets the VpnConnectionId field's value.
func (s *DeleteVpnConnectionInput) SetVpnConnectionId(v string) *DeleteVpnConnectionInput {
	s.VpnConnectionId = &v
	return s
}

type DeleteVpnConnectionOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s DeleteVpnConnectionOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteVpnConnectionOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *DeleteVpnConnectionOutput) SetRequestId(v string) *DeleteVpnConnectionOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *DeleteVpnConnectionOutput) SetReturn(v bool) *DeleteVpnConnectionOutput {
	s.Return = &v
	return s
}

type DeleteVpnGatewayInput struct {
	_ struct{} `type:"structure"`

	NiftyVpnGatewayName *string `locationName:"NiftyVpnGatewayName" type:"string"`

	VpnGatewayId *string `locationName:"VpnGatewayId" type:"string"`
}

// String returns the string representation
func (s DeleteVpnGatewayInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteVpnGatewayInput) GoString() string {
	return s.String()
}

// SetNiftyVpnGatewayName sets the NiftyVpnGatewayName field's value.
func (s *DeleteVpnGatewayInput) SetNiftyVpnGatewayName(v string) *DeleteVpnGatewayInput {
	s.NiftyVpnGatewayName = &v
	return s
}

// SetVpnGatewayId sets the VpnGatewayId field's value.
func (s *DeleteVpnGatewayInput) SetVpnGatewayId(v string) *DeleteVpnGatewayInput {
	s.VpnGatewayId = &v
	return s
}

type DeleteVpnGatewayOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s DeleteVpnGatewayOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteVpnGatewayOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *DeleteVpnGatewayOutput) SetRequestId(v string) *DeleteVpnGatewayOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *DeleteVpnGatewayOutput) SetReturn(v bool) *DeleteVpnGatewayOutput {
	s.Return = &v
	return s
}

type DeregisterInstancesFromLoadBalancerInput struct {
	_ struct{} `type:"structure"`

	InstancePort *int64 `locationName:"InstancePort" type:"integer"`

	Instances []*RequestInstancesStruct `locationName:"Instances" locationNameList:"member" type:"list"`

	LoadBalancerName *string `locationName:"LoadBalancerName" type:"string"`

	LoadBalancerPort *int64 `locationName:"LoadBalancerPort" type:"integer"`
}

// String returns the string representation
func (s DeregisterInstancesFromLoadBalancerInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeregisterInstancesFromLoadBalancerInput) GoString() string {
	return s.String()
}

// SetInstancePort sets the InstancePort field's value.
func (s *DeregisterInstancesFromLoadBalancerInput) SetInstancePort(v int64) *DeregisterInstancesFromLoadBalancerInput {
	s.InstancePort = &v
	return s
}

// SetInstances sets the Instances field's value.
func (s *DeregisterInstancesFromLoadBalancerInput) SetInstances(v []*RequestInstancesStruct) *DeregisterInstancesFromLoadBalancerInput {
	s.Instances = v
	return s
}

// SetLoadBalancerName sets the LoadBalancerName field's value.
func (s *DeregisterInstancesFromLoadBalancerInput) SetLoadBalancerName(v string) *DeregisterInstancesFromLoadBalancerInput {
	s.LoadBalancerName = &v
	return s
}

// SetLoadBalancerPort sets the LoadBalancerPort field's value.
func (s *DeregisterInstancesFromLoadBalancerInput) SetLoadBalancerPort(v int64) *DeregisterInstancesFromLoadBalancerInput {
	s.LoadBalancerPort = &v
	return s
}

type DeregisterInstancesFromLoadBalancerOutput struct {
	_ struct{} `type:"structure"`

	DeregisterInstancesFromLoadBalancerResult *DeregisterInstancesFromLoadBalancerOutput `locationName:"DeregisterInstancesFromLoadBalancerResult" type:"structure"`

	Instances []*InstancesMemberItem `locationName:"Instances" locationNameList:"member" type:"list"`

	ResponseMetadata *ResponseMetadata `locationName:"ResponseMetadata" type:"structure"`
}

// String returns the string representation
func (s DeregisterInstancesFromLoadBalancerOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeregisterInstancesFromLoadBalancerOutput) GoString() string {
	return s.String()
}

// SetDeregisterInstancesFromLoadBalancerResult sets the DeregisterInstancesFromLoadBalancerResult field's value.
func (s *DeregisterInstancesFromLoadBalancerOutput) SetDeregisterInstancesFromLoadBalancerResult(v *DeregisterInstancesFromLoadBalancerOutput) *DeregisterInstancesFromLoadBalancerOutput {
	s.DeregisterInstancesFromLoadBalancerResult = v
	return s
}

// SetInstances sets the Instances field's value.
func (s *DeregisterInstancesFromLoadBalancerOutput) SetInstances(v []*InstancesMemberItem) *DeregisterInstancesFromLoadBalancerOutput {
	s.Instances = v
	return s
}

// SetResponseMetadata sets the ResponseMetadata field's value.
func (s *DeregisterInstancesFromLoadBalancerOutput) SetResponseMetadata(v *ResponseMetadata) *DeregisterInstancesFromLoadBalancerOutput {
	s.ResponseMetadata = v
	return s
}

type DeregisterInstancesFromSecurityGroupInput struct {
	_ struct{} `type:"structure"`

	GroupName *string `locationName:"GroupName" type:"string"`

	InstanceId []*string `locationName:"InstanceId" type:"list"`
}

// String returns the string representation
func (s DeregisterInstancesFromSecurityGroupInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeregisterInstancesFromSecurityGroupInput) GoString() string {
	return s.String()
}

// SetGroupName sets the GroupName field's value.
func (s *DeregisterInstancesFromSecurityGroupInput) SetGroupName(v string) *DeregisterInstancesFromSecurityGroupInput {
	s.GroupName = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *DeregisterInstancesFromSecurityGroupInput) SetInstanceId(v []*string) *DeregisterInstancesFromSecurityGroupInput {
	s.InstanceId = v
	return s
}

type DeregisterInstancesFromSecurityGroupOutput struct {
	_ struct{} `type:"structure"`

	InstancesSet []*InstancesSetItem `locationName:"instancesSet" locationNameList:"item" type:"list"`

	RequestId *string `locationName:"requestId" type:"string"`
}

// String returns the string representation
func (s DeregisterInstancesFromSecurityGroupOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeregisterInstancesFromSecurityGroupOutput) GoString() string {
	return s.String()
}

// SetInstancesSet sets the InstancesSet field's value.
func (s *DeregisterInstancesFromSecurityGroupOutput) SetInstancesSet(v []*InstancesSetItem) *DeregisterInstancesFromSecurityGroupOutput {
	s.InstancesSet = v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *DeregisterInstancesFromSecurityGroupOutput) SetRequestId(v string) *DeregisterInstancesFromSecurityGroupOutput {
	s.RequestId = &v
	return s
}

type DescribeAddressesInput struct {
	_ struct{} `type:"structure"`

	PrivateIpAddress []*string `locationName:"PrivateIpAddress" type:"list"`

	PublicIp []*string `locationName:"PublicIp" type:"list"`
}

// String returns the string representation
func (s DescribeAddressesInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeAddressesInput) GoString() string {
	return s.String()
}

// SetPrivateIpAddress sets the PrivateIpAddress field's value.
func (s *DescribeAddressesInput) SetPrivateIpAddress(v []*string) *DescribeAddressesInput {
	s.PrivateIpAddress = v
	return s
}

// SetPublicIp sets the PublicIp field's value.
func (s *DescribeAddressesInput) SetPublicIp(v []*string) *DescribeAddressesInput {
	s.PublicIp = v
	return s
}

type DescribeAddressesOutput struct {
	_ struct{} `type:"structure"`

	AddressesSet []*AddressesSetItem `locationName:"addressesSet" locationNameList:"item" type:"list"`

	RequestId *string `locationName:"requestId" type:"string"`
}

// String returns the string representation
func (s DescribeAddressesOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeAddressesOutput) GoString() string {
	return s.String()
}

// SetAddressesSet sets the AddressesSet field's value.
func (s *DescribeAddressesOutput) SetAddressesSet(v []*AddressesSetItem) *DescribeAddressesOutput {
	s.AddressesSet = v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *DescribeAddressesOutput) SetRequestId(v string) *DescribeAddressesOutput {
	s.RequestId = &v
	return s
}

type DescribeAssociatedUsersInput struct {
	_ struct{} `type:"structure"`

	FunctionName *string `locationName:"FunctionName" type:"string"`
}

// String returns the string representation
func (s DescribeAssociatedUsersInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeAssociatedUsersInput) GoString() string {
	return s.String()
}

// SetFunctionName sets the FunctionName field's value.
func (s *DescribeAssociatedUsersInput) SetFunctionName(v string) *DescribeAssociatedUsersInput {
	s.FunctionName = &v
	return s
}

type DescribeAssociatedUsersOutput struct {
	_ struct{} `type:"structure"`

	DescribeAssociatedUsersResult *DescribeAssociatedUsersOutput `locationName:"DescribeAssociatedUsersResult" type:"structure"`

	ResponseMetadata *ResponseMetadata `locationName:"ResponseMetadata" type:"structure"`

	Users []*UsersMemberItem `locationName:"Users" locationNameList:"member" type:"list"`
}

// String returns the string representation
func (s DescribeAssociatedUsersOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeAssociatedUsersOutput) GoString() string {
	return s.String()
}

// SetDescribeAssociatedUsersResult sets the DescribeAssociatedUsersResult field's value.
func (s *DescribeAssociatedUsersOutput) SetDescribeAssociatedUsersResult(v *DescribeAssociatedUsersOutput) *DescribeAssociatedUsersOutput {
	s.DescribeAssociatedUsersResult = v
	return s
}

// SetResponseMetadata sets the ResponseMetadata field's value.
func (s *DescribeAssociatedUsersOutput) SetResponseMetadata(v *ResponseMetadata) *DescribeAssociatedUsersOutput {
	s.ResponseMetadata = v
	return s
}

// SetUsers sets the Users field's value.
func (s *DescribeAssociatedUsersOutput) SetUsers(v []*UsersMemberItem) *DescribeAssociatedUsersOutput {
	s.Users = v
	return s
}

type DescribeAvailabilityZonesInput struct {
	_ struct{} `type:"structure"`

	ZoneName []*string `locationName:"ZoneName" type:"list"`
}

// String returns the string representation
func (s DescribeAvailabilityZonesInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeAvailabilityZonesInput) GoString() string {
	return s.String()
}

// SetZoneName sets the ZoneName field's value.
func (s *DescribeAvailabilityZonesInput) SetZoneName(v []*string) *DescribeAvailabilityZonesInput {
	s.ZoneName = v
	return s
}

type DescribeAvailabilityZonesOutput struct {
	_ struct{} `type:"structure"`

	AvailabilityZoneInfo []*AvailabilityZoneInfoSetItem `locationName:"availabilityZoneInfo" locationNameList:"item" type:"list"`

	RequestId *string `locationName:"requestId" type:"string"`
}

// String returns the string representation
func (s DescribeAvailabilityZonesOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeAvailabilityZonesOutput) GoString() string {
	return s.String()
}

// SetAvailabilityZoneInfo sets the AvailabilityZoneInfo field's value.
func (s *DescribeAvailabilityZonesOutput) SetAvailabilityZoneInfo(v []*AvailabilityZoneInfoSetItem) *DescribeAvailabilityZonesOutput {
	s.AvailabilityZoneInfo = v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *DescribeAvailabilityZonesOutput) SetRequestId(v string) *DescribeAvailabilityZonesOutput {
	s.RequestId = &v
	return s
}

type DescribeCustomerGatewaysInput struct {
	_ struct{} `type:"structure"`

	CustomerGatewayId []*string `locationName:"CustomerGatewayId" type:"list"`

	Filter []*RequestFilterStruct `locationName:"Filter" type:"list"`

	NiftyCustomerGatewayName []*string `locationName:"NiftyCustomerGatewayName" type:"list"`
}

// String returns the string representation
func (s DescribeCustomerGatewaysInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeCustomerGatewaysInput) GoString() string {
	return s.String()
}

// SetCustomerGatewayId sets the CustomerGatewayId field's value.
func (s *DescribeCustomerGatewaysInput) SetCustomerGatewayId(v []*string) *DescribeCustomerGatewaysInput {
	s.CustomerGatewayId = v
	return s
}

// SetFilter sets the Filter field's value.
func (s *DescribeCustomerGatewaysInput) SetFilter(v []*RequestFilterStruct) *DescribeCustomerGatewaysInput {
	s.Filter = v
	return s
}

// SetNiftyCustomerGatewayName sets the NiftyCustomerGatewayName field's value.
func (s *DescribeCustomerGatewaysInput) SetNiftyCustomerGatewayName(v []*string) *DescribeCustomerGatewaysInput {
	s.NiftyCustomerGatewayName = v
	return s
}

type DescribeCustomerGatewaysOutput struct {
	_ struct{} `type:"structure"`

	CustomerGatewaySet []*CustomerGatewaySetItem `locationName:"customerGatewaySet" locationNameList:"item" type:"list"`

	RequestId *string `locationName:"requestId" type:"string"`
}

// String returns the string representation
func (s DescribeCustomerGatewaysOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeCustomerGatewaysOutput) GoString() string {
	return s.String()
}

// SetCustomerGatewaySet sets the CustomerGatewaySet field's value.
func (s *DescribeCustomerGatewaysOutput) SetCustomerGatewaySet(v []*CustomerGatewaySetItem) *DescribeCustomerGatewaysOutput {
	s.CustomerGatewaySet = v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *DescribeCustomerGatewaysOutput) SetRequestId(v string) *DescribeCustomerGatewaysOutput {
	s.RequestId = &v
	return s
}

type DescribeDhcpOptionsInput struct {
	_ struct{} `type:"structure"`

	DhcpOptionsId []*string `locationName:"DhcpOptionsId" type:"list"`

	Filter []*RequestFilterStruct `locationName:"Filter" type:"list"`
}

// String returns the string representation
func (s DescribeDhcpOptionsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDhcpOptionsInput) GoString() string {
	return s.String()
}

// SetDhcpOptionsId sets the DhcpOptionsId field's value.
func (s *DescribeDhcpOptionsInput) SetDhcpOptionsId(v []*string) *DescribeDhcpOptionsInput {
	s.DhcpOptionsId = v
	return s
}

// SetFilter sets the Filter field's value.
func (s *DescribeDhcpOptionsInput) SetFilter(v []*RequestFilterStruct) *DescribeDhcpOptionsInput {
	s.Filter = v
	return s
}

type DescribeDhcpOptionsOutput struct {
	_ struct{} `type:"structure"`

	DhcpOptionsSet *DhcpOptionsSet `locationName:"dhcpOptionsSet" type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`
}

// String returns the string representation
func (s DescribeDhcpOptionsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDhcpOptionsOutput) GoString() string {
	return s.String()
}

// SetDhcpOptionsSet sets the DhcpOptionsSet field's value.
func (s *DescribeDhcpOptionsOutput) SetDhcpOptionsSet(v *DhcpOptionsSet) *DescribeDhcpOptionsOutput {
	s.DhcpOptionsSet = v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *DescribeDhcpOptionsOutput) SetRequestId(v string) *DescribeDhcpOptionsOutput {
	s.RequestId = &v
	return s
}

type DescribeImagesInput struct {
	_ struct{} `type:"structure"`

	ImageId []*string `locationName:"ImageId" type:"list"`

	ImageName []*string `locationName:"ImageName" type:"list"`

	Owner []*string `locationName:"Owner" type:"list"`
}

// String returns the string representation
func (s DescribeImagesInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeImagesInput) GoString() string {
	return s.String()
}

// SetImageId sets the ImageId field's value.
func (s *DescribeImagesInput) SetImageId(v []*string) *DescribeImagesInput {
	s.ImageId = v
	return s
}

// SetImageName sets the ImageName field's value.
func (s *DescribeImagesInput) SetImageName(v []*string) *DescribeImagesInput {
	s.ImageName = v
	return s
}

// SetOwner sets the Owner field's value.
func (s *DescribeImagesInput) SetOwner(v []*string) *DescribeImagesInput {
	s.Owner = v
	return s
}

type DescribeImagesOutput struct {
	_ struct{} `type:"structure"`

	ImagesSet []*ImagesSetItem `locationName:"imagesSet" locationNameList:"item" type:"list"`

	RequestId *string `locationName:"requestId" type:"string"`
}

// String returns the string representation
func (s DescribeImagesOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeImagesOutput) GoString() string {
	return s.String()
}

// SetImagesSet sets the ImagesSet field's value.
func (s *DescribeImagesOutput) SetImagesSet(v []*ImagesSetItem) *DescribeImagesOutput {
	s.ImagesSet = v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *DescribeImagesOutput) SetRequestId(v string) *DescribeImagesOutput {
	s.RequestId = &v
	return s
}

type DescribeInstanceAttributeInput struct {
	_ struct{} `type:"structure"`

	Attribute *string `locationName:"Attribute" type:"string"`

	InstanceId *string `locationName:"InstanceId" type:"string"`
}

// String returns the string representation
func (s DescribeInstanceAttributeInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeInstanceAttributeInput) GoString() string {
	return s.String()
}

// SetAttribute sets the Attribute field's value.
func (s *DescribeInstanceAttributeInput) SetAttribute(v string) *DescribeInstanceAttributeInput {
	s.Attribute = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *DescribeInstanceAttributeInput) SetInstanceId(v string) *DescribeInstanceAttributeInput {
	s.InstanceId = &v
	return s
}

type DescribeInstanceAttributeOutput struct {
	_ struct{} `type:"structure"`

	AccountingType *AccountingType `locationName:"accountingType" type:"structure"`

	Autoscaling *Autoscaling `locationName:"autoscaling" type:"structure"`

	BlockDeviceMapping []*BlockDeviceMappingSetItem `locationName:"blockDeviceMapping" locationNameList:"item" type:"list"`

	CopyInfo *CopyInfo `locationName:"copyInfo" type:"structure"`

	DescriptionValue *DescriptionValue `locationName:"descriptionValue" type:"structure"`

	DisableApiTermination *DisableApiTermination `locationName:"disableApiTermination" type:"structure"`

	GroupIdValue *GroupIdValue `locationName:"groupIdValue" type:"structure"`

	InstanceId *string `locationName:"instanceId" type:"string"`

	InstanceInitiatedShutdownBehavior *InstanceInitiatedShutdownBehavior `locationName:"instanceInitiatedShutdownBehavior" type:"structure"`

	InstanceType *InstanceType `locationName:"instanceType" type:"structure"`

	InstanceUniqueId *string `locationName:"instanceUniqueId" type:"string"`

	IpType *IpType `locationName:"ipType" type:"structure"`

	Kernel *Kernel `locationName:"kernel" type:"structure"`

	Loadbalancing []*LoadbalancingSetItem `locationName:"loadbalancing" locationNameList:"item" type:"list"`

	NetworkInterfaceSet []*NetworkInterfaceSetItem `locationName:"networkInterfaceSet" locationNameList:"item" type:"list"`

	NextMonthAccountingType *NextMonthAccountingType `locationName:"NextMonthAccountingType" type:"structure"`

	NiftyElasticLoadBalancing []*NiftyElasticLoadBalancingSetItem `locationName:"niftyElasticLoadBalancing" locationNameList:"item" type:"list"`

	NiftyPrivateIpType *NiftyPrivateIpType `locationName:"niftyPrivateIpType" type:"structure"`

	Ramdisk *Ramdisk `locationName:"ramdisk" type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	RootDeviceName *RootDeviceName `locationName:"rootDeviceName" type:"structure"`

	UserData *UserData `locationName:"userData" type:"structure"`
}

// String returns the string representation
func (s DescribeInstanceAttributeOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeInstanceAttributeOutput) GoString() string {
	return s.String()
}

// SetAccountingType sets the AccountingType field's value.
func (s *DescribeInstanceAttributeOutput) SetAccountingType(v *AccountingType) *DescribeInstanceAttributeOutput {
	s.AccountingType = v
	return s
}

// SetAutoscaling sets the Autoscaling field's value.
func (s *DescribeInstanceAttributeOutput) SetAutoscaling(v *Autoscaling) *DescribeInstanceAttributeOutput {
	s.Autoscaling = v
	return s
}

// SetBlockDeviceMapping sets the BlockDeviceMapping field's value.
func (s *DescribeInstanceAttributeOutput) SetBlockDeviceMapping(v []*BlockDeviceMappingSetItem) *DescribeInstanceAttributeOutput {
	s.BlockDeviceMapping = v
	return s
}

// SetCopyInfo sets the CopyInfo field's value.
func (s *DescribeInstanceAttributeOutput) SetCopyInfo(v *CopyInfo) *DescribeInstanceAttributeOutput {
	s.CopyInfo = v
	return s
}

// SetDescriptionValue sets the DescriptionValue field's value.
func (s *DescribeInstanceAttributeOutput) SetDescriptionValue(v *DescriptionValue) *DescribeInstanceAttributeOutput {
	s.DescriptionValue = v
	return s
}

// SetDisableApiTermination sets the DisableApiTermination field's value.
func (s *DescribeInstanceAttributeOutput) SetDisableApiTermination(v *DisableApiTermination) *DescribeInstanceAttributeOutput {
	s.DisableApiTermination = v
	return s
}

// SetGroupIdValue sets the GroupIdValue field's value.
func (s *DescribeInstanceAttributeOutput) SetGroupIdValue(v *GroupIdValue) *DescribeInstanceAttributeOutput {
	s.GroupIdValue = v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *DescribeInstanceAttributeOutput) SetInstanceId(v string) *DescribeInstanceAttributeOutput {
	s.InstanceId = &v
	return s
}

// SetInstanceInitiatedShutdownBehavior sets the InstanceInitiatedShutdownBehavior field's value.
func (s *DescribeInstanceAttributeOutput) SetInstanceInitiatedShutdownBehavior(v *InstanceInitiatedShutdownBehavior) *DescribeInstanceAttributeOutput {
	s.InstanceInitiatedShutdownBehavior = v
	return s
}

// SetInstanceType sets the InstanceType field's value.
func (s *DescribeInstanceAttributeOutput) SetInstanceType(v *InstanceType) *DescribeInstanceAttributeOutput {
	s.InstanceType = v
	return s
}

// SetInstanceUniqueId sets the InstanceUniqueId field's value.
func (s *DescribeInstanceAttributeOutput) SetInstanceUniqueId(v string) *DescribeInstanceAttributeOutput {
	s.InstanceUniqueId = &v
	return s
}

// SetIpType sets the IpType field's value.
func (s *DescribeInstanceAttributeOutput) SetIpType(v *IpType) *DescribeInstanceAttributeOutput {
	s.IpType = v
	return s
}

// SetKernel sets the Kernel field's value.
func (s *DescribeInstanceAttributeOutput) SetKernel(v *Kernel) *DescribeInstanceAttributeOutput {
	s.Kernel = v
	return s
}

// SetLoadbalancing sets the Loadbalancing field's value.
func (s *DescribeInstanceAttributeOutput) SetLoadbalancing(v []*LoadbalancingSetItem) *DescribeInstanceAttributeOutput {
	s.Loadbalancing = v
	return s
}

// SetNetworkInterfaceSet sets the NetworkInterfaceSet field's value.
func (s *DescribeInstanceAttributeOutput) SetNetworkInterfaceSet(v []*NetworkInterfaceSetItem) *DescribeInstanceAttributeOutput {
	s.NetworkInterfaceSet = v
	return s
}

// SetNextMonthAccountingType sets the NextMonthAccountingType field's value.
func (s *DescribeInstanceAttributeOutput) SetNextMonthAccountingType(v *NextMonthAccountingType) *DescribeInstanceAttributeOutput {
	s.NextMonthAccountingType = v
	return s
}

// SetNiftyElasticLoadBalancing sets the NiftyElasticLoadBalancing field's value.
func (s *DescribeInstanceAttributeOutput) SetNiftyElasticLoadBalancing(v []*NiftyElasticLoadBalancingSetItem) *DescribeInstanceAttributeOutput {
	s.NiftyElasticLoadBalancing = v
	return s
}

// SetNiftyPrivateIpType sets the NiftyPrivateIpType field's value.
func (s *DescribeInstanceAttributeOutput) SetNiftyPrivateIpType(v *NiftyPrivateIpType) *DescribeInstanceAttributeOutput {
	s.NiftyPrivateIpType = v
	return s
}

// SetRamdisk sets the Ramdisk field's value.
func (s *DescribeInstanceAttributeOutput) SetRamdisk(v *Ramdisk) *DescribeInstanceAttributeOutput {
	s.Ramdisk = v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *DescribeInstanceAttributeOutput) SetRequestId(v string) *DescribeInstanceAttributeOutput {
	s.RequestId = &v
	return s
}

// SetRootDeviceName sets the RootDeviceName field's value.
func (s *DescribeInstanceAttributeOutput) SetRootDeviceName(v *RootDeviceName) *DescribeInstanceAttributeOutput {
	s.RootDeviceName = v
	return s
}

// SetUserData sets the UserData field's value.
func (s *DescribeInstanceAttributeOutput) SetUserData(v *UserData) *DescribeInstanceAttributeOutput {
	s.UserData = v
	return s
}

type DescribeInstanceHealthInput struct {
	_ struct{} `type:"structure"`

	InstancePort *int64 `locationName:"InstancePort" type:"integer"`

	Instances []*RequestInstancesStruct `locationName:"Instances" locationNameList:"member" type:"list"`

	LoadBalancerName *string `locationName:"LoadBalancerName" type:"string"`

	LoadBalancerPort *int64 `locationName:"LoadBalancerPort" type:"integer"`
}

// String returns the string representation
func (s DescribeInstanceHealthInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeInstanceHealthInput) GoString() string {
	return s.String()
}

// SetInstancePort sets the InstancePort field's value.
func (s *DescribeInstanceHealthInput) SetInstancePort(v int64) *DescribeInstanceHealthInput {
	s.InstancePort = &v
	return s
}

// SetInstances sets the Instances field's value.
func (s *DescribeInstanceHealthInput) SetInstances(v []*RequestInstancesStruct) *DescribeInstanceHealthInput {
	s.Instances = v
	return s
}

// SetLoadBalancerName sets the LoadBalancerName field's value.
func (s *DescribeInstanceHealthInput) SetLoadBalancerName(v string) *DescribeInstanceHealthInput {
	s.LoadBalancerName = &v
	return s
}

// SetLoadBalancerPort sets the LoadBalancerPort field's value.
func (s *DescribeInstanceHealthInput) SetLoadBalancerPort(v int64) *DescribeInstanceHealthInput {
	s.LoadBalancerPort = &v
	return s
}

type DescribeInstanceHealthOutput struct {
	_ struct{} `type:"structure"`

	DescribeInstanceHealthResult *DescribeInstanceHealthOutput `locationName:"DescribeInstanceHealthResult" type:"structure"`

	InstanceStates []*InstanceStatesMemberItem `locationName:"InstanceStates" locationNameList:"member" type:"list"`

	ResponseMetadata *ResponseMetadata `locationName:"ResponseMetadata" type:"structure"`
}

// String returns the string representation
func (s DescribeInstanceHealthOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeInstanceHealthOutput) GoString() string {
	return s.String()
}

// SetDescribeInstanceHealthResult sets the DescribeInstanceHealthResult field's value.
func (s *DescribeInstanceHealthOutput) SetDescribeInstanceHealthResult(v *DescribeInstanceHealthOutput) *DescribeInstanceHealthOutput {
	s.DescribeInstanceHealthResult = v
	return s
}

// SetInstanceStates sets the InstanceStates field's value.
func (s *DescribeInstanceHealthOutput) SetInstanceStates(v []*InstanceStatesMemberItem) *DescribeInstanceHealthOutput {
	s.InstanceStates = v
	return s
}

// SetResponseMetadata sets the ResponseMetadata field's value.
func (s *DescribeInstanceHealthOutput) SetResponseMetadata(v *ResponseMetadata) *DescribeInstanceHealthOutput {
	s.ResponseMetadata = v
	return s
}

type DescribeInstancesInput struct {
	_ struct{} `type:"structure"`

	InstanceId []*string `locationName:"InstanceId" type:"list"`

	Tenancy []*string `locationName:"Tenancy" type:"list"`
}

// String returns the string representation
func (s DescribeInstancesInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeInstancesInput) GoString() string {
	return s.String()
}

// SetInstanceId sets the InstanceId field's value.
func (s *DescribeInstancesInput) SetInstanceId(v []*string) *DescribeInstancesInput {
	s.InstanceId = v
	return s
}

// SetTenancy sets the Tenancy field's value.
func (s *DescribeInstancesInput) SetTenancy(v []*string) *DescribeInstancesInput {
	s.Tenancy = v
	return s
}

type DescribeInstancesOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	ReservationSet []*ReservationSetItem `locationName:"reservationSet" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s DescribeInstancesOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeInstancesOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *DescribeInstancesOutput) SetRequestId(v string) *DescribeInstancesOutput {
	s.RequestId = &v
	return s
}

// SetReservationSet sets the ReservationSet field's value.
func (s *DescribeInstancesOutput) SetReservationSet(v []*ReservationSetItem) *DescribeInstancesOutput {
	s.ReservationSet = v
	return s
}

type DescribeKeyPairsInput struct {
	_ struct{} `type:"structure"`

	KeyName []*string `locationName:"KeyName" type:"list"`
}

// String returns the string representation
func (s DescribeKeyPairsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeKeyPairsInput) GoString() string {
	return s.String()
}

// SetKeyName sets the KeyName field's value.
func (s *DescribeKeyPairsInput) SetKeyName(v []*string) *DescribeKeyPairsInput {
	s.KeyName = v
	return s
}

type DescribeKeyPairsOutput struct {
	_ struct{} `type:"structure"`

	KeySet []*KeySetItem `locationName:"keySet" locationNameList:"item" type:"list"`

	RequestId *string `locationName:"requestId" type:"string"`
}

// String returns the string representation
func (s DescribeKeyPairsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeKeyPairsOutput) GoString() string {
	return s.String()
}

// SetKeySet sets the KeySet field's value.
func (s *DescribeKeyPairsOutput) SetKeySet(v []*KeySetItem) *DescribeKeyPairsOutput {
	s.KeySet = v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *DescribeKeyPairsOutput) SetRequestId(v string) *DescribeKeyPairsOutput {
	s.RequestId = &v
	return s
}

type DescribeLoadBalancersInput struct {
	_ struct{} `type:"structure"`

	LoadBalancerNames []*RequestLoadBalancerNamesStruct `locationName:"LoadBalancerNames" locationNameList:"member" type:"list"`
}

// String returns the string representation
func (s DescribeLoadBalancersInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeLoadBalancersInput) GoString() string {
	return s.String()
}

// SetLoadBalancerNames sets the LoadBalancerNames field's value.
func (s *DescribeLoadBalancersInput) SetLoadBalancerNames(v []*RequestLoadBalancerNamesStruct) *DescribeLoadBalancersInput {
	s.LoadBalancerNames = v
	return s
}

type DescribeLoadBalancersOutput struct {
	_ struct{} `type:"structure"`

	DescribeLoadBalancersResult *DescribeLoadBalancersOutput `locationName:"DescribeLoadBalancersResult" type:"structure"`

	LoadBalancerDescriptions []*LoadBalancerDescriptionsMemberItem `locationName:"LoadBalancerDescriptions" locationNameList:"member" type:"list"`

	ResponseMetadata *ResponseMetadata `locationName:"ResponseMetadata" type:"structure"`
}

// String returns the string representation
func (s DescribeLoadBalancersOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeLoadBalancersOutput) GoString() string {
	return s.String()
}

// SetDescribeLoadBalancersResult sets the DescribeLoadBalancersResult field's value.
func (s *DescribeLoadBalancersOutput) SetDescribeLoadBalancersResult(v *DescribeLoadBalancersOutput) *DescribeLoadBalancersOutput {
	s.DescribeLoadBalancersResult = v
	return s
}

// SetLoadBalancerDescriptions sets the LoadBalancerDescriptions field's value.
func (s *DescribeLoadBalancersOutput) SetLoadBalancerDescriptions(v []*LoadBalancerDescriptionsMemberItem) *DescribeLoadBalancersOutput {
	s.LoadBalancerDescriptions = v
	return s
}

// SetResponseMetadata sets the ResponseMetadata field's value.
func (s *DescribeLoadBalancersOutput) SetResponseMetadata(v *ResponseMetadata) *DescribeLoadBalancersOutput {
	s.ResponseMetadata = v
	return s
}

type DescribeRegionsInput struct {
	_ struct{} `type:"structure"`

	RegionName []*string `locationName:"RegionName" type:"list"`
}

// String returns the string representation
func (s DescribeRegionsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeRegionsInput) GoString() string {
	return s.String()
}

// SetRegionName sets the RegionName field's value.
func (s *DescribeRegionsInput) SetRegionName(v []*string) *DescribeRegionsInput {
	s.RegionName = v
	return s
}

type DescribeRegionsOutput struct {
	_ struct{} `type:"structure"`

	RegionInfo []*RegionInfoSetItem `locationName:"regionInfo" locationNameList:"item" type:"list"`

	RequestId *string `locationName:"requestId" type:"string"`
}

// String returns the string representation
func (s DescribeRegionsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeRegionsOutput) GoString() string {
	return s.String()
}

// SetRegionInfo sets the RegionInfo field's value.
func (s *DescribeRegionsOutput) SetRegionInfo(v []*RegionInfoSetItem) *DescribeRegionsOutput {
	s.RegionInfo = v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *DescribeRegionsOutput) SetRequestId(v string) *DescribeRegionsOutput {
	s.RequestId = &v
	return s
}

type DescribeResourcesInput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s DescribeResourcesInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeResourcesInput) GoString() string {
	return s.String()
}

type DescribeResourcesOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	ResourceInfo *ResourceInfo `locationName:"resourceInfo" type:"structure"`
}

// String returns the string representation
func (s DescribeResourcesOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeResourcesOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *DescribeResourcesOutput) SetRequestId(v string) *DescribeResourcesOutput {
	s.RequestId = &v
	return s
}

// SetResourceInfo sets the ResourceInfo field's value.
func (s *DescribeResourcesOutput) SetResourceInfo(v *ResourceInfo) *DescribeResourcesOutput {
	s.ResourceInfo = v
	return s
}

type DescribeRouteTablesInput struct {
	_ struct{} `type:"structure"`

	Filter []*RequestFilterStruct `locationName:"Filter" type:"list"`

	RouteTableId []*string `locationName:"RouteTableId" type:"list"`
}

// String returns the string representation
func (s DescribeRouteTablesInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeRouteTablesInput) GoString() string {
	return s.String()
}

// SetFilter sets the Filter field's value.
func (s *DescribeRouteTablesInput) SetFilter(v []*RequestFilterStruct) *DescribeRouteTablesInput {
	s.Filter = v
	return s
}

// SetRouteTableId sets the RouteTableId field's value.
func (s *DescribeRouteTablesInput) SetRouteTableId(v []*string) *DescribeRouteTablesInput {
	s.RouteTableId = v
	return s
}

type DescribeRouteTablesOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	RouteTableSet []*RouteTableSetItem `locationName:"routeTableSet" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s DescribeRouteTablesOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeRouteTablesOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *DescribeRouteTablesOutput) SetRequestId(v string) *DescribeRouteTablesOutput {
	s.RequestId = &v
	return s
}

// SetRouteTableSet sets the RouteTableSet field's value.
func (s *DescribeRouteTablesOutput) SetRouteTableSet(v []*RouteTableSetItem) *DescribeRouteTablesOutput {
	s.RouteTableSet = v
	return s
}

type DescribeSecurityActivitiesInput struct {
	_ struct{} `type:"structure"`

	ActivityDate *string `locationName:"ActivityDate" type:"string"`

	GroupName *string `locationName:"GroupName" type:"string"`

	Range *RequestRangeStruct `locationName:"Range" type:"structure"`
}

// String returns the string representation
func (s DescribeSecurityActivitiesInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeSecurityActivitiesInput) GoString() string {
	return s.String()
}

// SetActivityDate sets the ActivityDate field's value.
func (s *DescribeSecurityActivitiesInput) SetActivityDate(v string) *DescribeSecurityActivitiesInput {
	s.ActivityDate = &v
	return s
}

// SetGroupName sets the GroupName field's value.
func (s *DescribeSecurityActivitiesInput) SetGroupName(v string) *DescribeSecurityActivitiesInput {
	s.GroupName = &v
	return s
}

// SetRange sets the Range field's value.
func (s *DescribeSecurityActivitiesInput) SetRange(v *RequestRangeStruct) *DescribeSecurityActivitiesInput {
	s.Range = v
	return s
}

type DescribeSecurityActivitiesOutput struct {
	_ struct{} `type:"structure"`

	GroupName *string `locationName:"groupName" type:"string"`

	Log *string `locationName:"log" type:"string"`

	RequestId *string `locationName:"requestId" type:"string"`
}

// String returns the string representation
func (s DescribeSecurityActivitiesOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeSecurityActivitiesOutput) GoString() string {
	return s.String()
}

// SetGroupName sets the GroupName field's value.
func (s *DescribeSecurityActivitiesOutput) SetGroupName(v string) *DescribeSecurityActivitiesOutput {
	s.GroupName = &v
	return s
}

// SetLog sets the Log field's value.
func (s *DescribeSecurityActivitiesOutput) SetLog(v string) *DescribeSecurityActivitiesOutput {
	s.Log = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *DescribeSecurityActivitiesOutput) SetRequestId(v string) *DescribeSecurityActivitiesOutput {
	s.RequestId = &v
	return s
}

type DescribeSecurityGroupOptionInput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s DescribeSecurityGroupOptionInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeSecurityGroupOptionInput) GoString() string {
	return s.String()
}

type DescribeSecurityGroupOptionOutput struct {
	_ struct{} `type:"structure"`

	Course *string `locationName:"course" type:"string"`

	RequestId *string `locationName:"requestId" type:"string"`

	SecurityGroupLimit *int64 `locationName:"securityGroupLimit" type:"integer"`
}

// String returns the string representation
func (s DescribeSecurityGroupOptionOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeSecurityGroupOptionOutput) GoString() string {
	return s.String()
}

// SetCourse sets the Course field's value.
func (s *DescribeSecurityGroupOptionOutput) SetCourse(v string) *DescribeSecurityGroupOptionOutput {
	s.Course = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *DescribeSecurityGroupOptionOutput) SetRequestId(v string) *DescribeSecurityGroupOptionOutput {
	s.RequestId = &v
	return s
}

// SetSecurityGroupLimit sets the SecurityGroupLimit field's value.
func (s *DescribeSecurityGroupOptionOutput) SetSecurityGroupLimit(v int64) *DescribeSecurityGroupOptionOutput {
	s.SecurityGroupLimit = &v
	return s
}

type DescribeSecurityGroupsInput struct {
	_ struct{} `type:"structure"`

	Filter []*RequestFilterStruct `locationName:"Filter" type:"list"`

	GroupName []*string `locationName:"GroupName" type:"list"`
}

// String returns the string representation
func (s DescribeSecurityGroupsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeSecurityGroupsInput) GoString() string {
	return s.String()
}

// SetFilter sets the Filter field's value.
func (s *DescribeSecurityGroupsInput) SetFilter(v []*RequestFilterStruct) *DescribeSecurityGroupsInput {
	s.Filter = v
	return s
}

// SetGroupName sets the GroupName field's value.
func (s *DescribeSecurityGroupsInput) SetGroupName(v []*string) *DescribeSecurityGroupsInput {
	s.GroupName = v
	return s
}

type DescribeSecurityGroupsOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	SecurityGroupInfo []*SecurityGroupInfoSetItem `locationName:"securityGroupInfo" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s DescribeSecurityGroupsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeSecurityGroupsOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *DescribeSecurityGroupsOutput) SetRequestId(v string) *DescribeSecurityGroupsOutput {
	s.RequestId = &v
	return s
}

// SetSecurityGroupInfo sets the SecurityGroupInfo field's value.
func (s *DescribeSecurityGroupsOutput) SetSecurityGroupInfo(v []*SecurityGroupInfoSetItem) *DescribeSecurityGroupsOutput {
	s.SecurityGroupInfo = v
	return s
}

type DescribeServiceStatusInput struct {
	_ struct{} `type:"structure"`

	FromDate *string `locationName:"FromDate" type:"string"`

	ToDate *string `locationName:"ToDate" type:"string"`
}

// String returns the string representation
func (s DescribeServiceStatusInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeServiceStatusInput) GoString() string {
	return s.String()
}

// SetFromDate sets the FromDate field's value.
func (s *DescribeServiceStatusInput) SetFromDate(v string) *DescribeServiceStatusInput {
	s.FromDate = &v
	return s
}

// SetToDate sets the ToDate field's value.
func (s *DescribeServiceStatusInput) SetToDate(v string) *DescribeServiceStatusInput {
	s.ToDate = &v
	return s
}

type DescribeServiceStatusOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	ServiceStatusSet []*ServiceStatusSetItem `locationName:"serviceStatusSet" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s DescribeServiceStatusOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeServiceStatusOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *DescribeServiceStatusOutput) SetRequestId(v string) *DescribeServiceStatusOutput {
	s.RequestId = &v
	return s
}

// SetServiceStatusSet sets the ServiceStatusSet field's value.
func (s *DescribeServiceStatusOutput) SetServiceStatusSet(v []*ServiceStatusSetItem) *DescribeServiceStatusOutput {
	s.ServiceStatusSet = v
	return s
}

type DescribeSslCertificateAttributeInput struct {
	_ struct{} `type:"structure"`

	Attribute *string `locationName:"Attribute" type:"string"`

	FqdnId *string `locationName:"FqdnId" type:"string"`
}

// String returns the string representation
func (s DescribeSslCertificateAttributeInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeSslCertificateAttributeInput) GoString() string {
	return s.String()
}

// SetAttribute sets the Attribute field's value.
func (s *DescribeSslCertificateAttributeInput) SetAttribute(v string) *DescribeSslCertificateAttributeInput {
	s.Attribute = &v
	return s
}

// SetFqdnId sets the FqdnId field's value.
func (s *DescribeSslCertificateAttributeInput) SetFqdnId(v string) *DescribeSslCertificateAttributeInput {
	s.FqdnId = &v
	return s
}

type DescribeSslCertificateAttributeOutput struct {
	_ struct{} `type:"structure"`

	CaState *CaState `locationName:"caState" type:"structure"`

	CertAuthority *CertAuthority `locationName:"certAuthority" type:"structure"`

	CertInfo *CertInfo `locationName:"certInfo" type:"structure"`

	CertState *CertState `locationName:"certState" type:"structure"`

	Count *Count `locationName:"count" type:"structure"`

	DescriptionValue *DescriptionValue `locationName:"descriptionValue" type:"structure"`

	Fqdn *string `locationName:"fqdn" type:"string"`

	FqdnId *string `locationName:"fqdnId" type:"string"`

	KeyLength *KeyLength `locationName:"keyLength" type:"structure"`

	Period *Period `locationName:"period" type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	UploadState *UploadState `locationName:"uploadState" type:"structure"`
}

// String returns the string representation
func (s DescribeSslCertificateAttributeOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeSslCertificateAttributeOutput) GoString() string {
	return s.String()
}

// SetCaState sets the CaState field's value.
func (s *DescribeSslCertificateAttributeOutput) SetCaState(v *CaState) *DescribeSslCertificateAttributeOutput {
	s.CaState = v
	return s
}

// SetCertAuthority sets the CertAuthority field's value.
func (s *DescribeSslCertificateAttributeOutput) SetCertAuthority(v *CertAuthority) *DescribeSslCertificateAttributeOutput {
	s.CertAuthority = v
	return s
}

// SetCertInfo sets the CertInfo field's value.
func (s *DescribeSslCertificateAttributeOutput) SetCertInfo(v *CertInfo) *DescribeSslCertificateAttributeOutput {
	s.CertInfo = v
	return s
}

// SetCertState sets the CertState field's value.
func (s *DescribeSslCertificateAttributeOutput) SetCertState(v *CertState) *DescribeSslCertificateAttributeOutput {
	s.CertState = v
	return s
}

// SetCount sets the Count field's value.
func (s *DescribeSslCertificateAttributeOutput) SetCount(v *Count) *DescribeSslCertificateAttributeOutput {
	s.Count = v
	return s
}

// SetDescriptionValue sets the DescriptionValue field's value.
func (s *DescribeSslCertificateAttributeOutput) SetDescriptionValue(v *DescriptionValue) *DescribeSslCertificateAttributeOutput {
	s.DescriptionValue = v
	return s
}

// SetFqdn sets the Fqdn field's value.
func (s *DescribeSslCertificateAttributeOutput) SetFqdn(v string) *DescribeSslCertificateAttributeOutput {
	s.Fqdn = &v
	return s
}

// SetFqdnId sets the FqdnId field's value.
func (s *DescribeSslCertificateAttributeOutput) SetFqdnId(v string) *DescribeSslCertificateAttributeOutput {
	s.FqdnId = &v
	return s
}

// SetKeyLength sets the KeyLength field's value.
func (s *DescribeSslCertificateAttributeOutput) SetKeyLength(v *KeyLength) *DescribeSslCertificateAttributeOutput {
	s.KeyLength = v
	return s
}

// SetPeriod sets the Period field's value.
func (s *DescribeSslCertificateAttributeOutput) SetPeriod(v *Period) *DescribeSslCertificateAttributeOutput {
	s.Period = v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *DescribeSslCertificateAttributeOutput) SetRequestId(v string) *DescribeSslCertificateAttributeOutput {
	s.RequestId = &v
	return s
}

// SetUploadState sets the UploadState field's value.
func (s *DescribeSslCertificateAttributeOutput) SetUploadState(v *UploadState) *DescribeSslCertificateAttributeOutput {
	s.UploadState = v
	return s
}

type DescribeSslCertificatesInput struct {
	_ struct{} `type:"structure"`

	Fqdn []*string `locationName:"Fqdn" type:"list"`

	FqdnId []*string `locationName:"FqdnId" type:"list"`
}

// String returns the string representation
func (s DescribeSslCertificatesInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeSslCertificatesInput) GoString() string {
	return s.String()
}

// SetFqdn sets the Fqdn field's value.
func (s *DescribeSslCertificatesInput) SetFqdn(v []*string) *DescribeSslCertificatesInput {
	s.Fqdn = v
	return s
}

// SetFqdnId sets the FqdnId field's value.
func (s *DescribeSslCertificatesInput) SetFqdnId(v []*string) *DescribeSslCertificatesInput {
	s.FqdnId = v
	return s
}

type DescribeSslCertificatesOutput struct {
	_ struct{} `type:"structure"`

	CertsSet []*CertsSetItem `locationName:"certsSet" locationNameList:"item" type:"list"`

	RequestId *string `locationName:"requestId" type:"string"`
}

// String returns the string representation
func (s DescribeSslCertificatesOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeSslCertificatesOutput) GoString() string {
	return s.String()
}

// SetCertsSet sets the CertsSet field's value.
func (s *DescribeSslCertificatesOutput) SetCertsSet(v []*CertsSetItem) *DescribeSslCertificatesOutput {
	s.CertsSet = v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *DescribeSslCertificatesOutput) SetRequestId(v string) *DescribeSslCertificatesOutput {
	s.RequestId = &v
	return s
}

type DescribeUploadsInput struct {
	_ struct{} `type:"structure"`

	ConversionTaskId []*string `locationName:"ConversionTaskId" type:"list"`
}

// String returns the string representation
func (s DescribeUploadsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeUploadsInput) GoString() string {
	return s.String()
}

// SetConversionTaskId sets the ConversionTaskId field's value.
func (s *DescribeUploadsInput) SetConversionTaskId(v []*string) *DescribeUploadsInput {
	s.ConversionTaskId = v
	return s
}

type DescribeUploadsOutput struct {
	_ struct{} `type:"structure"`

	Uploads []*UploadsSetItem `locationName:"uploads" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s DescribeUploadsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeUploadsOutput) GoString() string {
	return s.String()
}

// SetUploads sets the Uploads field's value.
func (s *DescribeUploadsOutput) SetUploads(v []*UploadsSetItem) *DescribeUploadsOutput {
	s.Uploads = v
	return s
}

type DescribeUsageInput struct {
	_ struct{} `type:"structure"`

	IsCharge *bool `locationName:"IsCharge" type:"boolean"`

	Region *string `locationName:"Region" type:"string"`

	YearMonth *string `locationName:"YearMonth" type:"string"`
}

// String returns the string representation
func (s DescribeUsageInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeUsageInput) GoString() string {
	return s.String()
}

// SetIsCharge sets the IsCharge field's value.
func (s *DescribeUsageInput) SetIsCharge(v bool) *DescribeUsageInput {
	s.IsCharge = &v
	return s
}

// SetRegion sets the Region field's value.
func (s *DescribeUsageInput) SetRegion(v string) *DescribeUsageInput {
	s.Region = &v
	return s
}

// SetYearMonth sets the YearMonth field's value.
func (s *DescribeUsageInput) SetYearMonth(v string) *DescribeUsageInput {
	s.YearMonth = &v
	return s
}

type DescribeUsageOutput struct {
	_ struct{} `type:"structure"`

	AutoScaleInfo *AutoScaleInfo `locationName:"autoScaleInfo" type:"structure"`

	ChargeDetailInfo *ChargeDetailInfo `locationName:"chargeDetailInfo" type:"structure"`

	CopyInfo *CopyInfo `locationName:"copyInfo" type:"structure"`

	ElasticIpInfo *ElasticIpInfo `locationName:"elasticIpInfo" type:"structure"`

	ElasticLoadBalancerInfo *ElasticLoadBalancerInfo `locationName:"elasticLoadBalancerInfo" type:"structure"`

	ExtraChargeInfo *ExtraChargeInfo `locationName:"extraChargeInfo" type:"structure"`

	ImageInfo *ImageInfo `locationName:"imageInfo" type:"structure"`

	InstanceInfo *InstanceInfo `locationName:"instanceInfo" type:"structure"`

	InternetVpnInfo *InternetVpnInfo `locationName:"internetVpnInfo" type:"structure"`

	LicenseInfo *LicenseInfo `locationName:"licenseInfo" type:"structure"`

	LoadBalancerInfo *LoadBalancerInfo `locationName:"loadBalancerInfo" type:"structure"`

	MailSendInfo *MailSendInfo `locationName:"mailSendInfo" type:"structure"`

	MultiAccountInfo *MultiAccountInfo `locationName:"multiAccountInfo" type:"structure"`

	NetworkInfo *NetworkInfo `locationName:"networkInfo" type:"structure"`

	OptionCommonInfo []*OptionCommonInfoSetItem `locationName:"optionCommonInfo" locationNameList:"item" type:"list"`

	OptionInfo []*OptionInfoSetItem `locationName:"optionInfo" locationNameList:"item" type:"list"`

	OsOptionChargeInfo *OsOptionChargeInfo `locationName:"osOptionChargeInfo" type:"structure"`

	PatternAuthInfo *PatternAuthInfo `locationName:"patternAuthInfo" type:"structure"`

	PremiumSupportInfo *PremiumSupportInfo `locationName:"premiumSupportInfo" type:"structure"`

	PrivateLanInfo *PrivateLanInfo `locationName:"privateLanInfo" type:"structure"`

	PrivateNetworkInfo *PrivateNetworkInfo `locationName:"privateNetworkInfo" type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	RouterInfo *RouterInfo `locationName:"routerInfo" type:"structure"`

	SecureNetInfo *SecureNetInfo `locationName:"secureNetInfo" type:"structure"`

	SecurityGroupInfo *SecurityGroupInfo `locationName:"securityGroupInfo" type:"structure"`

	SnapshotInfo *SnapshotInfo `locationName:"snapshotInfo" type:"structure"`

	SslCertInfo *SslCertInfo `locationName:"sslCertInfo" type:"structure"`

	StorageInfo *StorageInfo `locationName:"storageInfo" type:"structure"`

	VolumeInfo *VolumeInfo `locationName:"volumeInfo" type:"structure"`

	VpnGatewayInfo *VpnGatewayInfo `locationName:"vpnGatewayInfo" type:"structure"`

	YearMonth *string `locationName:"yearMonth" type:"string"`
}

// String returns the string representation
func (s DescribeUsageOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeUsageOutput) GoString() string {
	return s.String()
}

// SetAutoScaleInfo sets the AutoScaleInfo field's value.
func (s *DescribeUsageOutput) SetAutoScaleInfo(v *AutoScaleInfo) *DescribeUsageOutput {
	s.AutoScaleInfo = v
	return s
}

// SetChargeDetailInfo sets the ChargeDetailInfo field's value.
func (s *DescribeUsageOutput) SetChargeDetailInfo(v *ChargeDetailInfo) *DescribeUsageOutput {
	s.ChargeDetailInfo = v
	return s
}

// SetCopyInfo sets the CopyInfo field's value.
func (s *DescribeUsageOutput) SetCopyInfo(v *CopyInfo) *DescribeUsageOutput {
	s.CopyInfo = v
	return s
}

// SetElasticIpInfo sets the ElasticIpInfo field's value.
func (s *DescribeUsageOutput) SetElasticIpInfo(v *ElasticIpInfo) *DescribeUsageOutput {
	s.ElasticIpInfo = v
	return s
}

// SetElasticLoadBalancerInfo sets the ElasticLoadBalancerInfo field's value.
func (s *DescribeUsageOutput) SetElasticLoadBalancerInfo(v *ElasticLoadBalancerInfo) *DescribeUsageOutput {
	s.ElasticLoadBalancerInfo = v
	return s
}

// SetExtraChargeInfo sets the ExtraChargeInfo field's value.
func (s *DescribeUsageOutput) SetExtraChargeInfo(v *ExtraChargeInfo) *DescribeUsageOutput {
	s.ExtraChargeInfo = v
	return s
}

// SetImageInfo sets the ImageInfo field's value.
func (s *DescribeUsageOutput) SetImageInfo(v *ImageInfo) *DescribeUsageOutput {
	s.ImageInfo = v
	return s
}

// SetInstanceInfo sets the InstanceInfo field's value.
func (s *DescribeUsageOutput) SetInstanceInfo(v *InstanceInfo) *DescribeUsageOutput {
	s.InstanceInfo = v
	return s
}

// SetInternetVpnInfo sets the InternetVpnInfo field's value.
func (s *DescribeUsageOutput) SetInternetVpnInfo(v *InternetVpnInfo) *DescribeUsageOutput {
	s.InternetVpnInfo = v
	return s
}

// SetLicenseInfo sets the LicenseInfo field's value.
func (s *DescribeUsageOutput) SetLicenseInfo(v *LicenseInfo) *DescribeUsageOutput {
	s.LicenseInfo = v
	return s
}

// SetLoadBalancerInfo sets the LoadBalancerInfo field's value.
func (s *DescribeUsageOutput) SetLoadBalancerInfo(v *LoadBalancerInfo) *DescribeUsageOutput {
	s.LoadBalancerInfo = v
	return s
}

// SetMailSendInfo sets the MailSendInfo field's value.
func (s *DescribeUsageOutput) SetMailSendInfo(v *MailSendInfo) *DescribeUsageOutput {
	s.MailSendInfo = v
	return s
}

// SetMultiAccountInfo sets the MultiAccountInfo field's value.
func (s *DescribeUsageOutput) SetMultiAccountInfo(v *MultiAccountInfo) *DescribeUsageOutput {
	s.MultiAccountInfo = v
	return s
}

// SetNetworkInfo sets the NetworkInfo field's value.
func (s *DescribeUsageOutput) SetNetworkInfo(v *NetworkInfo) *DescribeUsageOutput {
	s.NetworkInfo = v
	return s
}

// SetOptionCommonInfo sets the OptionCommonInfo field's value.
func (s *DescribeUsageOutput) SetOptionCommonInfo(v []*OptionCommonInfoSetItem) *DescribeUsageOutput {
	s.OptionCommonInfo = v
	return s
}

// SetOptionInfo sets the OptionInfo field's value.
func (s *DescribeUsageOutput) SetOptionInfo(v []*OptionInfoSetItem) *DescribeUsageOutput {
	s.OptionInfo = v
	return s
}

// SetOsOptionChargeInfo sets the OsOptionChargeInfo field's value.
func (s *DescribeUsageOutput) SetOsOptionChargeInfo(v *OsOptionChargeInfo) *DescribeUsageOutput {
	s.OsOptionChargeInfo = v
	return s
}

// SetPatternAuthInfo sets the PatternAuthInfo field's value.
func (s *DescribeUsageOutput) SetPatternAuthInfo(v *PatternAuthInfo) *DescribeUsageOutput {
	s.PatternAuthInfo = v
	return s
}

// SetPremiumSupportInfo sets the PremiumSupportInfo field's value.
func (s *DescribeUsageOutput) SetPremiumSupportInfo(v *PremiumSupportInfo) *DescribeUsageOutput {
	s.PremiumSupportInfo = v
	return s
}

// SetPrivateLanInfo sets the PrivateLanInfo field's value.
func (s *DescribeUsageOutput) SetPrivateLanInfo(v *PrivateLanInfo) *DescribeUsageOutput {
	s.PrivateLanInfo = v
	return s
}

// SetPrivateNetworkInfo sets the PrivateNetworkInfo field's value.
func (s *DescribeUsageOutput) SetPrivateNetworkInfo(v *PrivateNetworkInfo) *DescribeUsageOutput {
	s.PrivateNetworkInfo = v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *DescribeUsageOutput) SetRequestId(v string) *DescribeUsageOutput {
	s.RequestId = &v
	return s
}

// SetRouterInfo sets the RouterInfo field's value.
func (s *DescribeUsageOutput) SetRouterInfo(v *RouterInfo) *DescribeUsageOutput {
	s.RouterInfo = v
	return s
}

// SetSecureNetInfo sets the SecureNetInfo field's value.
func (s *DescribeUsageOutput) SetSecureNetInfo(v *SecureNetInfo) *DescribeUsageOutput {
	s.SecureNetInfo = v
	return s
}

// SetSecurityGroupInfo sets the SecurityGroupInfo field's value.
func (s *DescribeUsageOutput) SetSecurityGroupInfo(v *SecurityGroupInfo) *DescribeUsageOutput {
	s.SecurityGroupInfo = v
	return s
}

// SetSnapshotInfo sets the SnapshotInfo field's value.
func (s *DescribeUsageOutput) SetSnapshotInfo(v *SnapshotInfo) *DescribeUsageOutput {
	s.SnapshotInfo = v
	return s
}

// SetSslCertInfo sets the SslCertInfo field's value.
func (s *DescribeUsageOutput) SetSslCertInfo(v *SslCertInfo) *DescribeUsageOutput {
	s.SslCertInfo = v
	return s
}

// SetStorageInfo sets the StorageInfo field's value.
func (s *DescribeUsageOutput) SetStorageInfo(v *StorageInfo) *DescribeUsageOutput {
	s.StorageInfo = v
	return s
}

// SetVolumeInfo sets the VolumeInfo field's value.
func (s *DescribeUsageOutput) SetVolumeInfo(v *VolumeInfo) *DescribeUsageOutput {
	s.VolumeInfo = v
	return s
}

// SetVpnGatewayInfo sets the VpnGatewayInfo field's value.
func (s *DescribeUsageOutput) SetVpnGatewayInfo(v *VpnGatewayInfo) *DescribeUsageOutput {
	s.VpnGatewayInfo = v
	return s
}

// SetYearMonth sets the YearMonth field's value.
func (s *DescribeUsageOutput) SetYearMonth(v string) *DescribeUsageOutput {
	s.YearMonth = &v
	return s
}

type DescribeUserActivitiesInput struct {
	_ struct{} `type:"structure"`

	Range *RequestRangeStruct `locationName:"Range" type:"structure"`

	YearMonth *string `locationName:"YearMonth" type:"string"`
}

// String returns the string representation
func (s DescribeUserActivitiesInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeUserActivitiesInput) GoString() string {
	return s.String()
}

// SetRange sets the Range field's value.
func (s *DescribeUserActivitiesInput) SetRange(v *RequestRangeStruct) *DescribeUserActivitiesInput {
	s.Range = v
	return s
}

// SetYearMonth sets the YearMonth field's value.
func (s *DescribeUserActivitiesInput) SetYearMonth(v string) *DescribeUserActivitiesInput {
	s.YearMonth = &v
	return s
}

type DescribeUserActivitiesOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	UserActivitiesSet []*UserActivitiesSetItem `locationName:"userActivitiesSet" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s DescribeUserActivitiesOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeUserActivitiesOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *DescribeUserActivitiesOutput) SetRequestId(v string) *DescribeUserActivitiesOutput {
	s.RequestId = &v
	return s
}

// SetUserActivitiesSet sets the UserActivitiesSet field's value.
func (s *DescribeUserActivitiesOutput) SetUserActivitiesSet(v []*UserActivitiesSetItem) *DescribeUserActivitiesOutput {
	s.UserActivitiesSet = v
	return s
}

type DescribeVolumesInput struct {
	_ struct{} `type:"structure"`

	VolumeId []*string `locationName:"VolumeId" type:"list"`
}

// String returns the string representation
func (s DescribeVolumesInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeVolumesInput) GoString() string {
	return s.String()
}

// SetVolumeId sets the VolumeId field's value.
func (s *DescribeVolumesInput) SetVolumeId(v []*string) *DescribeVolumesInput {
	s.VolumeId = v
	return s
}

type DescribeVolumesOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	VolumeSet []*VolumeSetItem `locationName:"volumeSet" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s DescribeVolumesOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeVolumesOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *DescribeVolumesOutput) SetRequestId(v string) *DescribeVolumesOutput {
	s.RequestId = &v
	return s
}

// SetVolumeSet sets the VolumeSet field's value.
func (s *DescribeVolumesOutput) SetVolumeSet(v []*VolumeSetItem) *DescribeVolumesOutput {
	s.VolumeSet = v
	return s
}

type DescribeVpnConnectionsInput struct {
	_ struct{} `type:"structure"`

	Filter []*RequestFilterStruct `locationName:"Filter" type:"list"`

	VpnConnectionId []*string `locationName:"VpnConnectionId" type:"list"`
}

// String returns the string representation
func (s DescribeVpnConnectionsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeVpnConnectionsInput) GoString() string {
	return s.String()
}

// SetFilter sets the Filter field's value.
func (s *DescribeVpnConnectionsInput) SetFilter(v []*RequestFilterStruct) *DescribeVpnConnectionsInput {
	s.Filter = v
	return s
}

// SetVpnConnectionId sets the VpnConnectionId field's value.
func (s *DescribeVpnConnectionsInput) SetVpnConnectionId(v []*string) *DescribeVpnConnectionsInput {
	s.VpnConnectionId = v
	return s
}

type DescribeVpnConnectionsOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	VpnConnectionSet []*VpnConnectionSetItem `locationName:"vpnConnectionSet" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s DescribeVpnConnectionsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeVpnConnectionsOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *DescribeVpnConnectionsOutput) SetRequestId(v string) *DescribeVpnConnectionsOutput {
	s.RequestId = &v
	return s
}

// SetVpnConnectionSet sets the VpnConnectionSet field's value.
func (s *DescribeVpnConnectionsOutput) SetVpnConnectionSet(v []*VpnConnectionSetItem) *DescribeVpnConnectionsOutput {
	s.VpnConnectionSet = v
	return s
}

type DescribeVpnGatewaysInput struct {
	_ struct{} `type:"structure"`

	Filter []*RequestFilterStruct `locationName:"Filter" type:"list"`

	NiftyVpnGatewayName []*string `locationName:"NiftyVpnGatewayName" type:"list"`

	VpnGatewayId []*string `locationName:"VpnGatewayId" type:"list"`
}

// String returns the string representation
func (s DescribeVpnGatewaysInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeVpnGatewaysInput) GoString() string {
	return s.String()
}

// SetFilter sets the Filter field's value.
func (s *DescribeVpnGatewaysInput) SetFilter(v []*RequestFilterStruct) *DescribeVpnGatewaysInput {
	s.Filter = v
	return s
}

// SetNiftyVpnGatewayName sets the NiftyVpnGatewayName field's value.
func (s *DescribeVpnGatewaysInput) SetNiftyVpnGatewayName(v []*string) *DescribeVpnGatewaysInput {
	s.NiftyVpnGatewayName = v
	return s
}

// SetVpnGatewayId sets the VpnGatewayId field's value.
func (s *DescribeVpnGatewaysInput) SetVpnGatewayId(v []*string) *DescribeVpnGatewaysInput {
	s.VpnGatewayId = v
	return s
}

type DescribeVpnGatewaysOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	VpnGatewaySet []*VpnGatewaySetItem `locationName:"vpnGatewaySet" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s DescribeVpnGatewaysOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeVpnGatewaysOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *DescribeVpnGatewaysOutput) SetRequestId(v string) *DescribeVpnGatewaysOutput {
	s.RequestId = &v
	return s
}

// SetVpnGatewaySet sets the VpnGatewaySet field's value.
func (s *DescribeVpnGatewaysOutput) SetVpnGatewaySet(v []*VpnGatewaySetItem) *DescribeVpnGatewaysOutput {
	s.VpnGatewaySet = v
	return s
}

type DescriptionValue struct {
	_ struct{} `type:"structure"`

	Value *string `locationName:"value" type:"string"`
}

// String returns the string representation
func (s DescriptionValue) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescriptionValue) GoString() string {
	return s.String()
}

// SetValue sets the Value field's value.
func (s *DescriptionValue) SetValue(v string) *DescriptionValue {
	s.Value = &v
	return s
}

type Destination struct {
	_ struct{} `type:"structure"`

	Address *string `locationName:"address" type:"string"`

	Port *int64 `locationName:"port" type:"integer"`
}

// String returns the string representation
func (s Destination) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s Destination) GoString() string {
	return s.String()
}

// SetAddress sets the Address field's value.
func (s *Destination) SetAddress(v string) *Destination {
	s.Address = &v
	return s
}

// SetPort sets the Port field's value.
func (s *Destination) SetPort(v int64) *Destination {
	s.Port = &v
	return s
}

type DetachVolumeInput struct {
	_ struct{} `type:"structure"`

	Agreement *bool `locationName:"Agreement" type:"boolean"`

	InstanceId *string `locationName:"InstanceId" type:"string"`

	VolumeId *string `locationName:"VolumeId" type:"string"`
}

// String returns the string representation
func (s DetachVolumeInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DetachVolumeInput) GoString() string {
	return s.String()
}

// SetAgreement sets the Agreement field's value.
func (s *DetachVolumeInput) SetAgreement(v bool) *DetachVolumeInput {
	s.Agreement = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *DetachVolumeInput) SetInstanceId(v string) *DetachVolumeInput {
	s.InstanceId = &v
	return s
}

// SetVolumeId sets the VolumeId field's value.
func (s *DetachVolumeInput) SetVolumeId(v string) *DetachVolumeInput {
	s.VolumeId = &v
	return s
}

type DetachVolumeOutput struct {
	_ struct{} `type:"structure"`

	AttachTime *time.Time `locationName:"attachTime" type:"timestamp" timestampFormat:""`

	Device *string `locationName:"device" type:"string"`

	InstanceId *string `locationName:"instanceId" type:"string"`

	InstanceUniqueId *string `locationName:"instanceUniqueId" type:"string"`

	RequestId *string `locationName:"requestId" type:"string"`

	Status *string `locationName:"status" type:"string"`

	VolumeId *string `locationName:"volumeId" type:"string"`
}

// String returns the string representation
func (s DetachVolumeOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DetachVolumeOutput) GoString() string {
	return s.String()
}

// SetAttachTime sets the AttachTime field's value.
func (s *DetachVolumeOutput) SetAttachTime(v time.Time) *DetachVolumeOutput {
	s.AttachTime = &v
	return s
}

// SetDevice sets the Device field's value.
func (s *DetachVolumeOutput) SetDevice(v string) *DetachVolumeOutput {
	s.Device = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *DetachVolumeOutput) SetInstanceId(v string) *DetachVolumeOutput {
	s.InstanceId = &v
	return s
}

// SetInstanceUniqueId sets the InstanceUniqueId field's value.
func (s *DetachVolumeOutput) SetInstanceUniqueId(v string) *DetachVolumeOutput {
	s.InstanceUniqueId = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *DetachVolumeOutput) SetRequestId(v string) *DetachVolumeOutput {
	s.RequestId = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *DetachVolumeOutput) SetStatus(v string) *DetachVolumeOutput {
	s.Status = &v
	return s
}

// SetVolumeId sets the VolumeId field's value.
func (s *DetachVolumeOutput) SetVolumeId(v string) *DetachVolumeOutput {
	s.VolumeId = &v
	return s
}

type Details struct {
	_ struct{} `type:"structure"`

	ChangeInCapacity *int64 `locationName:"changeInCapacity" type:"integer"`

	CurrentServersCount *int64 `locationName:"currentServersCount" type:"integer"`

	Resource *string `locationName:"resource" type:"string"`

	UpperThreshold *float64 `locationName:"upperThreshold" type:"double"`
}

// String returns the string representation
func (s Details) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s Details) GoString() string {
	return s.String()
}

// SetChangeInCapacity sets the ChangeInCapacity field's value.
func (s *Details) SetChangeInCapacity(v int64) *Details {
	s.ChangeInCapacity = &v
	return s
}

// SetCurrentServersCount sets the CurrentServersCount field's value.
func (s *Details) SetCurrentServersCount(v int64) *Details {
	s.CurrentServersCount = &v
	return s
}

// SetResource sets the Resource field's value.
func (s *Details) SetResource(v string) *Details {
	s.Resource = &v
	return s
}

// SetUpperThreshold sets the UpperThreshold field's value.
func (s *Details) SetUpperThreshold(v float64) *Details {
	s.UpperThreshold = &v
	return s
}

type DhcpConfig struct {
	_ struct{} `type:"structure"`

	DhcpConfigId *string `locationName:"dhcpConfigId" type:"string"`

	IpAddressPoolsSet []*IpAddressPoolsSetItem `locationName:"ipAddressPoolsSet" locationNameList:"item" type:"list"`

	StaticMappingsSet []*StaticMappingsSetItem `locationName:"staticMappingsSet" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s DhcpConfig) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DhcpConfig) GoString() string {
	return s.String()
}

// SetDhcpConfigId sets the DhcpConfigId field's value.
func (s *DhcpConfig) SetDhcpConfigId(v string) *DhcpConfig {
	s.DhcpConfigId = &v
	return s
}

// SetIpAddressPoolsSet sets the IpAddressPoolsSet field's value.
func (s *DhcpConfig) SetIpAddressPoolsSet(v []*IpAddressPoolsSetItem) *DhcpConfig {
	s.IpAddressPoolsSet = v
	return s
}

// SetStaticMappingsSet sets the StaticMappingsSet field's value.
func (s *DhcpConfig) SetStaticMappingsSet(v []*StaticMappingsSetItem) *DhcpConfig {
	s.StaticMappingsSet = v
	return s
}

type DhcpConfigsSetItem struct {
	_ struct{} `type:"structure"`

	DhcpConfigId *string `locationName:"dhcpConfigId" type:"string"`

	IpAddressPoolsSet []*IpAddressPoolsSetItem `locationName:"ipAddressPoolsSet" locationNameList:"item" type:"list"`

	StaticMappingsSet []*StaticMappingsSetItem `locationName:"staticMappingsSet" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s DhcpConfigsSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DhcpConfigsSetItem) GoString() string {
	return s.String()
}

// SetDhcpConfigId sets the DhcpConfigId field's value.
func (s *DhcpConfigsSetItem) SetDhcpConfigId(v string) *DhcpConfigsSetItem {
	s.DhcpConfigId = &v
	return s
}

// SetIpAddressPoolsSet sets the IpAddressPoolsSet field's value.
func (s *DhcpConfigsSetItem) SetIpAddressPoolsSet(v []*IpAddressPoolsSetItem) *DhcpConfigsSetItem {
	s.IpAddressPoolsSet = v
	return s
}

// SetStaticMappingsSet sets the StaticMappingsSet field's value.
func (s *DhcpConfigsSetItem) SetStaticMappingsSet(v []*StaticMappingsSetItem) *DhcpConfigsSetItem {
	s.StaticMappingsSet = v
	return s
}

type DhcpConfigurationSetItem struct {
	_ struct{} `type:"structure"`

	Key *string `locationName:"key" type:"string"`

	ValueSet []*ValueSetItem `locationName:"valueSet" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s DhcpConfigurationSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DhcpConfigurationSetItem) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *DhcpConfigurationSetItem) SetKey(v string) *DhcpConfigurationSetItem {
	s.Key = &v
	return s
}

// SetValueSet sets the ValueSet field's value.
func (s *DhcpConfigurationSetItem) SetValueSet(v []*ValueSetItem) *DhcpConfigurationSetItem {
	s.ValueSet = v
	return s
}

type DhcpConfigurationSetTypeSetItem struct {
	_ struct{} `type:"structure"`

	Key *string `locationName:"key" type:"string"`

	ValueSet []*ValueSetItem `locationName:"valueSet" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s DhcpConfigurationSetTypeSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DhcpConfigurationSetTypeSetItem) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *DhcpConfigurationSetTypeSetItem) SetKey(v string) *DhcpConfigurationSetTypeSetItem {
	s.Key = &v
	return s
}

// SetValueSet sets the ValueSet field's value.
func (s *DhcpConfigurationSetTypeSetItem) SetValueSet(v []*ValueSetItem) *DhcpConfigurationSetTypeSetItem {
	s.ValueSet = v
	return s
}

type DhcpIpAddressInformationSet struct {
	_ struct{} `type:"structure"`

	DhcpIpAddressSet []*DhcpIpAddressSetItem `locationName:"dhcpIpAddressSet" locationNameList:"item" type:"list"`

	IpAddressPoolSet []*IpAddressPoolSetItem `locationName:"ipAddressPoolSet" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s DhcpIpAddressInformationSet) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DhcpIpAddressInformationSet) GoString() string {
	return s.String()
}

// SetDhcpIpAddressSet sets the DhcpIpAddressSet field's value.
func (s *DhcpIpAddressInformationSet) SetDhcpIpAddressSet(v []*DhcpIpAddressSetItem) *DhcpIpAddressInformationSet {
	s.DhcpIpAddressSet = v
	return s
}

// SetIpAddressPoolSet sets the IpAddressPoolSet field's value.
func (s *DhcpIpAddressInformationSet) SetIpAddressPoolSet(v []*IpAddressPoolSetItem) *DhcpIpAddressInformationSet {
	s.IpAddressPoolSet = v
	return s
}

type DhcpIpAddressSetItem struct {
	_ struct{} `type:"structure"`

	Description *string `locationName:"description" type:"string"`

	StartIpAddress *string `locationName:"startIpAddress" type:"string"`

	StopIpAddress *string `locationName:"stopIpAddress" type:"string"`
}

// String returns the string representation
func (s DhcpIpAddressSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DhcpIpAddressSetItem) GoString() string {
	return s.String()
}

// SetDescription sets the Description field's value.
func (s *DhcpIpAddressSetItem) SetDescription(v string) *DhcpIpAddressSetItem {
	s.Description = &v
	return s
}

// SetStartIpAddress sets the StartIpAddress field's value.
func (s *DhcpIpAddressSetItem) SetStartIpAddress(v string) *DhcpIpAddressSetItem {
	s.StartIpAddress = &v
	return s
}

// SetStopIpAddress sets the StopIpAddress field's value.
func (s *DhcpIpAddressSetItem) SetStopIpAddress(v string) *DhcpIpAddressSetItem {
	s.StopIpAddress = &v
	return s
}

type DhcpOptions struct {
	_ struct{} `type:"structure"`

	DhcpConfigurationSetType []*DhcpConfigurationSetTypeSetItem `locationName:"dhcpConfigurationSetType" locationNameList:"item" type:"list"`

	DhcpOptionsId *string `locationName:"dhcpOptionsId" type:"string"`
}

// String returns the string representation
func (s DhcpOptions) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DhcpOptions) GoString() string {
	return s.String()
}

// SetDhcpConfigurationSetType sets the DhcpConfigurationSetType field's value.
func (s *DhcpOptions) SetDhcpConfigurationSetType(v []*DhcpConfigurationSetTypeSetItem) *DhcpOptions {
	s.DhcpConfigurationSetType = v
	return s
}

// SetDhcpOptionsId sets the DhcpOptionsId field's value.
func (s *DhcpOptions) SetDhcpOptionsId(v string) *DhcpOptions {
	s.DhcpOptionsId = &v
	return s
}

type DhcpOptionsSet struct {
	_ struct{} `type:"structure"`

	DhcpConfigurationSet []*DhcpConfigurationSetItem `locationName:"dhcpConfigurationSet" locationNameList:"item" type:"list"`

	DhcpOptionsId *string `locationName:"dhcpOptionsId" type:"string"`
}

// String returns the string representation
func (s DhcpOptionsSet) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DhcpOptionsSet) GoString() string {
	return s.String()
}

// SetDhcpConfigurationSet sets the DhcpConfigurationSet field's value.
func (s *DhcpOptionsSet) SetDhcpConfigurationSet(v []*DhcpConfigurationSetItem) *DhcpOptionsSet {
	s.DhcpConfigurationSet = v
	return s
}

// SetDhcpOptionsId sets the DhcpOptionsId field's value.
func (s *DhcpOptionsSet) SetDhcpOptionsId(v string) *DhcpOptionsSet {
	s.DhcpOptionsId = &v
	return s
}

type DhcpStatusInformationSetItem struct {
	_ struct{} `type:"structure"`

	DhcpIpAddressInformationSet *DhcpIpAddressInformationSet `locationName:"dhcpIpAddressInformationSet" type:"structure"`

	NetworkId *string `locationName:"networkId" type:"string"`

	PrivateLanName *string `locationName:"privateLanName" type:"string"`
}

// String returns the string representation
func (s DhcpStatusInformationSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DhcpStatusInformationSetItem) GoString() string {
	return s.String()
}

// SetDhcpIpAddressInformationSet sets the DhcpIpAddressInformationSet field's value.
func (s *DhcpStatusInformationSetItem) SetDhcpIpAddressInformationSet(v *DhcpIpAddressInformationSet) *DhcpStatusInformationSetItem {
	s.DhcpIpAddressInformationSet = v
	return s
}

// SetNetworkId sets the NetworkId field's value.
func (s *DhcpStatusInformationSetItem) SetNetworkId(v string) *DhcpStatusInformationSetItem {
	s.NetworkId = &v
	return s
}

// SetPrivateLanName sets the PrivateLanName field's value.
func (s *DhcpStatusInformationSetItem) SetPrivateLanName(v string) *DhcpStatusInformationSetItem {
	s.PrivateLanName = &v
	return s
}

type DisableApiTermination struct {
	_ struct{} `type:"structure"`

	Value *string `locationName:"value" type:"string"`
}

// String returns the string representation
func (s DisableApiTermination) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DisableApiTermination) GoString() string {
	return s.String()
}

// SetValue sets the Value field's value.
func (s *DisableApiTermination) SetValue(v string) *DisableApiTermination {
	s.Value = &v
	return s
}

type DisassociateAddressInput struct {
	_ struct{} `type:"structure"`

	NiftyReboot *string `locationName:"NiftyReboot" type:"string"`

	PrivateIpAddress *string `locationName:"PrivateIpAddress" type:"string"`

	PublicIp *string `locationName:"PublicIp" type:"string"`
}

// String returns the string representation
func (s DisassociateAddressInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DisassociateAddressInput) GoString() string {
	return s.String()
}

// SetNiftyReboot sets the NiftyReboot field's value.
func (s *DisassociateAddressInput) SetNiftyReboot(v string) *DisassociateAddressInput {
	s.NiftyReboot = &v
	return s
}

// SetPrivateIpAddress sets the PrivateIpAddress field's value.
func (s *DisassociateAddressInput) SetPrivateIpAddress(v string) *DisassociateAddressInput {
	s.PrivateIpAddress = &v
	return s
}

// SetPublicIp sets the PublicIp field's value.
func (s *DisassociateAddressInput) SetPublicIp(v string) *DisassociateAddressInput {
	s.PublicIp = &v
	return s
}

type DisassociateAddressOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s DisassociateAddressOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DisassociateAddressOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *DisassociateAddressOutput) SetRequestId(v string) *DisassociateAddressOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *DisassociateAddressOutput) SetReturn(v bool) *DisassociateAddressOutput {
	s.Return = &v
	return s
}

type DisassociateRouteTableInput struct {
	_ struct{} `type:"structure"`

	Agreement *bool `locationName:"Agreement" type:"boolean"`

	AssociationId *string `locationName:"AssociationId" type:"string"`
}

// String returns the string representation
func (s DisassociateRouteTableInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DisassociateRouteTableInput) GoString() string {
	return s.String()
}

// SetAgreement sets the Agreement field's value.
func (s *DisassociateRouteTableInput) SetAgreement(v bool) *DisassociateRouteTableInput {
	s.Agreement = &v
	return s
}

// SetAssociationId sets the AssociationId field's value.
func (s *DisassociateRouteTableInput) SetAssociationId(v string) *DisassociateRouteTableInput {
	s.AssociationId = &v
	return s
}

type DisassociateRouteTableOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s DisassociateRouteTableOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DisassociateRouteTableOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *DisassociateRouteTableOutput) SetRequestId(v string) *DisassociateRouteTableOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *DisassociateRouteTableOutput) SetReturn(v bool) *DisassociateRouteTableOutput {
	s.Return = &v
	return s
}

type DissociateUsersInput struct {
	_ struct{} `type:"structure"`

	FunctionName *string `locationName:"FunctionName" type:"string"`

	Users []*RequestUsersStruct `locationName:"Users" locationNameList:"member" type:"list"`
}

// String returns the string representation
func (s DissociateUsersInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DissociateUsersInput) GoString() string {
	return s.String()
}

// SetFunctionName sets the FunctionName field's value.
func (s *DissociateUsersInput) SetFunctionName(v string) *DissociateUsersInput {
	s.FunctionName = &v
	return s
}

// SetUsers sets the Users field's value.
func (s *DissociateUsersInput) SetUsers(v []*RequestUsersStruct) *DissociateUsersInput {
	s.Users = v
	return s
}

type DissociateUsersOutput struct {
	_ struct{} `type:"structure"`

	DissociateUsersResult *DissociateUsersOutput `locationName:"DissociateUsersResult" type:"structure"`

	ResponseMetadata *ResponseMetadata `locationName:"ResponseMetadata" type:"structure"`

	Users []*UsersMemberItem `locationName:"Users" locationNameList:"member" type:"list"`
}

// String returns the string representation
func (s DissociateUsersOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DissociateUsersOutput) GoString() string {
	return s.String()
}

// SetDissociateUsersResult sets the DissociateUsersResult field's value.
func (s *DissociateUsersOutput) SetDissociateUsersResult(v *DissociateUsersOutput) *DissociateUsersOutput {
	s.DissociateUsersResult = v
	return s
}

// SetResponseMetadata sets the ResponseMetadata field's value.
func (s *DissociateUsersOutput) SetResponseMetadata(v *ResponseMetadata) *DissociateUsersOutput {
	s.ResponseMetadata = v
	return s
}

// SetUsers sets the Users field's value.
func (s *DissociateUsersOutput) SetUsers(v []*UsersMemberItem) *DissociateUsersOutput {
	s.Users = v
	return s
}

type DownloadSslCertificateInput struct {
	_ struct{} `type:"structure"`

	FileType *string `locationName:"FileType" type:"string"`

	FqdnId *string `locationName:"FqdnId" type:"string"`
}

// String returns the string representation
func (s DownloadSslCertificateInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DownloadSslCertificateInput) GoString() string {
	return s.String()
}

// SetFileType sets the FileType field's value.
func (s *DownloadSslCertificateInput) SetFileType(v string) *DownloadSslCertificateInput {
	s.FileType = &v
	return s
}

// SetFqdnId sets the FqdnId field's value.
func (s *DownloadSslCertificateInput) SetFqdnId(v string) *DownloadSslCertificateInput {
	s.FqdnId = &v
	return s
}

type DownloadSslCertificateOutput struct {
	_ struct{} `type:"structure"`

	FileData *string `locationName:"fileData" type:"string"`

	Fqdn *string `locationName:"fqdn" type:"string"`

	FqdnId *string `locationName:"fqdnId" type:"string"`

	RequestId *string `locationName:"requestId" type:"string"`
}

// String returns the string representation
func (s DownloadSslCertificateOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DownloadSslCertificateOutput) GoString() string {
	return s.String()
}

// SetFileData sets the FileData field's value.
func (s *DownloadSslCertificateOutput) SetFileData(v string) *DownloadSslCertificateOutput {
	s.FileData = &v
	return s
}

// SetFqdn sets the Fqdn field's value.
func (s *DownloadSslCertificateOutput) SetFqdn(v string) *DownloadSslCertificateOutput {
	s.Fqdn = &v
	return s
}

// SetFqdnId sets the FqdnId field's value.
func (s *DownloadSslCertificateOutput) SetFqdnId(v string) *DownloadSslCertificateOutput {
	s.FqdnId = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *DownloadSslCertificateOutput) SetRequestId(v string) *DownloadSslCertificateOutput {
	s.RequestId = &v
	return s
}

type DynamicIpMeasuredRate struct {
	_ struct{} `type:"structure"`

	Charge *int64 `locationName:"charge" type:"integer"`

	Type *string `locationName:"type" type:"string"`

	Unit *string `locationName:"unit" type:"string"`

	Value *int64 `locationName:"value" type:"integer"`
}

// String returns the string representation
func (s DynamicIpMeasuredRate) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DynamicIpMeasuredRate) GoString() string {
	return s.String()
}

// SetCharge sets the Charge field's value.
func (s *DynamicIpMeasuredRate) SetCharge(v int64) *DynamicIpMeasuredRate {
	s.Charge = &v
	return s
}

// SetType sets the Type field's value.
func (s *DynamicIpMeasuredRate) SetType(v string) *DynamicIpMeasuredRate {
	s.Type = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *DynamicIpMeasuredRate) SetUnit(v string) *DynamicIpMeasuredRate {
	s.Unit = &v
	return s
}

// SetValue sets the Value field's value.
func (s *DynamicIpMeasuredRate) SetValue(v int64) *DynamicIpMeasuredRate {
	s.Value = &v
	return s
}

type DynamicIpMonthlyRate struct {
	_ struct{} `type:"structure"`

	Charge *int64 `locationName:"charge" type:"integer"`

	Type *string `locationName:"type" type:"string"`

	Unit *string `locationName:"unit" type:"string"`

	Value *int64 `locationName:"value" type:"integer"`
}

// String returns the string representation
func (s DynamicIpMonthlyRate) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DynamicIpMonthlyRate) GoString() string {
	return s.String()
}

// SetCharge sets the Charge field's value.
func (s *DynamicIpMonthlyRate) SetCharge(v int64) *DynamicIpMonthlyRate {
	s.Charge = &v
	return s
}

// SetType sets the Type field's value.
func (s *DynamicIpMonthlyRate) SetType(v string) *DynamicIpMonthlyRate {
	s.Type = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *DynamicIpMonthlyRate) SetUnit(v string) *DynamicIpMonthlyRate {
	s.Unit = &v
	return s
}

// SetValue sets the Value field's value.
func (s *DynamicIpMonthlyRate) SetValue(v int64) *DynamicIpMonthlyRate {
	s.Value = &v
	return s
}

type ELBVersionInformation struct {
	_ struct{} `type:"structure"`

	IsLatest *bool `locationName:"IsLatest" type:"boolean"`

	Version *bool `locationName:"Version" type:"boolean"`
}

// String returns the string representation
func (s ELBVersionInformation) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ELBVersionInformation) GoString() string {
	return s.String()
}

// SetIsLatest sets the IsLatest field's value.
func (s *ELBVersionInformation) SetIsLatest(v bool) *ELBVersionInformation {
	s.IsLatest = &v
	return s
}

// SetVersion sets the Version field's value.
func (s *ELBVersionInformation) SetVersion(v bool) *ELBVersionInformation {
	s.Version = &v
	return s
}

type Ebs struct {
	_ struct{} `type:"structure"`

	AttachTime *time.Time `locationName:"attachTime" type:"timestamp" timestampFormat:""`

	DeleteOnTermination *bool `locationName:"deleteOnTermination" type:"boolean"`

	SnapshotId *string `locationName:"snapshotId" type:"string"`

	Status *string `locationName:"status" type:"string"`

	VolumeId *string `locationName:"volumeId" type:"string"`

	VolumeSize *int64 `locationName:"volumeSize" type:"integer"`
}

// String returns the string representation
func (s Ebs) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s Ebs) GoString() string {
	return s.String()
}

// SetAttachTime sets the AttachTime field's value.
func (s *Ebs) SetAttachTime(v time.Time) *Ebs {
	s.AttachTime = &v
	return s
}

// SetDeleteOnTermination sets the DeleteOnTermination field's value.
func (s *Ebs) SetDeleteOnTermination(v bool) *Ebs {
	s.DeleteOnTermination = &v
	return s
}

// SetSnapshotId sets the SnapshotId field's value.
func (s *Ebs) SetSnapshotId(v string) *Ebs {
	s.SnapshotId = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *Ebs) SetStatus(v string) *Ebs {
	s.Status = &v
	return s
}

// SetVolumeId sets the VolumeId field's value.
func (s *Ebs) SetVolumeId(v string) *Ebs {
	s.VolumeId = &v
	return s
}

// SetVolumeSize sets the VolumeSize field's value.
func (s *Ebs) SetVolumeSize(v int64) *Ebs {
	s.VolumeSize = &v
	return s
}

type ElasticIpInfo struct {
	_ struct{} `type:"structure"`

	ElasticIpSet []*ElasticIpSetItem `locationName:"elasticIpSet" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s ElasticIpInfo) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ElasticIpInfo) GoString() string {
	return s.String()
}

// SetElasticIpSet sets the ElasticIpSet field's value.
func (s *ElasticIpInfo) SetElasticIpSet(v []*ElasticIpSetItem) *ElasticIpInfo {
	s.ElasticIpSet = v
	return s
}

type ElasticIpItemSetItem struct {
	_ struct{} `type:"structure"`

	Count *int64 `locationName:"count" type:"integer"`

	Type *string `locationName:"type" type:"string"`
}

// String returns the string representation
func (s ElasticIpItemSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ElasticIpItemSetItem) GoString() string {
	return s.String()
}

// SetCount sets the Count field's value.
func (s *ElasticIpItemSetItem) SetCount(v int64) *ElasticIpItemSetItem {
	s.Count = &v
	return s
}

// SetType sets the Type field's value.
func (s *ElasticIpItemSetItem) SetType(v string) *ElasticIpItemSetItem {
	s.Type = &v
	return s
}

type ElasticIpSetItem struct {
	_ struct{} `type:"structure"`

	Charge *int64 `locationName:"charge" type:"integer"`

	Type *string `locationName:"type" type:"string"`

	Unit *string `locationName:"unit" type:"string"`

	Value *int64 `locationName:"value" type:"integer"`
}

// String returns the string representation
func (s ElasticIpSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ElasticIpSetItem) GoString() string {
	return s.String()
}

// SetCharge sets the Charge field's value.
func (s *ElasticIpSetItem) SetCharge(v int64) *ElasticIpSetItem {
	s.Charge = &v
	return s
}

// SetType sets the Type field's value.
func (s *ElasticIpSetItem) SetType(v string) *ElasticIpSetItem {
	s.Type = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *ElasticIpSetItem) SetUnit(v string) *ElasticIpSetItem {
	s.Unit = &v
	return s
}

// SetValue sets the Value field's value.
func (s *ElasticIpSetItem) SetValue(v int64) *ElasticIpSetItem {
	s.Value = &v
	return s
}

type ElasticLoadBalancerDescriptionsMemberItem struct {
	_ struct{} `type:"structure"`

	AccountingType *string `locationName:"AccountingType" type:"string"`

	AvailabilityZones []*string `locationName:"AvailabilityZones" locationNameList:"member" type:"list"`

	CreatedTime *time.Time `locationName:"CreatedTime" type:"timestamp" timestampFormat:""`

	DNSName *string `locationName:"DNSName" type:"string"`

	ELBVersionInformation *ELBVersionInformation `locationName:"ELBVersionInformation" type:"structure"`

	ElasticLoadBalancerId *string `locationName:"ElasticLoadBalancerId" type:"string"`

	ElasticLoadBalancerListenerDescriptions []*ElasticLoadBalancerListenerDescriptionsMemberItem `locationName:"ElasticLoadBalancerListenerDescriptions" locationNameList:"member" type:"list"`

	ElasticLoadBalancerName *string `locationName:"ElasticLoadBalancerName" type:"string"`

	NetworkInterfaces []*NetworkInterfacesMemberItem `locationName:"NetworkInterfaces" locationNameList:"member" type:"list"`

	NetworkVolume *string `locationName:"NetworkVolume" type:"string"`

	NextMonthAccountingType *string `locationName:"NextMonthAccountingType" type:"string"`

	State *string `locationName:"State" type:"string"`
}

// String returns the string representation
func (s ElasticLoadBalancerDescriptionsMemberItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ElasticLoadBalancerDescriptionsMemberItem) GoString() string {
	return s.String()
}

// SetAccountingType sets the AccountingType field's value.
func (s *ElasticLoadBalancerDescriptionsMemberItem) SetAccountingType(v string) *ElasticLoadBalancerDescriptionsMemberItem {
	s.AccountingType = &v
	return s
}

// SetAvailabilityZones sets the AvailabilityZones field's value.
func (s *ElasticLoadBalancerDescriptionsMemberItem) SetAvailabilityZones(v []*string) *ElasticLoadBalancerDescriptionsMemberItem {
	s.AvailabilityZones = v
	return s
}

// SetCreatedTime sets the CreatedTime field's value.
func (s *ElasticLoadBalancerDescriptionsMemberItem) SetCreatedTime(v time.Time) *ElasticLoadBalancerDescriptionsMemberItem {
	s.CreatedTime = &v
	return s
}

// SetDNSName sets the DNSName field's value.
func (s *ElasticLoadBalancerDescriptionsMemberItem) SetDNSName(v string) *ElasticLoadBalancerDescriptionsMemberItem {
	s.DNSName = &v
	return s
}

// SetELBVersionInformation sets the ELBVersionInformation field's value.
func (s *ElasticLoadBalancerDescriptionsMemberItem) SetELBVersionInformation(v *ELBVersionInformation) *ElasticLoadBalancerDescriptionsMemberItem {
	s.ELBVersionInformation = v
	return s
}

// SetElasticLoadBalancerId sets the ElasticLoadBalancerId field's value.
func (s *ElasticLoadBalancerDescriptionsMemberItem) SetElasticLoadBalancerId(v string) *ElasticLoadBalancerDescriptionsMemberItem {
	s.ElasticLoadBalancerId = &v
	return s
}

// SetElasticLoadBalancerListenerDescriptions sets the ElasticLoadBalancerListenerDescriptions field's value.
func (s *ElasticLoadBalancerDescriptionsMemberItem) SetElasticLoadBalancerListenerDescriptions(v []*ElasticLoadBalancerListenerDescriptionsMemberItem) *ElasticLoadBalancerDescriptionsMemberItem {
	s.ElasticLoadBalancerListenerDescriptions = v
	return s
}

// SetElasticLoadBalancerName sets the ElasticLoadBalancerName field's value.
func (s *ElasticLoadBalancerDescriptionsMemberItem) SetElasticLoadBalancerName(v string) *ElasticLoadBalancerDescriptionsMemberItem {
	s.ElasticLoadBalancerName = &v
	return s
}

// SetNetworkInterfaces sets the NetworkInterfaces field's value.
func (s *ElasticLoadBalancerDescriptionsMemberItem) SetNetworkInterfaces(v []*NetworkInterfacesMemberItem) *ElasticLoadBalancerDescriptionsMemberItem {
	s.NetworkInterfaces = v
	return s
}

// SetNetworkVolume sets the NetworkVolume field's value.
func (s *ElasticLoadBalancerDescriptionsMemberItem) SetNetworkVolume(v string) *ElasticLoadBalancerDescriptionsMemberItem {
	s.NetworkVolume = &v
	return s
}

// SetNextMonthAccountingType sets the NextMonthAccountingType field's value.
func (s *ElasticLoadBalancerDescriptionsMemberItem) SetNextMonthAccountingType(v string) *ElasticLoadBalancerDescriptionsMemberItem {
	s.NextMonthAccountingType = &v
	return s
}

// SetState sets the State field's value.
func (s *ElasticLoadBalancerDescriptionsMemberItem) SetState(v string) *ElasticLoadBalancerDescriptionsMemberItem {
	s.State = &v
	return s
}

type ElasticLoadBalancerInfo struct {
	_ struct{} `type:"structure"`

	Vip []*VipSetItem `locationName:"vip" locationNameList:"item" type:"list"`

	VipMeasuredRate []*VipMeasuredRateSetItem `locationName:"vipMeasuredRate" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s ElasticLoadBalancerInfo) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ElasticLoadBalancerInfo) GoString() string {
	return s.String()
}

// SetVip sets the Vip field's value.
func (s *ElasticLoadBalancerInfo) SetVip(v []*VipSetItem) *ElasticLoadBalancerInfo {
	s.Vip = v
	return s
}

// SetVipMeasuredRate sets the VipMeasuredRate field's value.
func (s *ElasticLoadBalancerInfo) SetVipMeasuredRate(v []*VipMeasuredRateSetItem) *ElasticLoadBalancerInfo {
	s.VipMeasuredRate = v
	return s
}

type ElasticLoadBalancerListenerDescriptionsMemberItem struct {
	_ struct{} `type:"structure"`

	Listener *Listener `locationName:"Listener" type:"structure"`
}

// String returns the string representation
func (s ElasticLoadBalancerListenerDescriptionsMemberItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ElasticLoadBalancerListenerDescriptionsMemberItem) GoString() string {
	return s.String()
}

// SetListener sets the Listener field's value.
func (s *ElasticLoadBalancerListenerDescriptionsMemberItem) SetListener(v *Listener) *ElasticLoadBalancerListenerDescriptionsMemberItem {
	s.Listener = v
	return s
}

type ElasticLoadBalancingSetItem struct {
	_ struct{} `type:"structure"`

	ElasticLoadBalancerName *string `locationName:"elasticLoadBalancerName" type:"string"`

	ElasticLoadBalancerPort *int64 `locationName:"elasticLoadBalancerPort" type:"integer"`

	InstancePort *int64 `locationName:"instancePort" type:"integer"`

	Protocol *string `locationName:"protocol" type:"string"`
}

// String returns the string representation
func (s ElasticLoadBalancingSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ElasticLoadBalancingSetItem) GoString() string {
	return s.String()
}

// SetElasticLoadBalancerName sets the ElasticLoadBalancerName field's value.
func (s *ElasticLoadBalancingSetItem) SetElasticLoadBalancerName(v string) *ElasticLoadBalancingSetItem {
	s.ElasticLoadBalancerName = &v
	return s
}

// SetElasticLoadBalancerPort sets the ElasticLoadBalancerPort field's value.
func (s *ElasticLoadBalancingSetItem) SetElasticLoadBalancerPort(v int64) *ElasticLoadBalancingSetItem {
	s.ElasticLoadBalancerPort = &v
	return s
}

// SetInstancePort sets the InstancePort field's value.
func (s *ElasticLoadBalancingSetItem) SetInstancePort(v int64) *ElasticLoadBalancingSetItem {
	s.InstancePort = &v
	return s
}

// SetProtocol sets the Protocol field's value.
func (s *ElasticLoadBalancingSetItem) SetProtocol(v string) *ElasticLoadBalancingSetItem {
	s.Protocol = &v
	return s
}

type EmailAddressSetItem struct {
	_ struct{} `type:"structure"`

	EmailAddress *string `locationName:"emailAddress" type:"string"`
}

// String returns the string representation
func (s EmailAddressSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s EmailAddressSetItem) GoString() string {
	return s.String()
}

// SetEmailAddress sets the EmailAddress field's value.
func (s *EmailAddressSetItem) SetEmailAddress(v string) *EmailAddressSetItem {
	s.EmailAddress = &v
	return s
}

type ExtraChargeInfo struct {
	_ struct{} `type:"structure"`

	ExtraChargeMonthlyRateSet []*ExtraChargeMonthlyRateSetItem `locationName:"extraChargeMonthlyRateSet" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s ExtraChargeInfo) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ExtraChargeInfo) GoString() string {
	return s.String()
}

// SetExtraChargeMonthlyRateSet sets the ExtraChargeMonthlyRateSet field's value.
func (s *ExtraChargeInfo) SetExtraChargeMonthlyRateSet(v []*ExtraChargeMonthlyRateSetItem) *ExtraChargeInfo {
	s.ExtraChargeMonthlyRateSet = v
	return s
}

type ExtraChargeMonthlyRateSetItem struct {
	_ struct{} `type:"structure"`

	Charge *int64 `locationName:"charge" type:"integer"`

	Type *string `locationName:"type" type:"string"`

	Unit *string `locationName:"unit" type:"string"`

	Value *int64 `locationName:"value" type:"integer"`
}

// String returns the string representation
func (s ExtraChargeMonthlyRateSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ExtraChargeMonthlyRateSetItem) GoString() string {
	return s.String()
}

// SetCharge sets the Charge field's value.
func (s *ExtraChargeMonthlyRateSetItem) SetCharge(v int64) *ExtraChargeMonthlyRateSetItem {
	s.Charge = &v
	return s
}

// SetType sets the Type field's value.
func (s *ExtraChargeMonthlyRateSetItem) SetType(v string) *ExtraChargeMonthlyRateSetItem {
	s.Type = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *ExtraChargeMonthlyRateSetItem) SetUnit(v string) *ExtraChargeMonthlyRateSetItem {
	s.Unit = &v
	return s
}

// SetValue sets the Value field's value.
func (s *ExtraChargeMonthlyRateSetItem) SetValue(v int64) *ExtraChargeMonthlyRateSetItem {
	s.Value = &v
	return s
}

type Filter struct {
	_ struct{} `type:"structure"`

	FilterType *string `locationName:"FilterType" type:"string"`

	IPAddresses []*IPAddressesMemberItem `locationName:"IPAddresses" locationNameList:"member" type:"list"`
}

// String returns the string representation
func (s Filter) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s Filter) GoString() string {
	return s.String()
}

// SetFilterType sets the FilterType field's value.
func (s *Filter) SetFilterType(v string) *Filter {
	s.FilterType = &v
	return s
}

// SetIPAddresses sets the IPAddresses field's value.
func (s *Filter) SetIPAddresses(v []*IPAddressesMemberItem) *Filter {
	s.IPAddresses = v
	return s
}

type GroupIdValue struct {
	_ struct{} `type:"structure"`

	Value *string `locationName:"value" type:"string"`
}

// String returns the string representation
func (s GroupIdValue) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s GroupIdValue) GoString() string {
	return s.String()
}

// SetValue sets the Value field's value.
func (s *GroupIdValue) SetValue(v string) *GroupIdValue {
	s.Value = &v
	return s
}

type GroupSetItem struct {
	_ struct{} `type:"structure"`

	GroupId *string `locationName:"groupId" type:"string"`
}

// String returns the string representation
func (s GroupSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s GroupSetItem) GoString() string {
	return s.String()
}

// SetGroupId sets the GroupId field's value.
func (s *GroupSetItem) SetGroupId(v string) *GroupSetItem {
	s.GroupId = &v
	return s
}

type GroupsSetItem struct {
	_ struct{} `type:"structure"`

	GroupName *string `locationName:"groupName" type:"string"`

	UserId *string `locationName:"userId" type:"string"`
}

// String returns the string representation
func (s GroupsSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s GroupsSetItem) GoString() string {
	return s.String()
}

// SetGroupName sets the GroupName field's value.
func (s *GroupsSetItem) SetGroupName(v string) *GroupsSetItem {
	s.GroupName = &v
	return s
}

// SetUserId sets the UserId field's value.
func (s *GroupsSetItem) SetUserId(v string) *GroupsSetItem {
	s.UserId = &v
	return s
}

type HealthCheck struct {
	_ struct{} `type:"structure"`

	HealthyThreshold *int64 `locationName:"HealthyThreshold" type:"integer"`

	InstanceStates []*InstanceStatesMemberItem `locationName:"InstanceStates" locationNameList:"member" type:"list"`

	Interval *int64 `locationName:"Interval" type:"integer"`

	Target *string `locationName:"Target" type:"string"`

	Timeout *int64 `locationName:"Timeout" type:"integer"`

	UnhealthyThreshold *int64 `locationName:"UnhealthyThreshold" type:"integer"`
}

// String returns the string representation
func (s HealthCheck) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s HealthCheck) GoString() string {
	return s.String()
}

// SetHealthyThreshold sets the HealthyThreshold field's value.
func (s *HealthCheck) SetHealthyThreshold(v int64) *HealthCheck {
	s.HealthyThreshold = &v
	return s
}

// SetInstanceStates sets the InstanceStates field's value.
func (s *HealthCheck) SetInstanceStates(v []*InstanceStatesMemberItem) *HealthCheck {
	s.InstanceStates = v
	return s
}

// SetInterval sets the Interval field's value.
func (s *HealthCheck) SetInterval(v int64) *HealthCheck {
	s.Interval = &v
	return s
}

// SetTarget sets the Target field's value.
func (s *HealthCheck) SetTarget(v string) *HealthCheck {
	s.Target = &v
	return s
}

// SetTimeout sets the Timeout field's value.
func (s *HealthCheck) SetTimeout(v int64) *HealthCheck {
	s.Timeout = &v
	return s
}

// SetUnhealthyThreshold sets the UnhealthyThreshold field's value.
func (s *HealthCheck) SetUnhealthyThreshold(v int64) *HealthCheck {
	s.UnhealthyThreshold = &v
	return s
}

type IPAddressesMemberItem struct {
	_ struct{} `type:"structure"`

	IPAddress *string `locationName:"IPAddress" type:"string"`
}

// String returns the string representation
func (s IPAddressesMemberItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s IPAddressesMemberItem) GoString() string {
	return s.String()
}

// SetIPAddress sets the IPAddress field's value.
func (s *IPAddressesMemberItem) SetIPAddress(v string) *IPAddressesMemberItem {
	s.IPAddress = &v
	return s
}

type Image struct {
	_ struct{} `type:"structure"`

	Checksum *int64 `locationName:"checksum" type:"integer"`

	Format *string `locationName:"format" type:"string"`

	ImportManifestUrl *string `locationName:"importManifestUrl" type:"string"`

	Size *int64 `locationName:"size" type:"integer"`
}

// String returns the string representation
func (s Image) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s Image) GoString() string {
	return s.String()
}

// SetChecksum sets the Checksum field's value.
func (s *Image) SetChecksum(v int64) *Image {
	s.Checksum = &v
	return s
}

// SetFormat sets the Format field's value.
func (s *Image) SetFormat(v string) *Image {
	s.Format = &v
	return s
}

// SetImportManifestUrl sets the ImportManifestUrl field's value.
func (s *Image) SetImportManifestUrl(v string) *Image {
	s.ImportManifestUrl = &v
	return s
}

// SetSize sets the Size field's value.
func (s *Image) SetSize(v int64) *Image {
	s.Size = &v
	return s
}

type ImageInfo struct {
	_ struct{} `type:"structure"`

	CreateImage *CreateImage `locationName:"createImage" type:"structure"`

	KeepImageSet []*KeepImageSetItem `locationName:"keepImageSet" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s ImageInfo) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ImageInfo) GoString() string {
	return s.String()
}

// SetCreateImage sets the CreateImage field's value.
func (s *ImageInfo) SetCreateImage(v *CreateImage) *ImageInfo {
	s.CreateImage = v
	return s
}

// SetKeepImageSet sets the KeepImageSet field's value.
func (s *ImageInfo) SetKeepImageSet(v []*KeepImageSetItem) *ImageInfo {
	s.KeepImageSet = v
	return s
}

type ImagesSetItem struct {
	_ struct{} `type:"structure"`

	Architecture *string `locationName:"architecture" type:"string"`

	BlockDeviceMapping []*BlockDeviceMappingSetItem `locationName:"blockDeviceMapping" locationNameList:"item" type:"list"`

	Description *string `locationName:"description" type:"string"`

	DetailDescription *string `locationName:"detailDescription" type:"string"`

	ImageId *string `locationName:"imageId" type:"string"`

	ImageLocation *string `locationName:"imageLocation" type:"string"`

	ImageOwnerAlias *string `locationName:"imageOwnerAlias" type:"string"`

	ImageOwnerId *string `locationName:"imageOwnerId" type:"string"`

	ImageState *string `locationName:"imageState" type:"string"`

	ImageType *string `locationName:"imageType" type:"string"`

	IsPublic *bool `locationName:"isPublic" type:"boolean"`

	KernelId *string `locationName:"kernelId" type:"string"`

	LaunchTime *time.Time `locationName:"launchTime" type:"timestamp" timestampFormat:""`

	Name *string `locationName:"name" type:"string"`

	NiftyContactUrl *string `locationName:"niftyContactUrl" type:"string"`

	NiftyDistributionIds []*NiftyDistributionIdsSetItem `locationName:"niftyDistributionIds" locationNameList:"item" type:"list"`

	NiftyImageSize *int64 `locationName:"niftyImageSize" type:"integer"`

	NiftyIsAllowedDistribution *bool `locationName:"niftyIsAllowedDistribution" type:"boolean"`

	Placement *Placement `locationName:"placement" type:"structure"`

	Platform *string `locationName:"platform" type:"string"`

	ProductCodes []*ProductCodesSetItem `locationName:"productCodes" locationNameList:"item" type:"list"`

	RamdiskId *string `locationName:"ramdiskId" type:"string"`

	Redistributable *bool `locationName:"redistributable" type:"boolean"`

	RootDeviceName *string `locationName:"rootDeviceName" type:"string"`

	RootDeviceType *string `locationName:"rootDeviceType" type:"string"`

	StateReason *StateReason `locationName:"stateReason" type:"structure"`
}

// String returns the string representation
func (s ImagesSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ImagesSetItem) GoString() string {
	return s.String()
}

// SetArchitecture sets the Architecture field's value.
func (s *ImagesSetItem) SetArchitecture(v string) *ImagesSetItem {
	s.Architecture = &v
	return s
}

// SetBlockDeviceMapping sets the BlockDeviceMapping field's value.
func (s *ImagesSetItem) SetBlockDeviceMapping(v []*BlockDeviceMappingSetItem) *ImagesSetItem {
	s.BlockDeviceMapping = v
	return s
}

// SetDescription sets the Description field's value.
func (s *ImagesSetItem) SetDescription(v string) *ImagesSetItem {
	s.Description = &v
	return s
}

// SetDetailDescription sets the DetailDescription field's value.
func (s *ImagesSetItem) SetDetailDescription(v string) *ImagesSetItem {
	s.DetailDescription = &v
	return s
}

// SetImageId sets the ImageId field's value.
func (s *ImagesSetItem) SetImageId(v string) *ImagesSetItem {
	s.ImageId = &v
	return s
}

// SetImageLocation sets the ImageLocation field's value.
func (s *ImagesSetItem) SetImageLocation(v string) *ImagesSetItem {
	s.ImageLocation = &v
	return s
}

// SetImageOwnerAlias sets the ImageOwnerAlias field's value.
func (s *ImagesSetItem) SetImageOwnerAlias(v string) *ImagesSetItem {
	s.ImageOwnerAlias = &v
	return s
}

// SetImageOwnerId sets the ImageOwnerId field's value.
func (s *ImagesSetItem) SetImageOwnerId(v string) *ImagesSetItem {
	s.ImageOwnerId = &v
	return s
}

// SetImageState sets the ImageState field's value.
func (s *ImagesSetItem) SetImageState(v string) *ImagesSetItem {
	s.ImageState = &v
	return s
}

// SetImageType sets the ImageType field's value.
func (s *ImagesSetItem) SetImageType(v string) *ImagesSetItem {
	s.ImageType = &v
	return s
}

// SetIsPublic sets the IsPublic field's value.
func (s *ImagesSetItem) SetIsPublic(v bool) *ImagesSetItem {
	s.IsPublic = &v
	return s
}

// SetKernelId sets the KernelId field's value.
func (s *ImagesSetItem) SetKernelId(v string) *ImagesSetItem {
	s.KernelId = &v
	return s
}

// SetLaunchTime sets the LaunchTime field's value.
func (s *ImagesSetItem) SetLaunchTime(v time.Time) *ImagesSetItem {
	s.LaunchTime = &v
	return s
}

// SetName sets the Name field's value.
func (s *ImagesSetItem) SetName(v string) *ImagesSetItem {
	s.Name = &v
	return s
}

// SetNiftyContactUrl sets the NiftyContactUrl field's value.
func (s *ImagesSetItem) SetNiftyContactUrl(v string) *ImagesSetItem {
	s.NiftyContactUrl = &v
	return s
}

// SetNiftyDistributionIds sets the NiftyDistributionIds field's value.
func (s *ImagesSetItem) SetNiftyDistributionIds(v []*NiftyDistributionIdsSetItem) *ImagesSetItem {
	s.NiftyDistributionIds = v
	return s
}

// SetNiftyImageSize sets the NiftyImageSize field's value.
func (s *ImagesSetItem) SetNiftyImageSize(v int64) *ImagesSetItem {
	s.NiftyImageSize = &v
	return s
}

// SetNiftyIsAllowedDistribution sets the NiftyIsAllowedDistribution field's value.
func (s *ImagesSetItem) SetNiftyIsAllowedDistribution(v bool) *ImagesSetItem {
	s.NiftyIsAllowedDistribution = &v
	return s
}

// SetPlacement sets the Placement field's value.
func (s *ImagesSetItem) SetPlacement(v *Placement) *ImagesSetItem {
	s.Placement = v
	return s
}

// SetPlatform sets the Platform field's value.
func (s *ImagesSetItem) SetPlatform(v string) *ImagesSetItem {
	s.Platform = &v
	return s
}

// SetProductCodes sets the ProductCodes field's value.
func (s *ImagesSetItem) SetProductCodes(v []*ProductCodesSetItem) *ImagesSetItem {
	s.ProductCodes = v
	return s
}

// SetRamdiskId sets the RamdiskId field's value.
func (s *ImagesSetItem) SetRamdiskId(v string) *ImagesSetItem {
	s.RamdiskId = &v
	return s
}

// SetRedistributable sets the Redistributable field's value.
func (s *ImagesSetItem) SetRedistributable(v bool) *ImagesSetItem {
	s.Redistributable = &v
	return s
}

// SetRootDeviceName sets the RootDeviceName field's value.
func (s *ImagesSetItem) SetRootDeviceName(v string) *ImagesSetItem {
	s.RootDeviceName = &v
	return s
}

// SetRootDeviceType sets the RootDeviceType field's value.
func (s *ImagesSetItem) SetRootDeviceType(v string) *ImagesSetItem {
	s.RootDeviceType = &v
	return s
}

// SetStateReason sets the StateReason field's value.
func (s *ImagesSetItem) SetStateReason(v *StateReason) *ImagesSetItem {
	s.StateReason = v
	return s
}

type ImportInstance struct {
	_ struct{} `type:"structure"`

	AvailabilityZone *string `locationName:"availabilityZone" type:"string"`

	Description *string `locationName:"description" type:"string"`

	Image *Image `locationName:"image" type:"structure"`

	InstanceId *string `locationName:"instanceId" type:"string"`

	InstanceUniqueId *string `locationName:"instanceUniqueId" type:"string"`

	Platform *string `locationName:"platform" type:"string"`

	Volumes []*VolumesSetItem `locationName:"volumes" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s ImportInstance) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ImportInstance) GoString() string {
	return s.String()
}

// SetAvailabilityZone sets the AvailabilityZone field's value.
func (s *ImportInstance) SetAvailabilityZone(v string) *ImportInstance {
	s.AvailabilityZone = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *ImportInstance) SetDescription(v string) *ImportInstance {
	s.Description = &v
	return s
}

// SetImage sets the Image field's value.
func (s *ImportInstance) SetImage(v *Image) *ImportInstance {
	s.Image = v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *ImportInstance) SetInstanceId(v string) *ImportInstance {
	s.InstanceId = &v
	return s
}

// SetInstanceUniqueId sets the InstanceUniqueId field's value.
func (s *ImportInstance) SetInstanceUniqueId(v string) *ImportInstance {
	s.InstanceUniqueId = &v
	return s
}

// SetPlatform sets the Platform field's value.
func (s *ImportInstance) SetPlatform(v string) *ImportInstance {
	s.Platform = &v
	return s
}

// SetVolumes sets the Volumes field's value.
func (s *ImportInstance) SetVolumes(v []*VolumesSetItem) *ImportInstance {
	s.Volumes = v
	return s
}

type ImportInstanceDiskMeasuredRate struct {
	_ struct{} `type:"structure"`

	Charge *int64 `locationName:"charge" type:"integer"`

	Type *string `locationName:"type" type:"string"`

	Unit *string `locationName:"unit" type:"string"`

	Value *int64 `locationName:"value" type:"integer"`
}

// String returns the string representation
func (s ImportInstanceDiskMeasuredRate) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ImportInstanceDiskMeasuredRate) GoString() string {
	return s.String()
}

// SetCharge sets the Charge field's value.
func (s *ImportInstanceDiskMeasuredRate) SetCharge(v int64) *ImportInstanceDiskMeasuredRate {
	s.Charge = &v
	return s
}

// SetType sets the Type field's value.
func (s *ImportInstanceDiskMeasuredRate) SetType(v string) *ImportInstanceDiskMeasuredRate {
	s.Type = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *ImportInstanceDiskMeasuredRate) SetUnit(v string) *ImportInstanceDiskMeasuredRate {
	s.Unit = &v
	return s
}

// SetValue sets the Value field's value.
func (s *ImportInstanceDiskMeasuredRate) SetValue(v int64) *ImportInstanceDiskMeasuredRate {
	s.Value = &v
	return s
}

type ImportInstanceDiskMonthlyRate struct {
	_ struct{} `type:"structure"`

	Charge *int64 `locationName:"charge" type:"integer"`

	Type *string `locationName:"type" type:"string"`

	Unit *string `locationName:"unit" type:"string"`

	Value *int64 `locationName:"value" type:"integer"`
}

// String returns the string representation
func (s ImportInstanceDiskMonthlyRate) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ImportInstanceDiskMonthlyRate) GoString() string {
	return s.String()
}

// SetCharge sets the Charge field's value.
func (s *ImportInstanceDiskMonthlyRate) SetCharge(v int64) *ImportInstanceDiskMonthlyRate {
	s.Charge = &v
	return s
}

// SetType sets the Type field's value.
func (s *ImportInstanceDiskMonthlyRate) SetType(v string) *ImportInstanceDiskMonthlyRate {
	s.Type = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *ImportInstanceDiskMonthlyRate) SetUnit(v string) *ImportInstanceDiskMonthlyRate {
	s.Unit = &v
	return s
}

// SetValue sets the Value field's value.
func (s *ImportInstanceDiskMonthlyRate) SetValue(v int64) *ImportInstanceDiskMonthlyRate {
	s.Value = &v
	return s
}

type ImportInstanceInput struct {
	_ struct{} `type:"structure"`

	AccountingType *string `locationName:"AccountingType" type:"string"`

	Description *string `locationName:"Description" type:"string"`

	InstanceId *string `locationName:"InstanceId" type:"string"`

	InstanceType *string `locationName:"InstanceType" type:"string"`

	IpType *string `locationName:"IpType" type:"string"`

	NetworkInterface []*RequestNetworkInterfaceStruct `locationName:"NetworkInterface" type:"list"`

	Ovf *string `locationName:"Ovf" type:"string"`

	Placement *RequestPlacementStruct `locationName:"Placement" type:"structure"`

	PublicIp *string `locationName:"PublicIp" type:"string"`

	SecurityGroup []*string `locationName:"SecurityGroup" type:"list"`
}

// String returns the string representation
func (s ImportInstanceInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ImportInstanceInput) GoString() string {
	return s.String()
}

// SetAccountingType sets the AccountingType field's value.
func (s *ImportInstanceInput) SetAccountingType(v string) *ImportInstanceInput {
	s.AccountingType = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *ImportInstanceInput) SetDescription(v string) *ImportInstanceInput {
	s.Description = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *ImportInstanceInput) SetInstanceId(v string) *ImportInstanceInput {
	s.InstanceId = &v
	return s
}

// SetInstanceType sets the InstanceType field's value.
func (s *ImportInstanceInput) SetInstanceType(v string) *ImportInstanceInput {
	s.InstanceType = &v
	return s
}

// SetIpType sets the IpType field's value.
func (s *ImportInstanceInput) SetIpType(v string) *ImportInstanceInput {
	s.IpType = &v
	return s
}

// SetNetworkInterface sets the NetworkInterface field's value.
func (s *ImportInstanceInput) SetNetworkInterface(v []*RequestNetworkInterfaceStruct) *ImportInstanceInput {
	s.NetworkInterface = v
	return s
}

// SetOvf sets the Ovf field's value.
func (s *ImportInstanceInput) SetOvf(v string) *ImportInstanceInput {
	s.Ovf = &v
	return s
}

// SetPlacement sets the Placement field's value.
func (s *ImportInstanceInput) SetPlacement(v *RequestPlacementStruct) *ImportInstanceInput {
	s.Placement = v
	return s
}

// SetPublicIp sets the PublicIp field's value.
func (s *ImportInstanceInput) SetPublicIp(v string) *ImportInstanceInput {
	s.PublicIp = &v
	return s
}

// SetSecurityGroup sets the SecurityGroup field's value.
func (s *ImportInstanceInput) SetSecurityGroup(v []*string) *ImportInstanceInput {
	s.SecurityGroup = v
	return s
}

type ImportInstanceOutput struct {
	_ struct{} `type:"structure"`

	ConversionTask *ConversionTask `locationName:"conversionTask" type:"structure"`
}

// String returns the string representation
func (s ImportInstanceOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ImportInstanceOutput) GoString() string {
	return s.String()
}

// SetConversionTask sets the ConversionTask field's value.
func (s *ImportInstanceOutput) SetConversionTask(v *ConversionTask) *ImportInstanceOutput {
	s.ConversionTask = v
	return s
}

type ImportKeyPairInput struct {
	_ struct{} `type:"structure"`

	Description *string `locationName:"Description" type:"string"`

	KeyName *string `locationName:"KeyName" type:"string"`

	PublicKeyMaterial *string `locationName:"PublicKeyMaterial" type:"string"`
}

// String returns the string representation
func (s ImportKeyPairInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ImportKeyPairInput) GoString() string {
	return s.String()
}

// SetDescription sets the Description field's value.
func (s *ImportKeyPairInput) SetDescription(v string) *ImportKeyPairInput {
	s.Description = &v
	return s
}

// SetKeyName sets the KeyName field's value.
func (s *ImportKeyPairInput) SetKeyName(v string) *ImportKeyPairInput {
	s.KeyName = &v
	return s
}

// SetPublicKeyMaterial sets the PublicKeyMaterial field's value.
func (s *ImportKeyPairInput) SetPublicKeyMaterial(v string) *ImportKeyPairInput {
	s.PublicKeyMaterial = &v
	return s
}

type ImportKeyPairOutput struct {
	_ struct{} `type:"structure"`

	KeyFingerprint *string `locationName:"keyFingerprint" type:"string"`

	KeyName *string `locationName:"keyName" type:"string"`

	RequestId *string `locationName:"requestId" type:"string"`
}

// String returns the string representation
func (s ImportKeyPairOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ImportKeyPairOutput) GoString() string {
	return s.String()
}

// SetKeyFingerprint sets the KeyFingerprint field's value.
func (s *ImportKeyPairOutput) SetKeyFingerprint(v string) *ImportKeyPairOutput {
	s.KeyFingerprint = &v
	return s
}

// SetKeyName sets the KeyName field's value.
func (s *ImportKeyPairOutput) SetKeyName(v string) *ImportKeyPairOutput {
	s.KeyName = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *ImportKeyPairOutput) SetRequestId(v string) *ImportKeyPairOutput {
	s.RequestId = &v
	return s
}

type InboundInterface struct {
	_ struct{} `type:"structure"`

	NetworkId *string `locationName:"networkId" type:"string"`

	NetworkName *string `locationName:"networkName" type:"string"`
}

// String returns the string representation
func (s InboundInterface) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s InboundInterface) GoString() string {
	return s.String()
}

// SetNetworkId sets the NetworkId field's value.
func (s *InboundInterface) SetNetworkId(v string) *InboundInterface {
	s.NetworkId = &v
	return s
}

// SetNetworkName sets the NetworkName field's value.
func (s *InboundInterface) SetNetworkName(v string) *InboundInterface {
	s.NetworkName = &v
	return s
}

type InstanceCopy struct {
	_ struct{} `type:"structure"`

	Charge *int64 `locationName:"charge" type:"integer"`

	Type *string `locationName:"type" type:"string"`

	Unit *string `locationName:"unit" type:"string"`

	Value *int64 `locationName:"value" type:"integer"`
}

// String returns the string representation
func (s InstanceCopy) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s InstanceCopy) GoString() string {
	return s.String()
}

// SetCharge sets the Charge field's value.
func (s *InstanceCopy) SetCharge(v int64) *InstanceCopy {
	s.Charge = &v
	return s
}

// SetType sets the Type field's value.
func (s *InstanceCopy) SetType(v string) *InstanceCopy {
	s.Type = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *InstanceCopy) SetUnit(v string) *InstanceCopy {
	s.Unit = &v
	return s
}

// SetValue sets the Value field's value.
func (s *InstanceCopy) SetValue(v int64) *InstanceCopy {
	s.Value = &v
	return s
}

type InstanceInfo struct {
	_ struct{} `type:"structure"`

	DynamicIpMeasuredRate *DynamicIpMeasuredRate `locationName:"dynamicIpMeasuredRate" type:"structure"`

	DynamicIpMonthlyRate *DynamicIpMonthlyRate `locationName:"dynamicIpMonthlyRate" type:"structure"`

	InstanceMonthlyRateSet []*InstanceMonthlyRateSetItem `locationName:"instanceMonthlyRateSet" locationNameList:"item" type:"list"`

	MultiIpMonthlyRate *MultiIpMonthlyRate `locationName:"multiIpMonthlyRate" type:"structure"`

	OsMeasuredRate []*OsMeasuredRateSetItem `locationName:"osMeasuredRate" locationNameList:"item" type:"list"`

	OsMonthlyRate []*OsMonthlyRateSetItem `locationName:"osMonthlyRate" locationNameList:"item" type:"list"`

	RunningInstanceMeasuredRateSet []*RunningInstanceMeasuredRateSetItem `locationName:"runningInstanceMeasuredRateSet" locationNameList:"item" type:"list"`

	StoppedInstanceMeasuredRateSet []*StoppedInstanceMeasuredRateSetItem `locationName:"stoppedInstanceMeasuredRateSet" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s InstanceInfo) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s InstanceInfo) GoString() string {
	return s.String()
}

// SetDynamicIpMeasuredRate sets the DynamicIpMeasuredRate field's value.
func (s *InstanceInfo) SetDynamicIpMeasuredRate(v *DynamicIpMeasuredRate) *InstanceInfo {
	s.DynamicIpMeasuredRate = v
	return s
}

// SetDynamicIpMonthlyRate sets the DynamicIpMonthlyRate field's value.
func (s *InstanceInfo) SetDynamicIpMonthlyRate(v *DynamicIpMonthlyRate) *InstanceInfo {
	s.DynamicIpMonthlyRate = v
	return s
}

// SetInstanceMonthlyRateSet sets the InstanceMonthlyRateSet field's value.
func (s *InstanceInfo) SetInstanceMonthlyRateSet(v []*InstanceMonthlyRateSetItem) *InstanceInfo {
	s.InstanceMonthlyRateSet = v
	return s
}

// SetMultiIpMonthlyRate sets the MultiIpMonthlyRate field's value.
func (s *InstanceInfo) SetMultiIpMonthlyRate(v *MultiIpMonthlyRate) *InstanceInfo {
	s.MultiIpMonthlyRate = v
	return s
}

// SetOsMeasuredRate sets the OsMeasuredRate field's value.
func (s *InstanceInfo) SetOsMeasuredRate(v []*OsMeasuredRateSetItem) *InstanceInfo {
	s.OsMeasuredRate = v
	return s
}

// SetOsMonthlyRate sets the OsMonthlyRate field's value.
func (s *InstanceInfo) SetOsMonthlyRate(v []*OsMonthlyRateSetItem) *InstanceInfo {
	s.OsMonthlyRate = v
	return s
}

// SetRunningInstanceMeasuredRateSet sets the RunningInstanceMeasuredRateSet field's value.
func (s *InstanceInfo) SetRunningInstanceMeasuredRateSet(v []*RunningInstanceMeasuredRateSetItem) *InstanceInfo {
	s.RunningInstanceMeasuredRateSet = v
	return s
}

// SetStoppedInstanceMeasuredRateSet sets the StoppedInstanceMeasuredRateSet field's value.
func (s *InstanceInfo) SetStoppedInstanceMeasuredRateSet(v []*StoppedInstanceMeasuredRateSetItem) *InstanceInfo {
	s.StoppedInstanceMeasuredRateSet = v
	return s
}

type InstanceInitiatedShutdownBehavior struct {
	_ struct{} `type:"structure"`

	Value *string `locationName:"value" type:"string"`
}

// String returns the string representation
func (s InstanceInitiatedShutdownBehavior) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s InstanceInitiatedShutdownBehavior) GoString() string {
	return s.String()
}

// SetValue sets the Value field's value.
func (s *InstanceInitiatedShutdownBehavior) SetValue(v string) *InstanceInitiatedShutdownBehavior {
	s.Value = &v
	return s
}

type InstanceItemSetItem struct {
	_ struct{} `type:"structure"`

	Count *int64 `locationName:"count" type:"integer"`

	Type *string `locationName:"type" type:"string"`
}

// String returns the string representation
func (s InstanceItemSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s InstanceItemSetItem) GoString() string {
	return s.String()
}

// SetCount sets the Count field's value.
func (s *InstanceItemSetItem) SetCount(v int64) *InstanceItemSetItem {
	s.Count = &v
	return s
}

// SetType sets the Type field's value.
func (s *InstanceItemSetItem) SetType(v string) *InstanceItemSetItem {
	s.Type = &v
	return s
}

type InstanceMonthlyRateSetItem struct {
	_ struct{} `type:"structure"`

	Charge *int64 `locationName:"charge" type:"integer"`

	Type *string `locationName:"type" type:"string"`

	Unit *string `locationName:"unit" type:"string"`

	Value *int64 `locationName:"value" type:"integer"`
}

// String returns the string representation
func (s InstanceMonthlyRateSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s InstanceMonthlyRateSetItem) GoString() string {
	return s.String()
}

// SetCharge sets the Charge field's value.
func (s *InstanceMonthlyRateSetItem) SetCharge(v int64) *InstanceMonthlyRateSetItem {
	s.Charge = &v
	return s
}

// SetType sets the Type field's value.
func (s *InstanceMonthlyRateSetItem) SetType(v string) *InstanceMonthlyRateSetItem {
	s.Type = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *InstanceMonthlyRateSetItem) SetUnit(v string) *InstanceMonthlyRateSetItem {
	s.Unit = &v
	return s
}

// SetValue sets the Value field's value.
func (s *InstanceMonthlyRateSetItem) SetValue(v int64) *InstanceMonthlyRateSetItem {
	s.Value = &v
	return s
}

type InstanceSetItem struct {
	_ struct{} `type:"structure"`

	InstanceId *string `locationName:"instanceId" type:"string"`

	InstanceState *string `locationName:"instanceState" type:"string"`

	InstanceUniqueId *string `locationName:"instanceUniqueId" type:"string"`
}

// String returns the string representation
func (s InstanceSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s InstanceSetItem) GoString() string {
	return s.String()
}

// SetInstanceId sets the InstanceId field's value.
func (s *InstanceSetItem) SetInstanceId(v string) *InstanceSetItem {
	s.InstanceId = &v
	return s
}

// SetInstanceState sets the InstanceState field's value.
func (s *InstanceSetItem) SetInstanceState(v string) *InstanceSetItem {
	s.InstanceState = &v
	return s
}

// SetInstanceUniqueId sets the InstanceUniqueId field's value.
func (s *InstanceSetItem) SetInstanceUniqueId(v string) *InstanceSetItem {
	s.InstanceUniqueId = &v
	return s
}

type InstanceState struct {
	_ struct{} `type:"structure"`

	Code *int64 `locationName:"code" type:"integer"`

	Name *string `locationName:"name" type:"string"`
}

// String returns the string representation
func (s InstanceState) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s InstanceState) GoString() string {
	return s.String()
}

// SetCode sets the Code field's value.
func (s *InstanceState) SetCode(v int64) *InstanceState {
	s.Code = &v
	return s
}

// SetName sets the Name field's value.
func (s *InstanceState) SetName(v string) *InstanceState {
	s.Name = &v
	return s
}

type InstanceStatesMemberItem struct {
	_ struct{} `type:"structure"`

	Description *string `locationName:"Description" type:"string"`

	InstanceId *string `locationName:"InstanceId" type:"string"`

	InstanceUniqueId *string `locationName:"InstanceUniqueId" type:"string"`

	ReasonCode *string `locationName:"ReasonCode" type:"string"`

	State *string `locationName:"State" type:"string"`
}

// String returns the string representation
func (s InstanceStatesMemberItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s InstanceStatesMemberItem) GoString() string {
	return s.String()
}

// SetDescription sets the Description field's value.
func (s *InstanceStatesMemberItem) SetDescription(v string) *InstanceStatesMemberItem {
	s.Description = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *InstanceStatesMemberItem) SetInstanceId(v string) *InstanceStatesMemberItem {
	s.InstanceId = &v
	return s
}

// SetInstanceUniqueId sets the InstanceUniqueId field's value.
func (s *InstanceStatesMemberItem) SetInstanceUniqueId(v string) *InstanceStatesMemberItem {
	s.InstanceUniqueId = &v
	return s
}

// SetReasonCode sets the ReasonCode field's value.
func (s *InstanceStatesMemberItem) SetReasonCode(v string) *InstanceStatesMemberItem {
	s.ReasonCode = &v
	return s
}

// SetState sets the State field's value.
func (s *InstanceStatesMemberItem) SetState(v string) *InstanceStatesMemberItem {
	s.State = &v
	return s
}

type InstanceType struct {
	_ struct{} `type:"structure"`

	Value *string `locationName:"value" type:"string"`
}

// String returns the string representation
func (s InstanceType) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s InstanceType) GoString() string {
	return s.String()
}

// SetValue sets the Value field's value.
func (s *InstanceType) SetValue(v string) *InstanceType {
	s.Value = &v
	return s
}

type InstanceUniqueIdsSetItem struct {
	_ struct{} `type:"structure"`

	InstanceUniqueId *string `locationName:"instanceUniqueId" type:"string"`
}

// String returns the string representation
func (s InstanceUniqueIdsSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s InstanceUniqueIdsSetItem) GoString() string {
	return s.String()
}

// SetInstanceUniqueId sets the InstanceUniqueId field's value.
func (s *InstanceUniqueIdsSetItem) SetInstanceUniqueId(v string) *InstanceUniqueIdsSetItem {
	s.InstanceUniqueId = &v
	return s
}

type InstancesMemberItem struct {
	_ struct{} `type:"structure"`

	InstanceId *string `locationName:"InstanceId" type:"string"`

	InstanceUniqueId *string `locationName:"InstanceUniqueId" type:"string"`
}

// String returns the string representation
func (s InstancesMemberItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s InstancesMemberItem) GoString() string {
	return s.String()
}

// SetInstanceId sets the InstanceId field's value.
func (s *InstancesMemberItem) SetInstanceId(v string) *InstancesMemberItem {
	s.InstanceId = &v
	return s
}

// SetInstanceUniqueId sets the InstanceUniqueId field's value.
func (s *InstancesMemberItem) SetInstanceUniqueId(v string) *InstancesMemberItem {
	s.InstanceUniqueId = &v
	return s
}

type InstancesNetworkInterfaceSetItem struct {
	_ struct{} `type:"structure"`

	DeviceIndex *int64 `locationName:"deviceIndex" type:"integer"`

	InstanceId *string `locationName:"instanceId" type:"string"`

	InstanceUniqueId *string `locationName:"instanceUniqueId" type:"string"`

	IpAddress *string `locationName:"ipAddress" type:"string"`

	NetworkId *string `locationName:"networkId" type:"string"`
}

// String returns the string representation
func (s InstancesNetworkInterfaceSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s InstancesNetworkInterfaceSetItem) GoString() string {
	return s.String()
}

// SetDeviceIndex sets the DeviceIndex field's value.
func (s *InstancesNetworkInterfaceSetItem) SetDeviceIndex(v int64) *InstancesNetworkInterfaceSetItem {
	s.DeviceIndex = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *InstancesNetworkInterfaceSetItem) SetInstanceId(v string) *InstancesNetworkInterfaceSetItem {
	s.InstanceId = &v
	return s
}

// SetInstanceUniqueId sets the InstanceUniqueId field's value.
func (s *InstancesNetworkInterfaceSetItem) SetInstanceUniqueId(v string) *InstancesNetworkInterfaceSetItem {
	s.InstanceUniqueId = &v
	return s
}

// SetIpAddress sets the IpAddress field's value.
func (s *InstancesNetworkInterfaceSetItem) SetIpAddress(v string) *InstancesNetworkInterfaceSetItem {
	s.IpAddress = &v
	return s
}

// SetNetworkId sets the NetworkId field's value.
func (s *InstancesNetworkInterfaceSetItem) SetNetworkId(v string) *InstancesNetworkInterfaceSetItem {
	s.NetworkId = &v
	return s
}

type InstancesSetItem struct {
	_ struct{} `type:"structure"`

	AccountingType *string `locationName:"accountingType" type:"string"`

	Admin *string `locationName:"admin" type:"string"`

	AmiLaunchIndex *string `locationName:"amiLaunchIndex" type:"string"`

	Architecture *string `locationName:"architecture" type:"string"`

	Autoscaling *Autoscaling `locationName:"autoscaling" type:"structure"`

	BlockDeviceMapping []*BlockDeviceMappingSetItem `locationName:"blockDeviceMapping" locationNameList:"item" type:"list"`

	CopyInfo *string `locationName:"copyInfo" type:"string"`

	CurrentState *CurrentState `locationName:"currentState" type:"structure"`

	Description *string `locationName:"description" type:"string"`

	DeviceIndex *int64 `locationName:"deviceIndex" type:"integer"`

	DnsName *string `locationName:"dnsName" type:"string"`

	ExpireTime *time.Time `locationName:"expireTime" type:"timestamp" timestampFormat:""`

	HotAdd *string `locationName:"hotAdd" type:"string"`

	ImageId *string `locationName:"imageId" type:"string"`

	ImageName *string `locationName:"imageName" type:"string"`

	InstanceId *string `locationName:"instanceId" type:"string"`

	InstanceLifecycle *string `locationName:"instanceLifecycle" type:"string"`

	InstanceState *InstanceState `locationName:"instanceState" type:"structure"`

	InstanceType *string `locationName:"instanceType" type:"string"`

	InstanceUniqueId *string `locationName:"instanceUniqueId" type:"string"`

	IpAddress *string `locationName:"ipAddress" type:"string"`

	IpAddressV6 *string `locationName:"ipAddressV6" type:"string"`

	IpType *string `locationName:"ipType" type:"string"`

	KernelId *string `locationName:"kernelId" type:"string"`

	KeyName *string `locationName:"keyName" type:"string"`

	LaunchTime *time.Time `locationName:"launchTime" type:"timestamp" timestampFormat:""`

	Loadbalancing []*LoadbalancingSetItem `locationName:"loadbalancing" locationNameList:"item" type:"list"`

	Monitoring *Monitoring `locationName:"monitoring" type:"structure"`

	NetworkInterfaceSet []*NetworkInterfaceSetItem `locationName:"networkInterfaceSet" locationNameList:"item" type:"list"`

	NextMonthAccountingType *string `locationName:"nextMonthAccountingType" type:"string"`

	NiftyElasticLoadBalancing []*NiftyElasticLoadBalancingSetItem `locationName:"niftyElasticLoadBalancing" locationNameList:"item" type:"list"`

	NiftyPrivateIpType *string `locationName:"niftyPrivateIpType" type:"string"`

	NiftyPrivateNetworkType *string `locationName:"niftyPrivateNetworkType" type:"string"`

	NiftySnapshotting []*NiftySnapshottingSetItem `locationName:"niftySnapshotting" locationNameList:"item" type:"list"`

	Placement *Placement `locationName:"placement" type:"structure"`

	Platform *string `locationName:"platform" type:"string"`

	PreviousState *PreviousState `locationName:"previousState" type:"structure"`

	PrivateDnsName *string `locationName:"privateDnsName" type:"string"`

	PrivateIpAddress *string `locationName:"privateIpAddress" type:"string"`

	PrivateIpAddressV6 *string `locationName:"privateIpAddressV6" type:"string"`

	ProductCodes []*ProductCodesSetItem `locationName:"productCodes" locationNameList:"item" type:"list"`

	RamdiskId *string `locationName:"ramdiskId" type:"string"`

	Reason *string `locationName:"reason" type:"string"`

	RegionName *string `locationName:"regionName" type:"string"`

	RootDeviceName *string `locationName:"rootDeviceName" type:"string"`

	RootDeviceType *string `locationName:"rootDeviceType" type:"string"`

	SpotInstanceRequestId *string `locationName:"spotInstanceRequestId" type:"string"`

	StateReason *StateReason `locationName:"stateReason" type:"structure"`

	SubnetId *string `locationName:"subnetId" type:"string"`

	Tenancy *string `locationName:"tenancy" type:"string"`

	VpcId *string `locationName:"vpcId" type:"string"`
}

// String returns the string representation
func (s InstancesSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s InstancesSetItem) GoString() string {
	return s.String()
}

// SetAccountingType sets the AccountingType field's value.
func (s *InstancesSetItem) SetAccountingType(v string) *InstancesSetItem {
	s.AccountingType = &v
	return s
}

// SetAdmin sets the Admin field's value.
func (s *InstancesSetItem) SetAdmin(v string) *InstancesSetItem {
	s.Admin = &v
	return s
}

// SetAmiLaunchIndex sets the AmiLaunchIndex field's value.
func (s *InstancesSetItem) SetAmiLaunchIndex(v string) *InstancesSetItem {
	s.AmiLaunchIndex = &v
	return s
}

// SetArchitecture sets the Architecture field's value.
func (s *InstancesSetItem) SetArchitecture(v string) *InstancesSetItem {
	s.Architecture = &v
	return s
}

// SetAutoscaling sets the Autoscaling field's value.
func (s *InstancesSetItem) SetAutoscaling(v *Autoscaling) *InstancesSetItem {
	s.Autoscaling = v
	return s
}

// SetBlockDeviceMapping sets the BlockDeviceMapping field's value.
func (s *InstancesSetItem) SetBlockDeviceMapping(v []*BlockDeviceMappingSetItem) *InstancesSetItem {
	s.BlockDeviceMapping = v
	return s
}

// SetCopyInfo sets the CopyInfo field's value.
func (s *InstancesSetItem) SetCopyInfo(v string) *InstancesSetItem {
	s.CopyInfo = &v
	return s
}

// SetCurrentState sets the CurrentState field's value.
func (s *InstancesSetItem) SetCurrentState(v *CurrentState) *InstancesSetItem {
	s.CurrentState = v
	return s
}

// SetDescription sets the Description field's value.
func (s *InstancesSetItem) SetDescription(v string) *InstancesSetItem {
	s.Description = &v
	return s
}

// SetDeviceIndex sets the DeviceIndex field's value.
func (s *InstancesSetItem) SetDeviceIndex(v int64) *InstancesSetItem {
	s.DeviceIndex = &v
	return s
}

// SetDnsName sets the DnsName field's value.
func (s *InstancesSetItem) SetDnsName(v string) *InstancesSetItem {
	s.DnsName = &v
	return s
}

// SetExpireTime sets the ExpireTime field's value.
func (s *InstancesSetItem) SetExpireTime(v time.Time) *InstancesSetItem {
	s.ExpireTime = &v
	return s
}

// SetHotAdd sets the HotAdd field's value.
func (s *InstancesSetItem) SetHotAdd(v string) *InstancesSetItem {
	s.HotAdd = &v
	return s
}

// SetImageId sets the ImageId field's value.
func (s *InstancesSetItem) SetImageId(v string) *InstancesSetItem {
	s.ImageId = &v
	return s
}

// SetImageName sets the ImageName field's value.
func (s *InstancesSetItem) SetImageName(v string) *InstancesSetItem {
	s.ImageName = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *InstancesSetItem) SetInstanceId(v string) *InstancesSetItem {
	s.InstanceId = &v
	return s
}

// SetInstanceLifecycle sets the InstanceLifecycle field's value.
func (s *InstancesSetItem) SetInstanceLifecycle(v string) *InstancesSetItem {
	s.InstanceLifecycle = &v
	return s
}

// SetInstanceState sets the InstanceState field's value.
func (s *InstancesSetItem) SetInstanceState(v *InstanceState) *InstancesSetItem {
	s.InstanceState = v
	return s
}

// SetInstanceType sets the InstanceType field's value.
func (s *InstancesSetItem) SetInstanceType(v string) *InstancesSetItem {
	s.InstanceType = &v
	return s
}

// SetInstanceUniqueId sets the InstanceUniqueId field's value.
func (s *InstancesSetItem) SetInstanceUniqueId(v string) *InstancesSetItem {
	s.InstanceUniqueId = &v
	return s
}

// SetIpAddress sets the IpAddress field's value.
func (s *InstancesSetItem) SetIpAddress(v string) *InstancesSetItem {
	s.IpAddress = &v
	return s
}

// SetIpAddressV6 sets the IpAddressV6 field's value.
func (s *InstancesSetItem) SetIpAddressV6(v string) *InstancesSetItem {
	s.IpAddressV6 = &v
	return s
}

// SetIpType sets the IpType field's value.
func (s *InstancesSetItem) SetIpType(v string) *InstancesSetItem {
	s.IpType = &v
	return s
}

// SetKernelId sets the KernelId field's value.
func (s *InstancesSetItem) SetKernelId(v string) *InstancesSetItem {
	s.KernelId = &v
	return s
}

// SetKeyName sets the KeyName field's value.
func (s *InstancesSetItem) SetKeyName(v string) *InstancesSetItem {
	s.KeyName = &v
	return s
}

// SetLaunchTime sets the LaunchTime field's value.
func (s *InstancesSetItem) SetLaunchTime(v time.Time) *InstancesSetItem {
	s.LaunchTime = &v
	return s
}

// SetLoadbalancing sets the Loadbalancing field's value.
func (s *InstancesSetItem) SetLoadbalancing(v []*LoadbalancingSetItem) *InstancesSetItem {
	s.Loadbalancing = v
	return s
}

// SetMonitoring sets the Monitoring field's value.
func (s *InstancesSetItem) SetMonitoring(v *Monitoring) *InstancesSetItem {
	s.Monitoring = v
	return s
}

// SetNetworkInterfaceSet sets the NetworkInterfaceSet field's value.
func (s *InstancesSetItem) SetNetworkInterfaceSet(v []*NetworkInterfaceSetItem) *InstancesSetItem {
	s.NetworkInterfaceSet = v
	return s
}

// SetNextMonthAccountingType sets the NextMonthAccountingType field's value.
func (s *InstancesSetItem) SetNextMonthAccountingType(v string) *InstancesSetItem {
	s.NextMonthAccountingType = &v
	return s
}

// SetNiftyElasticLoadBalancing sets the NiftyElasticLoadBalancing field's value.
func (s *InstancesSetItem) SetNiftyElasticLoadBalancing(v []*NiftyElasticLoadBalancingSetItem) *InstancesSetItem {
	s.NiftyElasticLoadBalancing = v
	return s
}

// SetNiftyPrivateIpType sets the NiftyPrivateIpType field's value.
func (s *InstancesSetItem) SetNiftyPrivateIpType(v string) *InstancesSetItem {
	s.NiftyPrivateIpType = &v
	return s
}

// SetNiftyPrivateNetworkType sets the NiftyPrivateNetworkType field's value.
func (s *InstancesSetItem) SetNiftyPrivateNetworkType(v string) *InstancesSetItem {
	s.NiftyPrivateNetworkType = &v
	return s
}

// SetNiftySnapshotting sets the NiftySnapshotting field's value.
func (s *InstancesSetItem) SetNiftySnapshotting(v []*NiftySnapshottingSetItem) *InstancesSetItem {
	s.NiftySnapshotting = v
	return s
}

// SetPlacement sets the Placement field's value.
func (s *InstancesSetItem) SetPlacement(v *Placement) *InstancesSetItem {
	s.Placement = v
	return s
}

// SetPlatform sets the Platform field's value.
func (s *InstancesSetItem) SetPlatform(v string) *InstancesSetItem {
	s.Platform = &v
	return s
}

// SetPreviousState sets the PreviousState field's value.
func (s *InstancesSetItem) SetPreviousState(v *PreviousState) *InstancesSetItem {
	s.PreviousState = v
	return s
}

// SetPrivateDnsName sets the PrivateDnsName field's value.
func (s *InstancesSetItem) SetPrivateDnsName(v string) *InstancesSetItem {
	s.PrivateDnsName = &v
	return s
}

// SetPrivateIpAddress sets the PrivateIpAddress field's value.
func (s *InstancesSetItem) SetPrivateIpAddress(v string) *InstancesSetItem {
	s.PrivateIpAddress = &v
	return s
}

// SetPrivateIpAddressV6 sets the PrivateIpAddressV6 field's value.
func (s *InstancesSetItem) SetPrivateIpAddressV6(v string) *InstancesSetItem {
	s.PrivateIpAddressV6 = &v
	return s
}

// SetProductCodes sets the ProductCodes field's value.
func (s *InstancesSetItem) SetProductCodes(v []*ProductCodesSetItem) *InstancesSetItem {
	s.ProductCodes = v
	return s
}

// SetRamdiskId sets the RamdiskId field's value.
func (s *InstancesSetItem) SetRamdiskId(v string) *InstancesSetItem {
	s.RamdiskId = &v
	return s
}

// SetReason sets the Reason field's value.
func (s *InstancesSetItem) SetReason(v string) *InstancesSetItem {
	s.Reason = &v
	return s
}

// SetRegionName sets the RegionName field's value.
func (s *InstancesSetItem) SetRegionName(v string) *InstancesSetItem {
	s.RegionName = &v
	return s
}

// SetRootDeviceName sets the RootDeviceName field's value.
func (s *InstancesSetItem) SetRootDeviceName(v string) *InstancesSetItem {
	s.RootDeviceName = &v
	return s
}

// SetRootDeviceType sets the RootDeviceType field's value.
func (s *InstancesSetItem) SetRootDeviceType(v string) *InstancesSetItem {
	s.RootDeviceType = &v
	return s
}

// SetSpotInstanceRequestId sets the SpotInstanceRequestId field's value.
func (s *InstancesSetItem) SetSpotInstanceRequestId(v string) *InstancesSetItem {
	s.SpotInstanceRequestId = &v
	return s
}

// SetStateReason sets the StateReason field's value.
func (s *InstancesSetItem) SetStateReason(v *StateReason) *InstancesSetItem {
	s.StateReason = v
	return s
}

// SetSubnetId sets the SubnetId field's value.
func (s *InstancesSetItem) SetSubnetId(v string) *InstancesSetItem {
	s.SubnetId = &v
	return s
}

// SetTenancy sets the Tenancy field's value.
func (s *InstancesSetItem) SetTenancy(v string) *InstancesSetItem {
	s.Tenancy = &v
	return s
}

// SetVpcId sets the VpcId field's value.
func (s *InstancesSetItem) SetVpcId(v string) *InstancesSetItem {
	s.VpcId = &v
	return s
}

type InternetVpnInfo struct {
	_ struct{} `type:"structure"`

	InternetVpnInitial *InternetVpnInitial `locationName:"internetVpnInitial" type:"structure"`

	InternetVpnMonthlyRateSet []*InternetVpnMonthlyRateSetItem `locationName:"internetVpnMonthlyRateSet" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s InternetVpnInfo) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s InternetVpnInfo) GoString() string {
	return s.String()
}

// SetInternetVpnInitial sets the InternetVpnInitial field's value.
func (s *InternetVpnInfo) SetInternetVpnInitial(v *InternetVpnInitial) *InternetVpnInfo {
	s.InternetVpnInitial = v
	return s
}

// SetInternetVpnMonthlyRateSet sets the InternetVpnMonthlyRateSet field's value.
func (s *InternetVpnInfo) SetInternetVpnMonthlyRateSet(v []*InternetVpnMonthlyRateSetItem) *InternetVpnInfo {
	s.InternetVpnMonthlyRateSet = v
	return s
}

type InternetVpnInitial struct {
	_ struct{} `type:"structure"`

	Charge *int64 `locationName:"charge" type:"integer"`

	Value *int64 `locationName:"value" type:"integer"`
}

// String returns the string representation
func (s InternetVpnInitial) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s InternetVpnInitial) GoString() string {
	return s.String()
}

// SetCharge sets the Charge field's value.
func (s *InternetVpnInitial) SetCharge(v int64) *InternetVpnInitial {
	s.Charge = &v
	return s
}

// SetValue sets the Value field's value.
func (s *InternetVpnInitial) SetValue(v int64) *InternetVpnInitial {
	s.Value = &v
	return s
}

type InternetVpnMonthlyRateSetItem struct {
	_ struct{} `type:"structure"`

	Charge *int64 `locationName:"charge" type:"integer"`

	Type *string `locationName:"type" type:"string"`

	Unit *string `locationName:"unit" type:"string"`

	Value *int64 `locationName:"value" type:"integer"`
}

// String returns the string representation
func (s InternetVpnMonthlyRateSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s InternetVpnMonthlyRateSetItem) GoString() string {
	return s.String()
}

// SetCharge sets the Charge field's value.
func (s *InternetVpnMonthlyRateSetItem) SetCharge(v int64) *InternetVpnMonthlyRateSetItem {
	s.Charge = &v
	return s
}

// SetType sets the Type field's value.
func (s *InternetVpnMonthlyRateSetItem) SetType(v string) *InternetVpnMonthlyRateSetItem {
	s.Type = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *InternetVpnMonthlyRateSetItem) SetUnit(v string) *InternetVpnMonthlyRateSetItem {
	s.Unit = &v
	return s
}

// SetValue sets the Value field's value.
func (s *InternetVpnMonthlyRateSetItem) SetValue(v int64) *InternetVpnMonthlyRateSetItem {
	s.Value = &v
	return s
}

type IpAddressPoolSetItem struct {
	_ struct{} `type:"structure"`

	Description *string `locationName:"description" type:"string"`

	StartIpAddress *string `locationName:"startIpAddress" type:"string"`

	StopIpAddress *string `locationName:"stopIpAddress" type:"string"`
}

// String returns the string representation
func (s IpAddressPoolSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s IpAddressPoolSetItem) GoString() string {
	return s.String()
}

// SetDescription sets the Description field's value.
func (s *IpAddressPoolSetItem) SetDescription(v string) *IpAddressPoolSetItem {
	s.Description = &v
	return s
}

// SetStartIpAddress sets the StartIpAddress field's value.
func (s *IpAddressPoolSetItem) SetStartIpAddress(v string) *IpAddressPoolSetItem {
	s.StartIpAddress = &v
	return s
}

// SetStopIpAddress sets the StopIpAddress field's value.
func (s *IpAddressPoolSetItem) SetStopIpAddress(v string) *IpAddressPoolSetItem {
	s.StopIpAddress = &v
	return s
}

type IpAddressPoolsSetItem struct {
	_ struct{} `type:"structure"`

	Description *string `locationName:"description" type:"string"`

	StartIpAddress *string `locationName:"startIpAddress" type:"string"`

	StopIpAddress *string `locationName:"stopIpAddress" type:"string"`
}

// String returns the string representation
func (s IpAddressPoolsSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s IpAddressPoolsSetItem) GoString() string {
	return s.String()
}

// SetDescription sets the Description field's value.
func (s *IpAddressPoolsSetItem) SetDescription(v string) *IpAddressPoolsSetItem {
	s.Description = &v
	return s
}

// SetStartIpAddress sets the StartIpAddress field's value.
func (s *IpAddressPoolsSetItem) SetStartIpAddress(v string) *IpAddressPoolsSetItem {
	s.StartIpAddress = &v
	return s
}

// SetStopIpAddress sets the StopIpAddress field's value.
func (s *IpAddressPoolsSetItem) SetStopIpAddress(v string) *IpAddressPoolsSetItem {
	s.StopIpAddress = &v
	return s
}

type IpPermissionsSetItem struct {
	_ struct{} `type:"structure"`

	AddDatetime *time.Time `locationName:"addDatetime" type:"timestamp" timestampFormat:""`

	Description *string `locationName:"description" type:"string"`

	FromPort *int64 `locationName:"fromPort" type:"integer"`

	Groups []*GroupsSetItem `locationName:"groups" locationNameList:"item" type:"list"`

	InOut *string `locationName:"inOut" type:"string"`

	IpProtocol *string `locationName:"ipProtocol" type:"string"`

	IpRanges []*IpRangesSetItem `locationName:"ipRanges" locationNameList:"item" type:"list"`

	ToPort *int64 `locationName:"toPort" type:"integer"`
}

// String returns the string representation
func (s IpPermissionsSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s IpPermissionsSetItem) GoString() string {
	return s.String()
}

// SetAddDatetime sets the AddDatetime field's value.
func (s *IpPermissionsSetItem) SetAddDatetime(v time.Time) *IpPermissionsSetItem {
	s.AddDatetime = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *IpPermissionsSetItem) SetDescription(v string) *IpPermissionsSetItem {
	s.Description = &v
	return s
}

// SetFromPort sets the FromPort field's value.
func (s *IpPermissionsSetItem) SetFromPort(v int64) *IpPermissionsSetItem {
	s.FromPort = &v
	return s
}

// SetGroups sets the Groups field's value.
func (s *IpPermissionsSetItem) SetGroups(v []*GroupsSetItem) *IpPermissionsSetItem {
	s.Groups = v
	return s
}

// SetInOut sets the InOut field's value.
func (s *IpPermissionsSetItem) SetInOut(v string) *IpPermissionsSetItem {
	s.InOut = &v
	return s
}

// SetIpProtocol sets the IpProtocol field's value.
func (s *IpPermissionsSetItem) SetIpProtocol(v string) *IpPermissionsSetItem {
	s.IpProtocol = &v
	return s
}

// SetIpRanges sets the IpRanges field's value.
func (s *IpPermissionsSetItem) SetIpRanges(v []*IpRangesSetItem) *IpPermissionsSetItem {
	s.IpRanges = v
	return s
}

// SetToPort sets the ToPort field's value.
func (s *IpPermissionsSetItem) SetToPort(v int64) *IpPermissionsSetItem {
	s.ToPort = &v
	return s
}

type IpRangesSetItem struct {
	_ struct{} `type:"structure"`

	CidrIp *string `locationName:"cidrIp" type:"string"`
}

// String returns the string representation
func (s IpRangesSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s IpRangesSetItem) GoString() string {
	return s.String()
}

// SetCidrIp sets the CidrIp field's value.
func (s *IpRangesSetItem) SetCidrIp(v string) *IpRangesSetItem {
	s.CidrIp = &v
	return s
}

type IpType struct {
	_ struct{} `type:"structure"`

	Value *string `locationName:"value" type:"string"`
}

// String returns the string representation
func (s IpType) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s IpType) GoString() string {
	return s.String()
}

// SetValue sets the Value field's value.
func (s *IpType) SetValue(v string) *IpType {
	s.Value = &v
	return s
}

type KeepImageSetItem struct {
	_ struct{} `type:"structure"`

	Charge *int64 `locationName:"charge" type:"integer"`

	Type *string `locationName:"type" type:"string"`

	Unit *string `locationName:"unit" type:"string"`

	Value *int64 `locationName:"value" type:"integer"`
}

// String returns the string representation
func (s KeepImageSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s KeepImageSetItem) GoString() string {
	return s.String()
}

// SetCharge sets the Charge field's value.
func (s *KeepImageSetItem) SetCharge(v int64) *KeepImageSetItem {
	s.Charge = &v
	return s
}

// SetType sets the Type field's value.
func (s *KeepImageSetItem) SetType(v string) *KeepImageSetItem {
	s.Type = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *KeepImageSetItem) SetUnit(v string) *KeepImageSetItem {
	s.Unit = &v
	return s
}

// SetValue sets the Value field's value.
func (s *KeepImageSetItem) SetValue(v int64) *KeepImageSetItem {
	s.Value = &v
	return s
}

type Kernel struct {
	_ struct{} `type:"structure"`

	Value *string `locationName:"value" type:"string"`
}

// String returns the string representation
func (s Kernel) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s Kernel) GoString() string {
	return s.String()
}

// SetValue sets the Value field's value.
func (s *Kernel) SetValue(v string) *Kernel {
	s.Value = &v
	return s
}

type KeyLength struct {
	_ struct{} `type:"structure"`

	Value *string `locationName:"value" type:"string"`
}

// String returns the string representation
func (s KeyLength) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s KeyLength) GoString() string {
	return s.String()
}

// SetValue sets the Value field's value.
func (s *KeyLength) SetValue(v string) *KeyLength {
	s.Value = &v
	return s
}

type KeySetItem struct {
	_ struct{} `type:"structure"`

	Description *string `locationName:"description" type:"string"`

	InstancesSet []*InstancesSetItem `locationName:"instancesSet" locationNameList:"item" type:"list"`

	KeyFingerprint *string `locationName:"keyFingerprint" type:"string"`

	KeyName *string `locationName:"keyName" type:"string"`
}

// String returns the string representation
func (s KeySetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s KeySetItem) GoString() string {
	return s.String()
}

// SetDescription sets the Description field's value.
func (s *KeySetItem) SetDescription(v string) *KeySetItem {
	s.Description = &v
	return s
}

// SetInstancesSet sets the InstancesSet field's value.
func (s *KeySetItem) SetInstancesSet(v []*InstancesSetItem) *KeySetItem {
	s.InstancesSet = v
	return s
}

// SetKeyFingerprint sets the KeyFingerprint field's value.
func (s *KeySetItem) SetKeyFingerprint(v string) *KeySetItem {
	s.KeyFingerprint = &v
	return s
}

// SetKeyName sets the KeyName field's value.
func (s *KeySetItem) SetKeyName(v string) *KeySetItem {
	s.KeyName = &v
	return s
}

type LBCookieStickinessPoliciesMemberItem struct {
	_ struct{} `type:"structure"`

	CookieExpirationPeriod *string `locationName:"CookieExpirationPeriod" type:"string"`

	PolicyName *string `locationName:"PolicyName" type:"string"`
}

// String returns the string representation
func (s LBCookieStickinessPoliciesMemberItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s LBCookieStickinessPoliciesMemberItem) GoString() string {
	return s.String()
}

// SetCookieExpirationPeriod sets the CookieExpirationPeriod field's value.
func (s *LBCookieStickinessPoliciesMemberItem) SetCookieExpirationPeriod(v string) *LBCookieStickinessPoliciesMemberItem {
	s.CookieExpirationPeriod = &v
	return s
}

// SetPolicyName sets the PolicyName field's value.
func (s *LBCookieStickinessPoliciesMemberItem) SetPolicyName(v string) *LBCookieStickinessPoliciesMemberItem {
	s.PolicyName = &v
	return s
}

type LicenseInfo struct {
	_ struct{} `type:"structure"`

	LicenseMonthlyRateSet []*LicenseMonthlyRateSetItem `locationName:"licenseMonthlyRateSet" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s LicenseInfo) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s LicenseInfo) GoString() string {
	return s.String()
}

// SetLicenseMonthlyRateSet sets the LicenseMonthlyRateSet field's value.
func (s *LicenseInfo) SetLicenseMonthlyRateSet(v []*LicenseMonthlyRateSetItem) *LicenseInfo {
	s.LicenseMonthlyRateSet = v
	return s
}

type LicenseMonthlyRateSetItem struct {
	_ struct{} `type:"structure"`

	Charge *int64 `locationName:"charge" type:"integer"`

	Type *string `locationName:"type" type:"string"`

	Unit *string `locationName:"unit" type:"string"`

	Value *int64 `locationName:"value" type:"integer"`
}

// String returns the string representation
func (s LicenseMonthlyRateSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s LicenseMonthlyRateSetItem) GoString() string {
	return s.String()
}

// SetCharge sets the Charge field's value.
func (s *LicenseMonthlyRateSetItem) SetCharge(v int64) *LicenseMonthlyRateSetItem {
	s.Charge = &v
	return s
}

// SetType sets the Type field's value.
func (s *LicenseMonthlyRateSetItem) SetType(v string) *LicenseMonthlyRateSetItem {
	s.Type = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *LicenseMonthlyRateSetItem) SetUnit(v string) *LicenseMonthlyRateSetItem {
	s.Unit = &v
	return s
}

// SetValue sets the Value field's value.
func (s *LicenseMonthlyRateSetItem) SetValue(v int64) *LicenseMonthlyRateSetItem {
	s.Value = &v
	return s
}

type ListenInterface struct {
	_ struct{} `type:"structure"`

	NetworkId *string `locationName:"networkId" type:"string"`

	NetworkName *string `locationName:"networkName" type:"string"`
}

// String returns the string representation
func (s ListenInterface) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListenInterface) GoString() string {
	return s.String()
}

// SetNetworkId sets the NetworkId field's value.
func (s *ListenInterface) SetNetworkId(v string) *ListenInterface {
	s.NetworkId = &v
	return s
}

// SetNetworkName sets the NetworkName field's value.
func (s *ListenInterface) SetNetworkName(v string) *ListenInterface {
	s.NetworkName = &v
	return s
}

type Listener struct {
	_ struct{} `type:"structure"`

	BalancingType *int64 `locationName:"BalancingType" type:"integer"`

	Description *string `locationName:"Description" type:"string"`

	ElasticLoadBalancerPort *int64 `locationName:"ElasticLoadBalancerPort" type:"integer"`

	HealthCheck *HealthCheck `locationName:"HealthCheck" type:"structure"`

	InstancePort *int64 `locationName:"InstancePort" type:"integer"`

	Instances []*InstancesMemberItem `locationName:"Instances" locationNameList:"member" type:"list"`

	LoadBalancerPort *int64 `locationName:"LoadBalancerPort" type:"integer"`

	Protocol *string `locationName:"Protocol" type:"string"`

	SSLCertificateId *string `locationName:"SSLCertificateId" type:"string"`

	SessionStickinessPolicy *SessionStickinessPolicy `locationName:"SessionStickinessPolicy" type:"structure"`

	SorryPage *SorryPage `locationName:"SorryPage" type:"structure"`
}

// String returns the string representation
func (s Listener) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s Listener) GoString() string {
	return s.String()
}

// SetBalancingType sets the BalancingType field's value.
func (s *Listener) SetBalancingType(v int64) *Listener {
	s.BalancingType = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *Listener) SetDescription(v string) *Listener {
	s.Description = &v
	return s
}

// SetElasticLoadBalancerPort sets the ElasticLoadBalancerPort field's value.
func (s *Listener) SetElasticLoadBalancerPort(v int64) *Listener {
	s.ElasticLoadBalancerPort = &v
	return s
}

// SetHealthCheck sets the HealthCheck field's value.
func (s *Listener) SetHealthCheck(v *HealthCheck) *Listener {
	s.HealthCheck = v
	return s
}

// SetInstancePort sets the InstancePort field's value.
func (s *Listener) SetInstancePort(v int64) *Listener {
	s.InstancePort = &v
	return s
}

// SetInstances sets the Instances field's value.
func (s *Listener) SetInstances(v []*InstancesMemberItem) *Listener {
	s.Instances = v
	return s
}

// SetLoadBalancerPort sets the LoadBalancerPort field's value.
func (s *Listener) SetLoadBalancerPort(v int64) *Listener {
	s.LoadBalancerPort = &v
	return s
}

// SetProtocol sets the Protocol field's value.
func (s *Listener) SetProtocol(v string) *Listener {
	s.Protocol = &v
	return s
}

// SetSSLCertificateId sets the SSLCertificateId field's value.
func (s *Listener) SetSSLCertificateId(v string) *Listener {
	s.SSLCertificateId = &v
	return s
}

// SetSessionStickinessPolicy sets the SessionStickinessPolicy field's value.
func (s *Listener) SetSessionStickinessPolicy(v *SessionStickinessPolicy) *Listener {
	s.SessionStickinessPolicy = v
	return s
}

// SetSorryPage sets the SorryPage field's value.
func (s *Listener) SetSorryPage(v *SorryPage) *Listener {
	s.SorryPage = v
	return s
}

type ListenerDescriptionsMemberItem struct {
	_ struct{} `type:"structure"`

	Listener *Listener `locationName:"Listener" type:"structure"`

	PolicyNames []*string `locationName:"PolicyNames" locationNameList:"member" type:"list"`
}

// String returns the string representation
func (s ListenerDescriptionsMemberItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListenerDescriptionsMemberItem) GoString() string {
	return s.String()
}

// SetListener sets the Listener field's value.
func (s *ListenerDescriptionsMemberItem) SetListener(v *Listener) *ListenerDescriptionsMemberItem {
	s.Listener = v
	return s
}

// SetPolicyNames sets the PolicyNames field's value.
func (s *ListenerDescriptionsMemberItem) SetPolicyNames(v []*string) *ListenerDescriptionsMemberItem {
	s.PolicyNames = v
	return s
}

type ListenersMemberItem struct {
	_ struct{} `type:"structure"`

	BalancingType *int64 `locationName:"BalancingType" type:"integer"`

	InstancePort *int64 `locationName:"InstancePort" type:"integer"`

	Listener *Listener `locationName:"Listener" type:"structure"`

	LoadBalancerPort *int64 `locationName:"LoadBalancerPort" type:"integer"`

	Protocol *string `locationName:"Protocol" type:"string"`
}

// String returns the string representation
func (s ListenersMemberItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListenersMemberItem) GoString() string {
	return s.String()
}

// SetBalancingType sets the BalancingType field's value.
func (s *ListenersMemberItem) SetBalancingType(v int64) *ListenersMemberItem {
	s.BalancingType = &v
	return s
}

// SetInstancePort sets the InstancePort field's value.
func (s *ListenersMemberItem) SetInstancePort(v int64) *ListenersMemberItem {
	s.InstancePort = &v
	return s
}

// SetListener sets the Listener field's value.
func (s *ListenersMemberItem) SetListener(v *Listener) *ListenersMemberItem {
	s.Listener = v
	return s
}

// SetLoadBalancerPort sets the LoadBalancerPort field's value.
func (s *ListenersMemberItem) SetLoadBalancerPort(v int64) *ListenersMemberItem {
	s.LoadBalancerPort = &v
	return s
}

// SetProtocol sets the Protocol field's value.
func (s *ListenersMemberItem) SetProtocol(v string) *ListenersMemberItem {
	s.Protocol = &v
	return s
}

type LoadBalancerDescriptionsMemberItem struct {
	_ struct{} `type:"structure"`

	AccountingType *string `locationName:"AccountingType" type:"string"`

	AvailabilityZones []*string `locationName:"AvailabilityZones" locationNameList:"member" type:"list"`

	CreatedTime *time.Time `locationName:"CreatedTime" type:"timestamp" timestampFormat:""`

	DNSName *string `locationName:"DNSName" type:"string"`

	Description *string `locationName:"Description" type:"string"`

	Filter *Filter `locationName:"Filter" type:"structure"`

	HealthCheck *HealthCheck `locationName:"HealthCheck" type:"structure"`

	Instances []*InstancesMemberItem `locationName:"Instances" locationNameList:"member" type:"list"`

	ListenerDescriptions []*ListenerDescriptionsMemberItem `locationName:"ListenerDescriptions" locationNameList:"member" type:"list"`

	LoadBalancerName *string `locationName:"LoadBalancerName" type:"string"`

	NetworkVolume *int64 `locationName:"NetworkVolume" type:"integer"`

	NextMonthAccountingType *string `locationName:"NextMonthAccountingType" type:"string"`

	Option *Option `locationName:"Option" type:"structure"`

	Policies *Policies `locationName:"Policies" type:"structure"`
}

// String returns the string representation
func (s LoadBalancerDescriptionsMemberItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s LoadBalancerDescriptionsMemberItem) GoString() string {
	return s.String()
}

// SetAccountingType sets the AccountingType field's value.
func (s *LoadBalancerDescriptionsMemberItem) SetAccountingType(v string) *LoadBalancerDescriptionsMemberItem {
	s.AccountingType = &v
	return s
}

// SetAvailabilityZones sets the AvailabilityZones field's value.
func (s *LoadBalancerDescriptionsMemberItem) SetAvailabilityZones(v []*string) *LoadBalancerDescriptionsMemberItem {
	s.AvailabilityZones = v
	return s
}

// SetCreatedTime sets the CreatedTime field's value.
func (s *LoadBalancerDescriptionsMemberItem) SetCreatedTime(v time.Time) *LoadBalancerDescriptionsMemberItem {
	s.CreatedTime = &v
	return s
}

// SetDNSName sets the DNSName field's value.
func (s *LoadBalancerDescriptionsMemberItem) SetDNSName(v string) *LoadBalancerDescriptionsMemberItem {
	s.DNSName = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *LoadBalancerDescriptionsMemberItem) SetDescription(v string) *LoadBalancerDescriptionsMemberItem {
	s.Description = &v
	return s
}

// SetFilter sets the Filter field's value.
func (s *LoadBalancerDescriptionsMemberItem) SetFilter(v *Filter) *LoadBalancerDescriptionsMemberItem {
	s.Filter = v
	return s
}

// SetHealthCheck sets the HealthCheck field's value.
func (s *LoadBalancerDescriptionsMemberItem) SetHealthCheck(v *HealthCheck) *LoadBalancerDescriptionsMemberItem {
	s.HealthCheck = v
	return s
}

// SetInstances sets the Instances field's value.
func (s *LoadBalancerDescriptionsMemberItem) SetInstances(v []*InstancesMemberItem) *LoadBalancerDescriptionsMemberItem {
	s.Instances = v
	return s
}

// SetListenerDescriptions sets the ListenerDescriptions field's value.
func (s *LoadBalancerDescriptionsMemberItem) SetListenerDescriptions(v []*ListenerDescriptionsMemberItem) *LoadBalancerDescriptionsMemberItem {
	s.ListenerDescriptions = v
	return s
}

// SetLoadBalancerName sets the LoadBalancerName field's value.
func (s *LoadBalancerDescriptionsMemberItem) SetLoadBalancerName(v string) *LoadBalancerDescriptionsMemberItem {
	s.LoadBalancerName = &v
	return s
}

// SetNetworkVolume sets the NetworkVolume field's value.
func (s *LoadBalancerDescriptionsMemberItem) SetNetworkVolume(v int64) *LoadBalancerDescriptionsMemberItem {
	s.NetworkVolume = &v
	return s
}

// SetNextMonthAccountingType sets the NextMonthAccountingType field's value.
func (s *LoadBalancerDescriptionsMemberItem) SetNextMonthAccountingType(v string) *LoadBalancerDescriptionsMemberItem {
	s.NextMonthAccountingType = &v
	return s
}

// SetOption sets the Option field's value.
func (s *LoadBalancerDescriptionsMemberItem) SetOption(v *Option) *LoadBalancerDescriptionsMemberItem {
	s.Option = v
	return s
}

// SetPolicies sets the Policies field's value.
func (s *LoadBalancerDescriptionsMemberItem) SetPolicies(v *Policies) *LoadBalancerDescriptionsMemberItem {
	s.Policies = v
	return s
}

type LoadBalancerInfo struct {
	_ struct{} `type:"structure"`

	OptionSet []*OptionSetItem `locationName:"optionSet" locationNameList:"item" type:"list"`

	VipMeasuredRateSet []*VipMeasuredRateSetItem `locationName:"vipMeasuredRateSet" locationNameList:"item" type:"list"`

	VipSet []*VipSetItem `locationName:"vipSet" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s LoadBalancerInfo) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s LoadBalancerInfo) GoString() string {
	return s.String()
}

// SetOptionSet sets the OptionSet field's value.
func (s *LoadBalancerInfo) SetOptionSet(v []*OptionSetItem) *LoadBalancerInfo {
	s.OptionSet = v
	return s
}

// SetVipMeasuredRateSet sets the VipMeasuredRateSet field's value.
func (s *LoadBalancerInfo) SetVipMeasuredRateSet(v []*VipMeasuredRateSetItem) *LoadBalancerInfo {
	s.VipMeasuredRateSet = v
	return s
}

// SetVipSet sets the VipSet field's value.
func (s *LoadBalancerInfo) SetVipSet(v []*VipSetItem) *LoadBalancerInfo {
	s.VipSet = v
	return s
}

type LoadBalancingSetItem struct {
	_ struct{} `type:"structure"`

	InstancePort *int64 `locationName:"instancePort" type:"integer"`

	LoadBalancerName *string `locationName:"loadBalancerName" type:"string"`

	LoadBalancerPort *int64 `locationName:"loadBalancerPort" type:"integer"`
}

// String returns the string representation
func (s LoadBalancingSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s LoadBalancingSetItem) GoString() string {
	return s.String()
}

// SetInstancePort sets the InstancePort field's value.
func (s *LoadBalancingSetItem) SetInstancePort(v int64) *LoadBalancingSetItem {
	s.InstancePort = &v
	return s
}

// SetLoadBalancerName sets the LoadBalancerName field's value.
func (s *LoadBalancingSetItem) SetLoadBalancerName(v string) *LoadBalancingSetItem {
	s.LoadBalancerName = &v
	return s
}

// SetLoadBalancerPort sets the LoadBalancerPort field's value.
func (s *LoadBalancingSetItem) SetLoadBalancerPort(v int64) *LoadBalancingSetItem {
	s.LoadBalancerPort = &v
	return s
}

type LoadbalancingSetItem struct {
	_ struct{} `type:"structure"`

	InstancePort *int64 `locationName:"instancePort" type:"integer"`

	LoadBalancerName *string `locationName:"loadBalancerName" type:"string"`

	LoadBalancerPort *int64 `locationName:"loadBalancerPort" type:"integer"`

	State *string `locationName:"State" type:"string"`
}

// String returns the string representation
func (s LoadbalancingSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s LoadbalancingSetItem) GoString() string {
	return s.String()
}

// SetInstancePort sets the InstancePort field's value.
func (s *LoadbalancingSetItem) SetInstancePort(v int64) *LoadbalancingSetItem {
	s.InstancePort = &v
	return s
}

// SetLoadBalancerName sets the LoadBalancerName field's value.
func (s *LoadbalancingSetItem) SetLoadBalancerName(v string) *LoadbalancingSetItem {
	s.LoadBalancerName = &v
	return s
}

// SetLoadBalancerPort sets the LoadBalancerPort field's value.
func (s *LoadbalancingSetItem) SetLoadBalancerPort(v int64) *LoadbalancingSetItem {
	s.LoadBalancerPort = &v
	return s
}

// SetState sets the State field's value.
func (s *LoadbalancingSetItem) SetState(v string) *LoadbalancingSetItem {
	s.State = &v
	return s
}

type LogSetItem struct {
	_ struct{} `type:"structure"`

	Details *Details `locationName:"details" type:"structure"`

	Process *string `locationName:"process" type:"string"`

	Time *time.Time `locationName:"time" type:"timestamp" timestampFormat:""`
}

// String returns the string representation
func (s LogSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s LogSetItem) GoString() string {
	return s.String()
}

// SetDetails sets the Details field's value.
func (s *LogSetItem) SetDetails(v *Details) *LogSetItem {
	s.Details = v
	return s
}

// SetProcess sets the Process field's value.
func (s *LogSetItem) SetProcess(v string) *LogSetItem {
	s.Process = &v
	return s
}

// SetTime sets the Time field's value.
func (s *LogSetItem) SetTime(v time.Time) *LogSetItem {
	s.Time = &v
	return s
}

type MailSendInfo struct {
	_ struct{} `type:"structure"`

	MailSendInitial *MailSendInitial `locationName:"mailSendInitial" type:"structure"`

	MailSendMeasuredRate *MailSendMeasuredRate `locationName:"mailSendMeasuredRate" type:"structure"`

	MailSendMonthlyExceedRate *MailSendMonthlyExceedRate `locationName:"mailSendMonthlyExceedRate" type:"structure"`

	MailSendMonthlyRate *MailSendMonthlyRate `locationName:"mailSendMonthlyRate" type:"structure"`

	OptionSet []*OptionSetItem `locationName:"optionSet" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s MailSendInfo) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s MailSendInfo) GoString() string {
	return s.String()
}

// SetMailSendInitial sets the MailSendInitial field's value.
func (s *MailSendInfo) SetMailSendInitial(v *MailSendInitial) *MailSendInfo {
	s.MailSendInitial = v
	return s
}

// SetMailSendMeasuredRate sets the MailSendMeasuredRate field's value.
func (s *MailSendInfo) SetMailSendMeasuredRate(v *MailSendMeasuredRate) *MailSendInfo {
	s.MailSendMeasuredRate = v
	return s
}

// SetMailSendMonthlyExceedRate sets the MailSendMonthlyExceedRate field's value.
func (s *MailSendInfo) SetMailSendMonthlyExceedRate(v *MailSendMonthlyExceedRate) *MailSendInfo {
	s.MailSendMonthlyExceedRate = v
	return s
}

// SetMailSendMonthlyRate sets the MailSendMonthlyRate field's value.
func (s *MailSendInfo) SetMailSendMonthlyRate(v *MailSendMonthlyRate) *MailSendInfo {
	s.MailSendMonthlyRate = v
	return s
}

// SetOptionSet sets the OptionSet field's value.
func (s *MailSendInfo) SetOptionSet(v []*OptionSetItem) *MailSendInfo {
	s.OptionSet = v
	return s
}

type MailSendInitial struct {
	_ struct{} `type:"structure"`

	Charge *int64 `locationName:"charge" type:"integer"`

	Type *string `locationName:"type" type:"string"`

	Unit *string `locationName:"unit" type:"string"`

	Value *int64 `locationName:"value" type:"integer"`
}

// String returns the string representation
func (s MailSendInitial) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s MailSendInitial) GoString() string {
	return s.String()
}

// SetCharge sets the Charge field's value.
func (s *MailSendInitial) SetCharge(v int64) *MailSendInitial {
	s.Charge = &v
	return s
}

// SetType sets the Type field's value.
func (s *MailSendInitial) SetType(v string) *MailSendInitial {
	s.Type = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *MailSendInitial) SetUnit(v string) *MailSendInitial {
	s.Unit = &v
	return s
}

// SetValue sets the Value field's value.
func (s *MailSendInitial) SetValue(v int64) *MailSendInitial {
	s.Value = &v
	return s
}

type MailSendMeasuredRate struct {
	_ struct{} `type:"structure"`

	Charge *int64 `locationName:"charge" type:"integer"`

	Type *string `locationName:"type" type:"string"`

	Unit *string `locationName:"unit" type:"string"`

	Value *int64 `locationName:"value" type:"integer"`
}

// String returns the string representation
func (s MailSendMeasuredRate) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s MailSendMeasuredRate) GoString() string {
	return s.String()
}

// SetCharge sets the Charge field's value.
func (s *MailSendMeasuredRate) SetCharge(v int64) *MailSendMeasuredRate {
	s.Charge = &v
	return s
}

// SetType sets the Type field's value.
func (s *MailSendMeasuredRate) SetType(v string) *MailSendMeasuredRate {
	s.Type = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *MailSendMeasuredRate) SetUnit(v string) *MailSendMeasuredRate {
	s.Unit = &v
	return s
}

// SetValue sets the Value field's value.
func (s *MailSendMeasuredRate) SetValue(v int64) *MailSendMeasuredRate {
	s.Value = &v
	return s
}

type MailSendMonthlyExceedRate struct {
	_ struct{} `type:"structure"`

	Charge *int64 `locationName:"charge" type:"integer"`

	Type *string `locationName:"type" type:"string"`

	Unit *string `locationName:"unit" type:"string"`

	Value *int64 `locationName:"value" type:"integer"`
}

// String returns the string representation
func (s MailSendMonthlyExceedRate) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s MailSendMonthlyExceedRate) GoString() string {
	return s.String()
}

// SetCharge sets the Charge field's value.
func (s *MailSendMonthlyExceedRate) SetCharge(v int64) *MailSendMonthlyExceedRate {
	s.Charge = &v
	return s
}

// SetType sets the Type field's value.
func (s *MailSendMonthlyExceedRate) SetType(v string) *MailSendMonthlyExceedRate {
	s.Type = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *MailSendMonthlyExceedRate) SetUnit(v string) *MailSendMonthlyExceedRate {
	s.Unit = &v
	return s
}

// SetValue sets the Value field's value.
func (s *MailSendMonthlyExceedRate) SetValue(v int64) *MailSendMonthlyExceedRate {
	s.Value = &v
	return s
}

type MailSendMonthlyRate struct {
	_ struct{} `type:"structure"`

	Charge *int64 `locationName:"charge" type:"integer"`

	Type *string `locationName:"type" type:"string"`

	Unit *string `locationName:"unit" type:"string"`

	Value *int64 `locationName:"value" type:"integer"`
}

// String returns the string representation
func (s MailSendMonthlyRate) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s MailSendMonthlyRate) GoString() string {
	return s.String()
}

// SetCharge sets the Charge field's value.
func (s *MailSendMonthlyRate) SetCharge(v int64) *MailSendMonthlyRate {
	s.Charge = &v
	return s
}

// SetType sets the Type field's value.
func (s *MailSendMonthlyRate) SetType(v string) *MailSendMonthlyRate {
	s.Type = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *MailSendMonthlyRate) SetUnit(v string) *MailSendMonthlyRate {
	s.Unit = &v
	return s
}

// SetValue sets the Value field's value.
func (s *MailSendMonthlyRate) SetValue(v int64) *MailSendMonthlyRate {
	s.Value = &v
	return s
}

type MessageSetItem struct {
	_ struct{} `type:"structure"`

	Message *string `locationName:"message" type:"string"`
}

// String returns the string representation
func (s MessageSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s MessageSetItem) GoString() string {
	return s.String()
}

// SetMessage sets the Message field's value.
func (s *MessageSetItem) SetMessage(v string) *MessageSetItem {
	s.Message = &v
	return s
}

type MobileFilter struct {
	_ struct{} `type:"structure"`

	Enabled *bool `locationName:"Enabled" type:"boolean"`
}

// String returns the string representation
func (s MobileFilter) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s MobileFilter) GoString() string {
	return s.String()
}

// SetEnabled sets the Enabled field's value.
func (s *MobileFilter) SetEnabled(v bool) *MobileFilter {
	s.Enabled = &v
	return s
}

type ModifyImageAttributeInput struct {
	_ struct{} `type:"structure"`

	Attribute *string `locationName:"Attribute" type:"string"`

	ImageId *string `locationName:"ImageId" type:"string"`

	Value *string `locationName:"Value" type:"string"`
}

// String returns the string representation
func (s ModifyImageAttributeInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyImageAttributeInput) GoString() string {
	return s.String()
}

// SetAttribute sets the Attribute field's value.
func (s *ModifyImageAttributeInput) SetAttribute(v string) *ModifyImageAttributeInput {
	s.Attribute = &v
	return s
}

// SetImageId sets the ImageId field's value.
func (s *ModifyImageAttributeInput) SetImageId(v string) *ModifyImageAttributeInput {
	s.ImageId = &v
	return s
}

// SetValue sets the Value field's value.
func (s *ModifyImageAttributeInput) SetValue(v string) *ModifyImageAttributeInput {
	s.Value = &v
	return s
}

type ModifyImageAttributeOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`
}

// String returns the string representation
func (s ModifyImageAttributeOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyImageAttributeOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *ModifyImageAttributeOutput) SetRequestId(v string) *ModifyImageAttributeOutput {
	s.RequestId = &v
	return s
}

type ModifyInstanceAttributeInput struct {
	_ struct{} `type:"structure"`

	Attribute *string `locationName:"Attribute" type:"string"`

	Force *bool `locationName:"Force" type:"boolean"`

	InstanceId *string `locationName:"InstanceId" type:"string"`

	NiftyReboot *string `locationName:"NiftyReboot" type:"string"`

	Tenancy *string `locationName:"Tenancy" type:"string"`

	Value *string `locationName:"Value" type:"string"`
}

// String returns the string representation
func (s ModifyInstanceAttributeInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyInstanceAttributeInput) GoString() string {
	return s.String()
}

// SetAttribute sets the Attribute field's value.
func (s *ModifyInstanceAttributeInput) SetAttribute(v string) *ModifyInstanceAttributeInput {
	s.Attribute = &v
	return s
}

// SetForce sets the Force field's value.
func (s *ModifyInstanceAttributeInput) SetForce(v bool) *ModifyInstanceAttributeInput {
	s.Force = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *ModifyInstanceAttributeInput) SetInstanceId(v string) *ModifyInstanceAttributeInput {
	s.InstanceId = &v
	return s
}

// SetNiftyReboot sets the NiftyReboot field's value.
func (s *ModifyInstanceAttributeInput) SetNiftyReboot(v string) *ModifyInstanceAttributeInput {
	s.NiftyReboot = &v
	return s
}

// SetTenancy sets the Tenancy field's value.
func (s *ModifyInstanceAttributeInput) SetTenancy(v string) *ModifyInstanceAttributeInput {
	s.Tenancy = &v
	return s
}

// SetValue sets the Value field's value.
func (s *ModifyInstanceAttributeInput) SetValue(v string) *ModifyInstanceAttributeInput {
	s.Value = &v
	return s
}

type ModifyInstanceAttributeOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s ModifyInstanceAttributeOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyInstanceAttributeOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *ModifyInstanceAttributeOutput) SetRequestId(v string) *ModifyInstanceAttributeOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *ModifyInstanceAttributeOutput) SetReturn(v bool) *ModifyInstanceAttributeOutput {
	s.Return = &v
	return s
}

type ModifySslCertificateAttributeInput struct {
	_ struct{} `type:"structure"`

	Description *RequestDescriptionStruct `locationName:"Description" type:"structure"`

	FqdnId *string `locationName:"FqdnId" type:"string"`
}

// String returns the string representation
func (s ModifySslCertificateAttributeInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifySslCertificateAttributeInput) GoString() string {
	return s.String()
}

// SetDescription sets the Description field's value.
func (s *ModifySslCertificateAttributeInput) SetDescription(v *RequestDescriptionStruct) *ModifySslCertificateAttributeInput {
	s.Description = v
	return s
}

// SetFqdnId sets the FqdnId field's value.
func (s *ModifySslCertificateAttributeInput) SetFqdnId(v string) *ModifySslCertificateAttributeInput {
	s.FqdnId = &v
	return s
}

type ModifySslCertificateAttributeOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s ModifySslCertificateAttributeOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifySslCertificateAttributeOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *ModifySslCertificateAttributeOutput) SetRequestId(v string) *ModifySslCertificateAttributeOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *ModifySslCertificateAttributeOutput) SetReturn(v bool) *ModifySslCertificateAttributeOutput {
	s.Return = &v
	return s
}

type ModifyVolumeAttributeInput struct {
	_ struct{} `type:"structure"`

	Attribute *string `locationName:"Attribute" type:"string"`

	Value *string `locationName:"Value" type:"string"`

	VolumeId *string `locationName:"VolumeId" type:"string"`
}

// String returns the string representation
func (s ModifyVolumeAttributeInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyVolumeAttributeInput) GoString() string {
	return s.String()
}

// SetAttribute sets the Attribute field's value.
func (s *ModifyVolumeAttributeInput) SetAttribute(v string) *ModifyVolumeAttributeInput {
	s.Attribute = &v
	return s
}

// SetValue sets the Value field's value.
func (s *ModifyVolumeAttributeInput) SetValue(v string) *ModifyVolumeAttributeInput {
	s.Value = &v
	return s
}

// SetVolumeId sets the VolumeId field's value.
func (s *ModifyVolumeAttributeInput) SetVolumeId(v string) *ModifyVolumeAttributeInput {
	s.VolumeId = &v
	return s
}

type ModifyVolumeAttributeOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s ModifyVolumeAttributeOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyVolumeAttributeOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *ModifyVolumeAttributeOutput) SetRequestId(v string) *ModifyVolumeAttributeOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *ModifyVolumeAttributeOutput) SetReturn(v bool) *ModifyVolumeAttributeOutput {
	s.Return = &v
	return s
}

type Monitoring struct {
	_ struct{} `type:"structure"`

	State *string `locationName:"state" type:"string"`
}

// String returns the string representation
func (s Monitoring) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s Monitoring) GoString() string {
	return s.String()
}

// SetState sets the State field's value.
func (s *Monitoring) SetState(v string) *Monitoring {
	s.State = &v
	return s
}

type Month struct {
	_ struct{} `type:"structure"`

	EndingMonth *string `locationName:"endingMonth" type:"string"`

	StartingMonth *string `locationName:"startingMonth" type:"string"`
}

// String returns the string representation
func (s Month) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s Month) GoString() string {
	return s.String()
}

// SetEndingMonth sets the EndingMonth field's value.
func (s *Month) SetEndingMonth(v string) *Month {
	s.EndingMonth = &v
	return s
}

// SetStartingMonth sets the StartingMonth field's value.
func (s *Month) SetStartingMonth(v string) *Month {
	s.StartingMonth = &v
	return s
}

type MultiAccount struct {
	_ struct{} `type:"structure"`

	Charge *int64 `locationName:"charge" type:"integer"`

	Type *string `locationName:"type" type:"string"`

	Unit *string `locationName:"unit" type:"string"`

	Value *int64 `locationName:"value" type:"integer"`
}

// String returns the string representation
func (s MultiAccount) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s MultiAccount) GoString() string {
	return s.String()
}

// SetCharge sets the Charge field's value.
func (s *MultiAccount) SetCharge(v int64) *MultiAccount {
	s.Charge = &v
	return s
}

// SetType sets the Type field's value.
func (s *MultiAccount) SetType(v string) *MultiAccount {
	s.Type = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *MultiAccount) SetUnit(v string) *MultiAccount {
	s.Unit = &v
	return s
}

// SetValue sets the Value field's value.
func (s *MultiAccount) SetValue(v int64) *MultiAccount {
	s.Value = &v
	return s
}

type MultiAccountInfo struct {
	_ struct{} `type:"structure"`

	MultiAccount *MultiAccount `locationName:"multiAccount" type:"structure"`
}

// String returns the string representation
func (s MultiAccountInfo) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s MultiAccountInfo) GoString() string {
	return s.String()
}

// SetMultiAccount sets the MultiAccount field's value.
func (s *MultiAccountInfo) SetMultiAccount(v *MultiAccount) *MultiAccountInfo {
	s.MultiAccount = v
	return s
}

type MultiIpMonthlyRate struct {
	_ struct{} `type:"structure"`

	Charge *int64 `locationName:"charge" type:"integer"`

	Type *string `locationName:"type" type:"string"`

	Unit *string `locationName:"unit" type:"string"`

	Value *int64 `locationName:"value" type:"integer"`
}

// String returns the string representation
func (s MultiIpMonthlyRate) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s MultiIpMonthlyRate) GoString() string {
	return s.String()
}

// SetCharge sets the Charge field's value.
func (s *MultiIpMonthlyRate) SetCharge(v int64) *MultiIpMonthlyRate {
	s.Charge = &v
	return s
}

// SetType sets the Type field's value.
func (s *MultiIpMonthlyRate) SetType(v string) *MultiIpMonthlyRate {
	s.Type = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *MultiIpMonthlyRate) SetUnit(v string) *MultiIpMonthlyRate {
	s.Unit = &v
	return s
}

// SetValue sets the Value field's value.
func (s *MultiIpMonthlyRate) SetValue(v int64) *MultiIpMonthlyRate {
	s.Value = &v
	return s
}

type NatRule struct {
	_ struct{} `type:"structure"`

	Description *string `locationName:"description" type:"string"`

	Destination *Destination `locationName:"destination" type:"structure"`

	InboundInterface *InboundInterface `locationName:"inboundInterface" type:"structure"`

	NatType *string `locationName:"natType" type:"string"`

	OutboundInterface *OutboundInterface `locationName:"outboundInterface" type:"structure"`

	Protocol *string `locationName:"protocol" type:"string"`

	RuleNumber *string `locationName:"ruleNumber" type:"string"`

	Source *Source `locationName:"source" type:"structure"`

	Translation *Translation `locationName:"translation" type:"structure"`
}

// String returns the string representation
func (s NatRule) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NatRule) GoString() string {
	return s.String()
}

// SetDescription sets the Description field's value.
func (s *NatRule) SetDescription(v string) *NatRule {
	s.Description = &v
	return s
}

// SetDestination sets the Destination field's value.
func (s *NatRule) SetDestination(v *Destination) *NatRule {
	s.Destination = v
	return s
}

// SetInboundInterface sets the InboundInterface field's value.
func (s *NatRule) SetInboundInterface(v *InboundInterface) *NatRule {
	s.InboundInterface = v
	return s
}

// SetNatType sets the NatType field's value.
func (s *NatRule) SetNatType(v string) *NatRule {
	s.NatType = &v
	return s
}

// SetOutboundInterface sets the OutboundInterface field's value.
func (s *NatRule) SetOutboundInterface(v *OutboundInterface) *NatRule {
	s.OutboundInterface = v
	return s
}

// SetProtocol sets the Protocol field's value.
func (s *NatRule) SetProtocol(v string) *NatRule {
	s.Protocol = &v
	return s
}

// SetRuleNumber sets the RuleNumber field's value.
func (s *NatRule) SetRuleNumber(v string) *NatRule {
	s.RuleNumber = &v
	return s
}

// SetSource sets the Source field's value.
func (s *NatRule) SetSource(v *Source) *NatRule {
	s.Source = v
	return s
}

// SetTranslation sets the Translation field's value.
func (s *NatRule) SetTranslation(v *Translation) *NatRule {
	s.Translation = v
	return s
}

type NatRuleSetItem struct {
	_ struct{} `type:"structure"`

	Description *string `locationName:"description" type:"string"`

	Destination *Destination `locationName:"destination" type:"structure"`

	InboundInterface *InboundInterface `locationName:"inboundInterface" type:"structure"`

	NatType *string `locationName:"natType" type:"string"`

	OutboundInterface *OutboundInterface `locationName:"outboundInterface" type:"structure"`

	Protocol *string `locationName:"protocol" type:"string"`

	RuleNumber *string `locationName:"ruleNumber" type:"string"`

	Source *Source `locationName:"source" type:"structure"`

	Translation *Translation `locationName:"translation" type:"structure"`
}

// String returns the string representation
func (s NatRuleSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NatRuleSetItem) GoString() string {
	return s.String()
}

// SetDescription sets the Description field's value.
func (s *NatRuleSetItem) SetDescription(v string) *NatRuleSetItem {
	s.Description = &v
	return s
}

// SetDestination sets the Destination field's value.
func (s *NatRuleSetItem) SetDestination(v *Destination) *NatRuleSetItem {
	s.Destination = v
	return s
}

// SetInboundInterface sets the InboundInterface field's value.
func (s *NatRuleSetItem) SetInboundInterface(v *InboundInterface) *NatRuleSetItem {
	s.InboundInterface = v
	return s
}

// SetNatType sets the NatType field's value.
func (s *NatRuleSetItem) SetNatType(v string) *NatRuleSetItem {
	s.NatType = &v
	return s
}

// SetOutboundInterface sets the OutboundInterface field's value.
func (s *NatRuleSetItem) SetOutboundInterface(v *OutboundInterface) *NatRuleSetItem {
	s.OutboundInterface = v
	return s
}

// SetProtocol sets the Protocol field's value.
func (s *NatRuleSetItem) SetProtocol(v string) *NatRuleSetItem {
	s.Protocol = &v
	return s
}

// SetRuleNumber sets the RuleNumber field's value.
func (s *NatRuleSetItem) SetRuleNumber(v string) *NatRuleSetItem {
	s.RuleNumber = &v
	return s
}

// SetSource sets the Source field's value.
func (s *NatRuleSetItem) SetSource(v *Source) *NatRuleSetItem {
	s.Source = v
	return s
}

// SetTranslation sets the Translation field's value.
func (s *NatRuleSetItem) SetTranslation(v *Translation) *NatRuleSetItem {
	s.Translation = v
	return s
}

type NatTable struct {
	_ struct{} `type:"structure"`

	NatTableId *string `locationName:"natTableId" type:"string"`

	TagSet []*TagSetItem `locationName:"tagSet" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s NatTable) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NatTable) GoString() string {
	return s.String()
}

// SetNatTableId sets the NatTableId field's value.
func (s *NatTable) SetNatTableId(v string) *NatTable {
	s.NatTableId = &v
	return s
}

// SetTagSet sets the TagSet field's value.
func (s *NatTable) SetTagSet(v []*TagSetItem) *NatTable {
	s.TagSet = v
	return s
}

type NatTableSetItem struct {
	_ struct{} `type:"structure"`

	AssociationSet []*AssociationSetItem `locationName:"associationSet" locationNameList:"item" type:"list"`

	NatRuleSet []*NatRuleSetItem `locationName:"natRuleSet" locationNameList:"item" type:"list"`

	NatTableId *string `locationName:"natTableId" type:"string"`

	TagSet []*TagSetItem `locationName:"tagSet" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s NatTableSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NatTableSetItem) GoString() string {
	return s.String()
}

// SetAssociationSet sets the AssociationSet field's value.
func (s *NatTableSetItem) SetAssociationSet(v []*AssociationSetItem) *NatTableSetItem {
	s.AssociationSet = v
	return s
}

// SetNatRuleSet sets the NatRuleSet field's value.
func (s *NatTableSetItem) SetNatRuleSet(v []*NatRuleSetItem) *NatTableSetItem {
	s.NatRuleSet = v
	return s
}

// SetNatTableId sets the NatTableId field's value.
func (s *NatTableSetItem) SetNatTableId(v string) *NatTableSetItem {
	s.NatTableId = &v
	return s
}

// SetTagSet sets the TagSet field's value.
func (s *NatTableSetItem) SetTagSet(v []*TagSetItem) *NatTableSetItem {
	s.TagSet = v
	return s
}

type NetworkFlowSetItem struct {
	_ struct{} `type:"structure"`

	Charge *int64 `locationName:"charge" type:"integer"`

	Type *string `locationName:"type" type:"string"`

	Unit *string `locationName:"unit" type:"string"`

	Value *int64 `locationName:"value" type:"integer"`
}

// String returns the string representation
func (s NetworkFlowSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NetworkFlowSetItem) GoString() string {
	return s.String()
}

// SetCharge sets the Charge field's value.
func (s *NetworkFlowSetItem) SetCharge(v int64) *NetworkFlowSetItem {
	s.Charge = &v
	return s
}

// SetType sets the Type field's value.
func (s *NetworkFlowSetItem) SetType(v string) *NetworkFlowSetItem {
	s.Type = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *NetworkFlowSetItem) SetUnit(v string) *NetworkFlowSetItem {
	s.Unit = &v
	return s
}

// SetValue sets the Value field's value.
func (s *NetworkFlowSetItem) SetValue(v int64) *NetworkFlowSetItem {
	s.Value = &v
	return s
}

type NetworkInfo struct {
	_ struct{} `type:"structure"`

	NetworkFlowSet []*NetworkFlowSetItem `locationName:"networkFlowSet" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s NetworkInfo) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NetworkInfo) GoString() string {
	return s.String()
}

// SetNetworkFlowSet sets the NetworkFlowSet field's value.
func (s *NetworkInfo) SetNetworkFlowSet(v []*NetworkFlowSetItem) *NetworkInfo {
	s.NetworkFlowSet = v
	return s
}

type NetworkInterfaceSetItem struct {
	_ struct{} `type:"structure"`

	Association *Association `locationName:"association" type:"structure"`

	Attachment *Attachment `locationName:"attachment" type:"structure"`

	CidrBlock *string `locationName:"cidrBlock" type:"string"`

	Descriprion *string `locationName:"descriprion" type:"string"`

	Description *string `locationName:"description" type:"string"`

	DeviceIndex *int64 `locationName:"deviceIndex" type:"integer"`

	Dhcp *bool `locationName:"dhcp" type:"boolean"`

	DhcpOptionsId *string `locationName:"dhcpOptionsId" type:"string"`

	GroupSet []*GroupSetItem `locationName:"groupSet" locationNameList:"item" type:"list"`

	IpAddress *string `locationName:"ipAddress" type:"string"`

	MacAddress *string `locationName:"macAddress" type:"string"`

	NetworkId *string `locationName:"networkId" type:"string"`

	NetworkInterfaceId *string `locationName:"networkInterfaceId" type:"string"`

	NetworkName *string `locationName:"networkName" type:"string"`

	NiftyNetworkId *string `locationName:"niftyNetworkId" type:"string"`

	NiftyNetworkName *string `locationName:"niftyNetworkName" type:"string"`

	OwnerId *string `locationName:"ownerId" type:"string"`

	PrivateDnsName *string `locationName:"privateDnsName" type:"string"`

	PrivateIpAddress *string `locationName:"privateIpAddress" type:"string"`

	PrivateIpAddressV6 *string `locationName:"privateIpAddressV6" type:"string"`

	PrivateIpAddressesSet []*PrivateIpAddressesSetItem `locationName:"privateIpAddressesSet" locationNameList:"item" type:"list"`

	SourceDestCheck *string `locationName:"sourceDestCheck" type:"string"`

	Status *string `locationName:"status" type:"string"`

	SubnetId *string `locationName:"subnetId" type:"string"`

	VpcId *string `locationName:"vpcId" type:"string"`
}

// String returns the string representation
func (s NetworkInterfaceSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NetworkInterfaceSetItem) GoString() string {
	return s.String()
}

// SetAssociation sets the Association field's value.
func (s *NetworkInterfaceSetItem) SetAssociation(v *Association) *NetworkInterfaceSetItem {
	s.Association = v
	return s
}

// SetAttachment sets the Attachment field's value.
func (s *NetworkInterfaceSetItem) SetAttachment(v *Attachment) *NetworkInterfaceSetItem {
	s.Attachment = v
	return s
}

// SetCidrBlock sets the CidrBlock field's value.
func (s *NetworkInterfaceSetItem) SetCidrBlock(v string) *NetworkInterfaceSetItem {
	s.CidrBlock = &v
	return s
}

// SetDescriprion sets the Descriprion field's value.
func (s *NetworkInterfaceSetItem) SetDescriprion(v string) *NetworkInterfaceSetItem {
	s.Descriprion = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *NetworkInterfaceSetItem) SetDescription(v string) *NetworkInterfaceSetItem {
	s.Description = &v
	return s
}

// SetDeviceIndex sets the DeviceIndex field's value.
func (s *NetworkInterfaceSetItem) SetDeviceIndex(v int64) *NetworkInterfaceSetItem {
	s.DeviceIndex = &v
	return s
}

// SetDhcp sets the Dhcp field's value.
func (s *NetworkInterfaceSetItem) SetDhcp(v bool) *NetworkInterfaceSetItem {
	s.Dhcp = &v
	return s
}

// SetDhcpOptionsId sets the DhcpOptionsId field's value.
func (s *NetworkInterfaceSetItem) SetDhcpOptionsId(v string) *NetworkInterfaceSetItem {
	s.DhcpOptionsId = &v
	return s
}

// SetGroupSet sets the GroupSet field's value.
func (s *NetworkInterfaceSetItem) SetGroupSet(v []*GroupSetItem) *NetworkInterfaceSetItem {
	s.GroupSet = v
	return s
}

// SetIpAddress sets the IpAddress field's value.
func (s *NetworkInterfaceSetItem) SetIpAddress(v string) *NetworkInterfaceSetItem {
	s.IpAddress = &v
	return s
}

// SetMacAddress sets the MacAddress field's value.
func (s *NetworkInterfaceSetItem) SetMacAddress(v string) *NetworkInterfaceSetItem {
	s.MacAddress = &v
	return s
}

// SetNetworkId sets the NetworkId field's value.
func (s *NetworkInterfaceSetItem) SetNetworkId(v string) *NetworkInterfaceSetItem {
	s.NetworkId = &v
	return s
}

// SetNetworkInterfaceId sets the NetworkInterfaceId field's value.
func (s *NetworkInterfaceSetItem) SetNetworkInterfaceId(v string) *NetworkInterfaceSetItem {
	s.NetworkInterfaceId = &v
	return s
}

// SetNetworkName sets the NetworkName field's value.
func (s *NetworkInterfaceSetItem) SetNetworkName(v string) *NetworkInterfaceSetItem {
	s.NetworkName = &v
	return s
}

// SetNiftyNetworkId sets the NiftyNetworkId field's value.
func (s *NetworkInterfaceSetItem) SetNiftyNetworkId(v string) *NetworkInterfaceSetItem {
	s.NiftyNetworkId = &v
	return s
}

// SetNiftyNetworkName sets the NiftyNetworkName field's value.
func (s *NetworkInterfaceSetItem) SetNiftyNetworkName(v string) *NetworkInterfaceSetItem {
	s.NiftyNetworkName = &v
	return s
}

// SetOwnerId sets the OwnerId field's value.
func (s *NetworkInterfaceSetItem) SetOwnerId(v string) *NetworkInterfaceSetItem {
	s.OwnerId = &v
	return s
}

// SetPrivateDnsName sets the PrivateDnsName field's value.
func (s *NetworkInterfaceSetItem) SetPrivateDnsName(v string) *NetworkInterfaceSetItem {
	s.PrivateDnsName = &v
	return s
}

// SetPrivateIpAddress sets the PrivateIpAddress field's value.
func (s *NetworkInterfaceSetItem) SetPrivateIpAddress(v string) *NetworkInterfaceSetItem {
	s.PrivateIpAddress = &v
	return s
}

// SetPrivateIpAddressV6 sets the PrivateIpAddressV6 field's value.
func (s *NetworkInterfaceSetItem) SetPrivateIpAddressV6(v string) *NetworkInterfaceSetItem {
	s.PrivateIpAddressV6 = &v
	return s
}

// SetPrivateIpAddressesSet sets the PrivateIpAddressesSet field's value.
func (s *NetworkInterfaceSetItem) SetPrivateIpAddressesSet(v []*PrivateIpAddressesSetItem) *NetworkInterfaceSetItem {
	s.PrivateIpAddressesSet = v
	return s
}

// SetSourceDestCheck sets the SourceDestCheck field's value.
func (s *NetworkInterfaceSetItem) SetSourceDestCheck(v string) *NetworkInterfaceSetItem {
	s.SourceDestCheck = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *NetworkInterfaceSetItem) SetStatus(v string) *NetworkInterfaceSetItem {
	s.Status = &v
	return s
}

// SetSubnetId sets the SubnetId field's value.
func (s *NetworkInterfaceSetItem) SetSubnetId(v string) *NetworkInterfaceSetItem {
	s.SubnetId = &v
	return s
}

// SetVpcId sets the VpcId field's value.
func (s *NetworkInterfaceSetItem) SetVpcId(v string) *NetworkInterfaceSetItem {
	s.VpcId = &v
	return s
}

type NetworkInterfacesMemberItem struct {
	_ struct{} `type:"structure"`

	Description *string `locationName:"Description" type:"string"`

	DeviceIndex *int64 `locationName:"DeviceIndex" type:"integer"`

	IpAddress *string `locationName:"IpAddress" type:"string"`

	IsVipNetwork *bool `locationName:"IsVipNetwork" type:"boolean"`

	NetworkId *string `locationName:"NetworkId" type:"string"`

	NetworkName *string `locationName:"NetworkName" type:"string"`
}

// String returns the string representation
func (s NetworkInterfacesMemberItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NetworkInterfacesMemberItem) GoString() string {
	return s.String()
}

// SetDescription sets the Description field's value.
func (s *NetworkInterfacesMemberItem) SetDescription(v string) *NetworkInterfacesMemberItem {
	s.Description = &v
	return s
}

// SetDeviceIndex sets the DeviceIndex field's value.
func (s *NetworkInterfacesMemberItem) SetDeviceIndex(v int64) *NetworkInterfacesMemberItem {
	s.DeviceIndex = &v
	return s
}

// SetIpAddress sets the IpAddress field's value.
func (s *NetworkInterfacesMemberItem) SetIpAddress(v string) *NetworkInterfacesMemberItem {
	s.IpAddress = &v
	return s
}

// SetIsVipNetwork sets the IsVipNetwork field's value.
func (s *NetworkInterfacesMemberItem) SetIsVipNetwork(v bool) *NetworkInterfacesMemberItem {
	s.IsVipNetwork = &v
	return s
}

// SetNetworkId sets the NetworkId field's value.
func (s *NetworkInterfacesMemberItem) SetNetworkId(v string) *NetworkInterfacesMemberItem {
	s.NetworkId = &v
	return s
}

// SetNetworkName sets the NetworkName field's value.
func (s *NetworkInterfacesMemberItem) SetNetworkName(v string) *NetworkInterfacesMemberItem {
	s.NetworkName = &v
	return s
}

type NextMonthAccountingType struct {
	_ struct{} `type:"structure"`

	Value *string `locationName:"value" type:"string"`
}

// String returns the string representation
func (s NextMonthAccountingType) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NextMonthAccountingType) GoString() string {
	return s.String()
}

// SetValue sets the Value field's value.
func (s *NextMonthAccountingType) SetValue(v string) *NextMonthAccountingType {
	s.Value = &v
	return s
}

type NiftyAssociateImageInput struct {
	_ struct{} `type:"structure"`

	DistributionId []*string `locationName:"DistributionId" type:"list"`

	ImageId *string `locationName:"ImageId" type:"string"`

	IsPublic *bool `locationName:"IsPublic" type:"boolean"`

	IsRedistribute *bool `locationName:"IsRedistribute" type:"boolean"`
}

// String returns the string representation
func (s NiftyAssociateImageInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyAssociateImageInput) GoString() string {
	return s.String()
}

// SetDistributionId sets the DistributionId field's value.
func (s *NiftyAssociateImageInput) SetDistributionId(v []*string) *NiftyAssociateImageInput {
	s.DistributionId = v
	return s
}

// SetImageId sets the ImageId field's value.
func (s *NiftyAssociateImageInput) SetImageId(v string) *NiftyAssociateImageInput {
	s.ImageId = &v
	return s
}

// SetIsPublic sets the IsPublic field's value.
func (s *NiftyAssociateImageInput) SetIsPublic(v bool) *NiftyAssociateImageInput {
	s.IsPublic = &v
	return s
}

// SetIsRedistribute sets the IsRedistribute field's value.
func (s *NiftyAssociateImageInput) SetIsRedistribute(v bool) *NiftyAssociateImageInput {
	s.IsRedistribute = &v
	return s
}

type NiftyAssociateImageOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s NiftyAssociateImageOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyAssociateImageOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyAssociateImageOutput) SetRequestId(v string) *NiftyAssociateImageOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *NiftyAssociateImageOutput) SetReturn(v bool) *NiftyAssociateImageOutput {
	s.Return = &v
	return s
}

type NiftyAssociateNatTableInput struct {
	_ struct{} `type:"structure"`

	Agreement *bool `locationName:"Agreement" type:"boolean"`

	NatTableId *string `locationName:"NatTableId" type:"string"`

	RouterId *string `locationName:"RouterId" type:"string"`

	RouterName *string `locationName:"RouterName" type:"string"`
}

// String returns the string representation
func (s NiftyAssociateNatTableInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyAssociateNatTableInput) GoString() string {
	return s.String()
}

// SetAgreement sets the Agreement field's value.
func (s *NiftyAssociateNatTableInput) SetAgreement(v bool) *NiftyAssociateNatTableInput {
	s.Agreement = &v
	return s
}

// SetNatTableId sets the NatTableId field's value.
func (s *NiftyAssociateNatTableInput) SetNatTableId(v string) *NiftyAssociateNatTableInput {
	s.NatTableId = &v
	return s
}

// SetRouterId sets the RouterId field's value.
func (s *NiftyAssociateNatTableInput) SetRouterId(v string) *NiftyAssociateNatTableInput {
	s.RouterId = &v
	return s
}

// SetRouterName sets the RouterName field's value.
func (s *NiftyAssociateNatTableInput) SetRouterName(v string) *NiftyAssociateNatTableInput {
	s.RouterName = &v
	return s
}

type NiftyAssociateNatTableOutput struct {
	_ struct{} `type:"structure"`

	AssociationId *string `locationName:"associationId" type:"string"`

	RequestId *string `locationName:"requestId" type:"string"`
}

// String returns the string representation
func (s NiftyAssociateNatTableOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyAssociateNatTableOutput) GoString() string {
	return s.String()
}

// SetAssociationId sets the AssociationId field's value.
func (s *NiftyAssociateNatTableOutput) SetAssociationId(v string) *NiftyAssociateNatTableOutput {
	s.AssociationId = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyAssociateNatTableOutput) SetRequestId(v string) *NiftyAssociateNatTableOutput {
	s.RequestId = &v
	return s
}

type NiftyAssociateRouteTableWithVpnGatewayInput struct {
	_ struct{} `type:"structure"`

	Agreement *bool `locationName:"Agreement" type:"boolean"`

	NiftyVpnGatewayName *string `locationName:"NiftyVpnGatewayName" type:"string"`

	RouteTableId *string `locationName:"RouteTableId" type:"string"`

	VpnGatewayId *string `locationName:"VpnGatewayId" type:"string"`
}

// String returns the string representation
func (s NiftyAssociateRouteTableWithVpnGatewayInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyAssociateRouteTableWithVpnGatewayInput) GoString() string {
	return s.String()
}

// SetAgreement sets the Agreement field's value.
func (s *NiftyAssociateRouteTableWithVpnGatewayInput) SetAgreement(v bool) *NiftyAssociateRouteTableWithVpnGatewayInput {
	s.Agreement = &v
	return s
}

// SetNiftyVpnGatewayName sets the NiftyVpnGatewayName field's value.
func (s *NiftyAssociateRouteTableWithVpnGatewayInput) SetNiftyVpnGatewayName(v string) *NiftyAssociateRouteTableWithVpnGatewayInput {
	s.NiftyVpnGatewayName = &v
	return s
}

// SetRouteTableId sets the RouteTableId field's value.
func (s *NiftyAssociateRouteTableWithVpnGatewayInput) SetRouteTableId(v string) *NiftyAssociateRouteTableWithVpnGatewayInput {
	s.RouteTableId = &v
	return s
}

// SetVpnGatewayId sets the VpnGatewayId field's value.
func (s *NiftyAssociateRouteTableWithVpnGatewayInput) SetVpnGatewayId(v string) *NiftyAssociateRouteTableWithVpnGatewayInput {
	s.VpnGatewayId = &v
	return s
}

type NiftyAssociateRouteTableWithVpnGatewayOutput struct {
	_ struct{} `type:"structure"`

	AssociationId *string `locationName:"associationId" type:"string"`

	RequestId *string `locationName:"requestId" type:"string"`
}

// String returns the string representation
func (s NiftyAssociateRouteTableWithVpnGatewayOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyAssociateRouteTableWithVpnGatewayOutput) GoString() string {
	return s.String()
}

// SetAssociationId sets the AssociationId field's value.
func (s *NiftyAssociateRouteTableWithVpnGatewayOutput) SetAssociationId(v string) *NiftyAssociateRouteTableWithVpnGatewayOutput {
	s.AssociationId = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyAssociateRouteTableWithVpnGatewayOutput) SetRequestId(v string) *NiftyAssociateRouteTableWithVpnGatewayOutput {
	s.RequestId = &v
	return s
}

type NiftyConfigureElasticLoadBalancerHealthCheckInput struct {
	_ struct{} `type:"structure"`

	ElasticLoadBalancerId *string `locationName:"ElasticLoadBalancerId" type:"string"`

	ElasticLoadBalancerName *string `locationName:"ElasticLoadBalancerName" type:"string"`

	ElasticLoadBalancerPort *int64 `locationName:"ElasticLoadBalancerPort" type:"integer"`

	HealthCheck *RequestHealthCheckStruct `locationName:"HealthCheck" type:"structure"`

	InstancePort *int64 `locationName:"InstancePort" type:"integer"`

	Protocol *string `locationName:"Protocol" type:"string"`
}

// String returns the string representation
func (s NiftyConfigureElasticLoadBalancerHealthCheckInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyConfigureElasticLoadBalancerHealthCheckInput) GoString() string {
	return s.String()
}

// SetElasticLoadBalancerId sets the ElasticLoadBalancerId field's value.
func (s *NiftyConfigureElasticLoadBalancerHealthCheckInput) SetElasticLoadBalancerId(v string) *NiftyConfigureElasticLoadBalancerHealthCheckInput {
	s.ElasticLoadBalancerId = &v
	return s
}

// SetElasticLoadBalancerName sets the ElasticLoadBalancerName field's value.
func (s *NiftyConfigureElasticLoadBalancerHealthCheckInput) SetElasticLoadBalancerName(v string) *NiftyConfigureElasticLoadBalancerHealthCheckInput {
	s.ElasticLoadBalancerName = &v
	return s
}

// SetElasticLoadBalancerPort sets the ElasticLoadBalancerPort field's value.
func (s *NiftyConfigureElasticLoadBalancerHealthCheckInput) SetElasticLoadBalancerPort(v int64) *NiftyConfigureElasticLoadBalancerHealthCheckInput {
	s.ElasticLoadBalancerPort = &v
	return s
}

// SetHealthCheck sets the HealthCheck field's value.
func (s *NiftyConfigureElasticLoadBalancerHealthCheckInput) SetHealthCheck(v *RequestHealthCheckStruct) *NiftyConfigureElasticLoadBalancerHealthCheckInput {
	s.HealthCheck = v
	return s
}

// SetInstancePort sets the InstancePort field's value.
func (s *NiftyConfigureElasticLoadBalancerHealthCheckInput) SetInstancePort(v int64) *NiftyConfigureElasticLoadBalancerHealthCheckInput {
	s.InstancePort = &v
	return s
}

// SetProtocol sets the Protocol field's value.
func (s *NiftyConfigureElasticLoadBalancerHealthCheckInput) SetProtocol(v string) *NiftyConfigureElasticLoadBalancerHealthCheckInput {
	s.Protocol = &v
	return s
}

type NiftyConfigureElasticLoadBalancerHealthCheckOutput struct {
	_ struct{} `type:"structure"`

	HealthCheck *HealthCheck `locationName:"HealthCheck" type:"structure"`

	NiftyConfigureElasticLoadBalancerHealthCheckResult *NiftyConfigureElasticLoadBalancerHealthCheckOutput `locationName:"NiftyConfigureElasticLoadBalancerHealthCheckResult" type:"structure"`

	ResponseMetadata *ResponseMetadata `locationName:"ResponseMetadata" type:"structure"`
}

// String returns the string representation
func (s NiftyConfigureElasticLoadBalancerHealthCheckOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyConfigureElasticLoadBalancerHealthCheckOutput) GoString() string {
	return s.String()
}

// SetHealthCheck sets the HealthCheck field's value.
func (s *NiftyConfigureElasticLoadBalancerHealthCheckOutput) SetHealthCheck(v *HealthCheck) *NiftyConfigureElasticLoadBalancerHealthCheckOutput {
	s.HealthCheck = v
	return s
}

// SetNiftyConfigureElasticLoadBalancerHealthCheckResult sets the NiftyConfigureElasticLoadBalancerHealthCheckResult field's value.
func (s *NiftyConfigureElasticLoadBalancerHealthCheckOutput) SetNiftyConfigureElasticLoadBalancerHealthCheckResult(v *NiftyConfigureElasticLoadBalancerHealthCheckOutput) *NiftyConfigureElasticLoadBalancerHealthCheckOutput {
	s.NiftyConfigureElasticLoadBalancerHealthCheckResult = v
	return s
}

// SetResponseMetadata sets the ResponseMetadata field's value.
func (s *NiftyConfigureElasticLoadBalancerHealthCheckOutput) SetResponseMetadata(v *ResponseMetadata) *NiftyConfigureElasticLoadBalancerHealthCheckOutput {
	s.ResponseMetadata = v
	return s
}

type NiftyCreateAlarmInput struct {
	_ struct{} `type:"structure"`

	AlarmCondition *string `locationName:"AlarmCondition" type:"string"`

	Description *string `locationName:"Description" type:"string"`

	ElasticLoadBalancerName []*string `locationName:"ElasticLoadBalancerName" type:"list"`

	ElasticLoadBalancerPort []*int64 `locationName:"ElasticLoadBalancerPort" type:"list"`

	ElasticLoadBalancerProtocol []*string `locationName:"ElasticLoadBalancerProtocol" type:"list"`

	EmailAddress []*string `locationName:"EmailAddress" type:"list"`

	FunctionName *string `locationName:"FunctionName" type:"string"`

	InstanceId []*string `locationName:"InstanceId" type:"list"`

	LoadBalancerName []*string `locationName:"LoadBalancerName" type:"list"`

	LoadBalancerPort []*int64 `locationName:"LoadBalancerPort" type:"list"`

	Partition []*string `locationName:"Partition" type:"list"`

	Rule []*RequestRuleStruct `locationName:"Rule" type:"list"`

	RuleName *string `locationName:"RuleName" type:"string"`

	Zone *string `locationName:"Zone" type:"string"`
}

// String returns the string representation
func (s NiftyCreateAlarmInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyCreateAlarmInput) GoString() string {
	return s.String()
}

// SetAlarmCondition sets the AlarmCondition field's value.
func (s *NiftyCreateAlarmInput) SetAlarmCondition(v string) *NiftyCreateAlarmInput {
	s.AlarmCondition = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *NiftyCreateAlarmInput) SetDescription(v string) *NiftyCreateAlarmInput {
	s.Description = &v
	return s
}

// SetElasticLoadBalancerName sets the ElasticLoadBalancerName field's value.
func (s *NiftyCreateAlarmInput) SetElasticLoadBalancerName(v []*string) *NiftyCreateAlarmInput {
	s.ElasticLoadBalancerName = v
	return s
}

// SetElasticLoadBalancerPort sets the ElasticLoadBalancerPort field's value.
func (s *NiftyCreateAlarmInput) SetElasticLoadBalancerPort(v []*int64) *NiftyCreateAlarmInput {
	s.ElasticLoadBalancerPort = v
	return s
}

// SetElasticLoadBalancerProtocol sets the ElasticLoadBalancerProtocol field's value.
func (s *NiftyCreateAlarmInput) SetElasticLoadBalancerProtocol(v []*string) *NiftyCreateAlarmInput {
	s.ElasticLoadBalancerProtocol = v
	return s
}

// SetEmailAddress sets the EmailAddress field's value.
func (s *NiftyCreateAlarmInput) SetEmailAddress(v []*string) *NiftyCreateAlarmInput {
	s.EmailAddress = v
	return s
}

// SetFunctionName sets the FunctionName field's value.
func (s *NiftyCreateAlarmInput) SetFunctionName(v string) *NiftyCreateAlarmInput {
	s.FunctionName = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *NiftyCreateAlarmInput) SetInstanceId(v []*string) *NiftyCreateAlarmInput {
	s.InstanceId = v
	return s
}

// SetLoadBalancerName sets the LoadBalancerName field's value.
func (s *NiftyCreateAlarmInput) SetLoadBalancerName(v []*string) *NiftyCreateAlarmInput {
	s.LoadBalancerName = v
	return s
}

// SetLoadBalancerPort sets the LoadBalancerPort field's value.
func (s *NiftyCreateAlarmInput) SetLoadBalancerPort(v []*int64) *NiftyCreateAlarmInput {
	s.LoadBalancerPort = v
	return s
}

// SetPartition sets the Partition field's value.
func (s *NiftyCreateAlarmInput) SetPartition(v []*string) *NiftyCreateAlarmInput {
	s.Partition = v
	return s
}

// SetRule sets the Rule field's value.
func (s *NiftyCreateAlarmInput) SetRule(v []*RequestRuleStruct) *NiftyCreateAlarmInput {
	s.Rule = v
	return s
}

// SetRuleName sets the RuleName field's value.
func (s *NiftyCreateAlarmInput) SetRuleName(v string) *NiftyCreateAlarmInput {
	s.RuleName = &v
	return s
}

// SetZone sets the Zone field's value.
func (s *NiftyCreateAlarmInput) SetZone(v string) *NiftyCreateAlarmInput {
	s.Zone = &v
	return s
}

type NiftyCreateAlarmOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s NiftyCreateAlarmOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyCreateAlarmOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyCreateAlarmOutput) SetRequestId(v string) *NiftyCreateAlarmOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *NiftyCreateAlarmOutput) SetReturn(v bool) *NiftyCreateAlarmOutput {
	s.Return = &v
	return s
}

type NiftyCreateAutoScalingGroupInput struct {
	_ struct{} `type:"structure"`

	AutoScalingGroupName *string `locationName:"AutoScalingGroupName" type:"string"`

	ChangeInCapacity *int64 `locationName:"ChangeInCapacity" type:"integer"`

	DefaultCooldown *int64 `locationName:"DefaultCooldown" type:"integer"`

	Description *string `locationName:"Description" type:"string"`

	ImageId *string `locationName:"ImageId" type:"string"`

	InstanceLifecycleLimit *int64 `locationName:"InstanceLifecycleLimit" type:"integer"`

	InstanceType *string `locationName:"InstanceType" type:"string"`

	LoadBalancers []*RequestLoadBalancersStruct `locationName:"LoadBalancers" type:"list"`

	MaxSize *int64 `locationName:"MaxSize" type:"integer"`

	MinSize *int64 `locationName:"MinSize" type:"integer"`

	Scaleout *int64 `locationName:"Scaleout" type:"integer"`

	ScaleoutCondition *string `locationName:"ScaleoutCondition" type:"string"`

	ScalingSchedule []*RequestScalingScheduleStruct `locationName:"ScalingSchedule" type:"list"`

	ScalingTrigger []*RequestScalingTriggerStruct `locationName:"ScalingTrigger" type:"list"`

	SecurityGroup []*string `locationName:"SecurityGroup" type:"list"`
}

// String returns the string representation
func (s NiftyCreateAutoScalingGroupInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyCreateAutoScalingGroupInput) GoString() string {
	return s.String()
}

// SetAutoScalingGroupName sets the AutoScalingGroupName field's value.
func (s *NiftyCreateAutoScalingGroupInput) SetAutoScalingGroupName(v string) *NiftyCreateAutoScalingGroupInput {
	s.AutoScalingGroupName = &v
	return s
}

// SetChangeInCapacity sets the ChangeInCapacity field's value.
func (s *NiftyCreateAutoScalingGroupInput) SetChangeInCapacity(v int64) *NiftyCreateAutoScalingGroupInput {
	s.ChangeInCapacity = &v
	return s
}

// SetDefaultCooldown sets the DefaultCooldown field's value.
func (s *NiftyCreateAutoScalingGroupInput) SetDefaultCooldown(v int64) *NiftyCreateAutoScalingGroupInput {
	s.DefaultCooldown = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *NiftyCreateAutoScalingGroupInput) SetDescription(v string) *NiftyCreateAutoScalingGroupInput {
	s.Description = &v
	return s
}

// SetImageId sets the ImageId field's value.
func (s *NiftyCreateAutoScalingGroupInput) SetImageId(v string) *NiftyCreateAutoScalingGroupInput {
	s.ImageId = &v
	return s
}

// SetInstanceLifecycleLimit sets the InstanceLifecycleLimit field's value.
func (s *NiftyCreateAutoScalingGroupInput) SetInstanceLifecycleLimit(v int64) *NiftyCreateAutoScalingGroupInput {
	s.InstanceLifecycleLimit = &v
	return s
}

// SetInstanceType sets the InstanceType field's value.
func (s *NiftyCreateAutoScalingGroupInput) SetInstanceType(v string) *NiftyCreateAutoScalingGroupInput {
	s.InstanceType = &v
	return s
}

// SetLoadBalancers sets the LoadBalancers field's value.
func (s *NiftyCreateAutoScalingGroupInput) SetLoadBalancers(v []*RequestLoadBalancersStruct) *NiftyCreateAutoScalingGroupInput {
	s.LoadBalancers = v
	return s
}

// SetMaxSize sets the MaxSize field's value.
func (s *NiftyCreateAutoScalingGroupInput) SetMaxSize(v int64) *NiftyCreateAutoScalingGroupInput {
	s.MaxSize = &v
	return s
}

// SetMinSize sets the MinSize field's value.
func (s *NiftyCreateAutoScalingGroupInput) SetMinSize(v int64) *NiftyCreateAutoScalingGroupInput {
	s.MinSize = &v
	return s
}

// SetScaleout sets the Scaleout field's value.
func (s *NiftyCreateAutoScalingGroupInput) SetScaleout(v int64) *NiftyCreateAutoScalingGroupInput {
	s.Scaleout = &v
	return s
}

// SetScaleoutCondition sets the ScaleoutCondition field's value.
func (s *NiftyCreateAutoScalingGroupInput) SetScaleoutCondition(v string) *NiftyCreateAutoScalingGroupInput {
	s.ScaleoutCondition = &v
	return s
}

// SetScalingSchedule sets the ScalingSchedule field's value.
func (s *NiftyCreateAutoScalingGroupInput) SetScalingSchedule(v []*RequestScalingScheduleStruct) *NiftyCreateAutoScalingGroupInput {
	s.ScalingSchedule = v
	return s
}

// SetScalingTrigger sets the ScalingTrigger field's value.
func (s *NiftyCreateAutoScalingGroupInput) SetScalingTrigger(v []*RequestScalingTriggerStruct) *NiftyCreateAutoScalingGroupInput {
	s.ScalingTrigger = v
	return s
}

// SetSecurityGroup sets the SecurityGroup field's value.
func (s *NiftyCreateAutoScalingGroupInput) SetSecurityGroup(v []*string) *NiftyCreateAutoScalingGroupInput {
	s.SecurityGroup = v
	return s
}

type NiftyCreateAutoScalingGroupOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s NiftyCreateAutoScalingGroupOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyCreateAutoScalingGroupOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyCreateAutoScalingGroupOutput) SetRequestId(v string) *NiftyCreateAutoScalingGroupOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *NiftyCreateAutoScalingGroupOutput) SetReturn(v bool) *NiftyCreateAutoScalingGroupOutput {
	s.Return = &v
	return s
}

type NiftyCreateDhcpConfigInput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s NiftyCreateDhcpConfigInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyCreateDhcpConfigInput) GoString() string {
	return s.String()
}

type NiftyCreateDhcpConfigOutput struct {
	_ struct{} `type:"structure"`

	DhcpConfig *DhcpConfig `locationName:"dhcpConfig" type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`
}

// String returns the string representation
func (s NiftyCreateDhcpConfigOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyCreateDhcpConfigOutput) GoString() string {
	return s.String()
}

// SetDhcpConfig sets the DhcpConfig field's value.
func (s *NiftyCreateDhcpConfigOutput) SetDhcpConfig(v *DhcpConfig) *NiftyCreateDhcpConfigOutput {
	s.DhcpConfig = v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyCreateDhcpConfigOutput) SetRequestId(v string) *NiftyCreateDhcpConfigOutput {
	s.RequestId = &v
	return s
}

type NiftyCreateDhcpIpAddressPoolInput struct {
	_ struct{} `type:"structure"`

	Description *string `locationName:"Description" type:"string"`

	DhcpConfigId *string `locationName:"DhcpConfigId" type:"string"`

	StartIpAddress *string `locationName:"StartIpAddress" type:"string"`

	StopIpAddress *string `locationName:"StopIpAddress" type:"string"`
}

// String returns the string representation
func (s NiftyCreateDhcpIpAddressPoolInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyCreateDhcpIpAddressPoolInput) GoString() string {
	return s.String()
}

// SetDescription sets the Description field's value.
func (s *NiftyCreateDhcpIpAddressPoolInput) SetDescription(v string) *NiftyCreateDhcpIpAddressPoolInput {
	s.Description = &v
	return s
}

// SetDhcpConfigId sets the DhcpConfigId field's value.
func (s *NiftyCreateDhcpIpAddressPoolInput) SetDhcpConfigId(v string) *NiftyCreateDhcpIpAddressPoolInput {
	s.DhcpConfigId = &v
	return s
}

// SetStartIpAddress sets the StartIpAddress field's value.
func (s *NiftyCreateDhcpIpAddressPoolInput) SetStartIpAddress(v string) *NiftyCreateDhcpIpAddressPoolInput {
	s.StartIpAddress = &v
	return s
}

// SetStopIpAddress sets the StopIpAddress field's value.
func (s *NiftyCreateDhcpIpAddressPoolInput) SetStopIpAddress(v string) *NiftyCreateDhcpIpAddressPoolInput {
	s.StopIpAddress = &v
	return s
}

type NiftyCreateDhcpIpAddressPoolOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s NiftyCreateDhcpIpAddressPoolOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyCreateDhcpIpAddressPoolOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyCreateDhcpIpAddressPoolOutput) SetRequestId(v string) *NiftyCreateDhcpIpAddressPoolOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *NiftyCreateDhcpIpAddressPoolOutput) SetReturn(v bool) *NiftyCreateDhcpIpAddressPoolOutput {
	s.Return = &v
	return s
}

type NiftyCreateDhcpStaticMappingInput struct {
	_ struct{} `type:"structure"`

	Description *string `locationName:"Description" type:"string"`

	DhcpConfigId *string `locationName:"DhcpConfigId" type:"string"`

	IpAddress *string `locationName:"IpAddress" type:"string"`

	MacAddress *string `locationName:"MacAddress" type:"string"`
}

// String returns the string representation
func (s NiftyCreateDhcpStaticMappingInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyCreateDhcpStaticMappingInput) GoString() string {
	return s.String()
}

// SetDescription sets the Description field's value.
func (s *NiftyCreateDhcpStaticMappingInput) SetDescription(v string) *NiftyCreateDhcpStaticMappingInput {
	s.Description = &v
	return s
}

// SetDhcpConfigId sets the DhcpConfigId field's value.
func (s *NiftyCreateDhcpStaticMappingInput) SetDhcpConfigId(v string) *NiftyCreateDhcpStaticMappingInput {
	s.DhcpConfigId = &v
	return s
}

// SetIpAddress sets the IpAddress field's value.
func (s *NiftyCreateDhcpStaticMappingInput) SetIpAddress(v string) *NiftyCreateDhcpStaticMappingInput {
	s.IpAddress = &v
	return s
}

// SetMacAddress sets the MacAddress field's value.
func (s *NiftyCreateDhcpStaticMappingInput) SetMacAddress(v string) *NiftyCreateDhcpStaticMappingInput {
	s.MacAddress = &v
	return s
}

type NiftyCreateDhcpStaticMappingOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s NiftyCreateDhcpStaticMappingOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyCreateDhcpStaticMappingOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyCreateDhcpStaticMappingOutput) SetRequestId(v string) *NiftyCreateDhcpStaticMappingOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *NiftyCreateDhcpStaticMappingOutput) SetReturn(v bool) *NiftyCreateDhcpStaticMappingOutput {
	s.Return = &v
	return s
}

type NiftyCreateElasticLoadBalancerInput struct {
	_ struct{} `type:"structure"`

	AccountingType *string `locationName:"AccountingType" type:"string"`

	AvailabilityZones []*string `locationName:"AvailabilityZones" locationNameList:"member" type:"list"`

	ElasticLoadBalancerName *string `locationName:"ElasticLoadBalancerName" type:"string"`

	Listeners []*RequestListenersStruct `locationName:"Listeners" locationNameList:"member" type:"list"`

	NetworkInterface []*RequestNetworkInterfaceStruct `locationName:"NetworkInterface" type:"list"`

	NetworkVolume *int64 `locationName:"NetworkVolume" type:"integer"`
}

// String returns the string representation
func (s NiftyCreateElasticLoadBalancerInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyCreateElasticLoadBalancerInput) GoString() string {
	return s.String()
}

// SetAccountingType sets the AccountingType field's value.
func (s *NiftyCreateElasticLoadBalancerInput) SetAccountingType(v string) *NiftyCreateElasticLoadBalancerInput {
	s.AccountingType = &v
	return s
}

// SetAvailabilityZones sets the AvailabilityZones field's value.
func (s *NiftyCreateElasticLoadBalancerInput) SetAvailabilityZones(v []*string) *NiftyCreateElasticLoadBalancerInput {
	s.AvailabilityZones = v
	return s
}

// SetElasticLoadBalancerName sets the ElasticLoadBalancerName field's value.
func (s *NiftyCreateElasticLoadBalancerInput) SetElasticLoadBalancerName(v string) *NiftyCreateElasticLoadBalancerInput {
	s.ElasticLoadBalancerName = &v
	return s
}

// SetListeners sets the Listeners field's value.
func (s *NiftyCreateElasticLoadBalancerInput) SetListeners(v []*RequestListenersStruct) *NiftyCreateElasticLoadBalancerInput {
	s.Listeners = v
	return s
}

// SetNetworkInterface sets the NetworkInterface field's value.
func (s *NiftyCreateElasticLoadBalancerInput) SetNetworkInterface(v []*RequestNetworkInterfaceStruct) *NiftyCreateElasticLoadBalancerInput {
	s.NetworkInterface = v
	return s
}

// SetNetworkVolume sets the NetworkVolume field's value.
func (s *NiftyCreateElasticLoadBalancerInput) SetNetworkVolume(v int64) *NiftyCreateElasticLoadBalancerInput {
	s.NetworkVolume = &v
	return s
}

type NiftyCreateElasticLoadBalancerOutput struct {
	_ struct{} `type:"structure"`

	DNSName *string `locationName:"DNSName" type:"string"`

	NiftyCreateElasticLoadBalancerResult *NiftyCreateElasticLoadBalancerOutput `locationName:"NiftyCreateElasticLoadBalancerResult" type:"structure"`

	ResponseMetadata *ResponseMetadata `locationName:"ResponseMetadata" type:"structure"`
}

// String returns the string representation
func (s NiftyCreateElasticLoadBalancerOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyCreateElasticLoadBalancerOutput) GoString() string {
	return s.String()
}

// SetDNSName sets the DNSName field's value.
func (s *NiftyCreateElasticLoadBalancerOutput) SetDNSName(v string) *NiftyCreateElasticLoadBalancerOutput {
	s.DNSName = &v
	return s
}

// SetNiftyCreateElasticLoadBalancerResult sets the NiftyCreateElasticLoadBalancerResult field's value.
func (s *NiftyCreateElasticLoadBalancerOutput) SetNiftyCreateElasticLoadBalancerResult(v *NiftyCreateElasticLoadBalancerOutput) *NiftyCreateElasticLoadBalancerOutput {
	s.NiftyCreateElasticLoadBalancerResult = v
	return s
}

// SetResponseMetadata sets the ResponseMetadata field's value.
func (s *NiftyCreateElasticLoadBalancerOutput) SetResponseMetadata(v *ResponseMetadata) *NiftyCreateElasticLoadBalancerOutput {
	s.ResponseMetadata = v
	return s
}

type NiftyCreateInstanceSnapshotInput struct {
	_ struct{} `type:"structure"`

	Description *string `locationName:"Description" type:"string"`

	InstanceId *string `locationName:"InstanceId" type:"string"`

	SnapshotName *string `locationName:"SnapshotName" type:"string"`
}

// String returns the string representation
func (s NiftyCreateInstanceSnapshotInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyCreateInstanceSnapshotInput) GoString() string {
	return s.String()
}

// SetDescription sets the Description field's value.
func (s *NiftyCreateInstanceSnapshotInput) SetDescription(v string) *NiftyCreateInstanceSnapshotInput {
	s.Description = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *NiftyCreateInstanceSnapshotInput) SetInstanceId(v string) *NiftyCreateInstanceSnapshotInput {
	s.InstanceId = &v
	return s
}

// SetSnapshotName sets the SnapshotName field's value.
func (s *NiftyCreateInstanceSnapshotInput) SetSnapshotName(v string) *NiftyCreateInstanceSnapshotInput {
	s.SnapshotName = &v
	return s
}

type NiftyCreateInstanceSnapshotOutput struct {
	_ struct{} `type:"structure"`

	InstanceSet []*InstanceSetItem `locationName:"instanceSet" locationNameList:"item" type:"list"`

	RequestId *string `locationName:"requestId" type:"string"`

	SnapshotName *string `locationName:"snapshotName" type:"string"`
}

// String returns the string representation
func (s NiftyCreateInstanceSnapshotOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyCreateInstanceSnapshotOutput) GoString() string {
	return s.String()
}

// SetInstanceSet sets the InstanceSet field's value.
func (s *NiftyCreateInstanceSnapshotOutput) SetInstanceSet(v []*InstanceSetItem) *NiftyCreateInstanceSnapshotOutput {
	s.InstanceSet = v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyCreateInstanceSnapshotOutput) SetRequestId(v string) *NiftyCreateInstanceSnapshotOutput {
	s.RequestId = &v
	return s
}

// SetSnapshotName sets the SnapshotName field's value.
func (s *NiftyCreateInstanceSnapshotOutput) SetSnapshotName(v string) *NiftyCreateInstanceSnapshotOutput {
	s.SnapshotName = &v
	return s
}

type NiftyCreateNatRuleInput struct {
	_ struct{} `type:"structure"`

	Description *string `locationName:"Description" type:"string"`

	Destination *RequestDestinationStruct `locationName:"Destination" type:"structure"`

	InboundInterface *RequestInboundInterfaceStruct `locationName:"InboundInterface" type:"structure"`

	NatTableId *string `locationName:"NatTableId" type:"string"`

	NatType *string `locationName:"NatType" type:"string"`

	OutboundInterface *RequestOutboundInterfaceStruct `locationName:"OutboundInterface" type:"structure"`

	Protocol *string `locationName:"Protocol" type:"string"`

	RuleNumber *string `locationName:"RuleNumber" type:"string"`

	Source *RequestSourceStruct `locationName:"Source" type:"structure"`

	Translation *RequestTranslationStruct `locationName:"Translation" type:"structure"`
}

// String returns the string representation
func (s NiftyCreateNatRuleInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyCreateNatRuleInput) GoString() string {
	return s.String()
}

// SetDescription sets the Description field's value.
func (s *NiftyCreateNatRuleInput) SetDescription(v string) *NiftyCreateNatRuleInput {
	s.Description = &v
	return s
}

// SetDestination sets the Destination field's value.
func (s *NiftyCreateNatRuleInput) SetDestination(v *RequestDestinationStruct) *NiftyCreateNatRuleInput {
	s.Destination = v
	return s
}

// SetInboundInterface sets the InboundInterface field's value.
func (s *NiftyCreateNatRuleInput) SetInboundInterface(v *RequestInboundInterfaceStruct) *NiftyCreateNatRuleInput {
	s.InboundInterface = v
	return s
}

// SetNatTableId sets the NatTableId field's value.
func (s *NiftyCreateNatRuleInput) SetNatTableId(v string) *NiftyCreateNatRuleInput {
	s.NatTableId = &v
	return s
}

// SetNatType sets the NatType field's value.
func (s *NiftyCreateNatRuleInput) SetNatType(v string) *NiftyCreateNatRuleInput {
	s.NatType = &v
	return s
}

// SetOutboundInterface sets the OutboundInterface field's value.
func (s *NiftyCreateNatRuleInput) SetOutboundInterface(v *RequestOutboundInterfaceStruct) *NiftyCreateNatRuleInput {
	s.OutboundInterface = v
	return s
}

// SetProtocol sets the Protocol field's value.
func (s *NiftyCreateNatRuleInput) SetProtocol(v string) *NiftyCreateNatRuleInput {
	s.Protocol = &v
	return s
}

// SetRuleNumber sets the RuleNumber field's value.
func (s *NiftyCreateNatRuleInput) SetRuleNumber(v string) *NiftyCreateNatRuleInput {
	s.RuleNumber = &v
	return s
}

// SetSource sets the Source field's value.
func (s *NiftyCreateNatRuleInput) SetSource(v *RequestSourceStruct) *NiftyCreateNatRuleInput {
	s.Source = v
	return s
}

// SetTranslation sets the Translation field's value.
func (s *NiftyCreateNatRuleInput) SetTranslation(v *RequestTranslationStruct) *NiftyCreateNatRuleInput {
	s.Translation = v
	return s
}

type NiftyCreateNatRuleOutput struct {
	_ struct{} `type:"structure"`

	NatRule *NatRule `locationName:"natRule" type:"structure"`

	NatTableId *string `locationName:"natTableId" type:"string"`

	RequestId *string `locationName:"requestId" type:"string"`
}

// String returns the string representation
func (s NiftyCreateNatRuleOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyCreateNatRuleOutput) GoString() string {
	return s.String()
}

// SetNatRule sets the NatRule field's value.
func (s *NiftyCreateNatRuleOutput) SetNatRule(v *NatRule) *NiftyCreateNatRuleOutput {
	s.NatRule = v
	return s
}

// SetNatTableId sets the NatTableId field's value.
func (s *NiftyCreateNatRuleOutput) SetNatTableId(v string) *NiftyCreateNatRuleOutput {
	s.NatTableId = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyCreateNatRuleOutput) SetRequestId(v string) *NiftyCreateNatRuleOutput {
	s.RequestId = &v
	return s
}

type NiftyCreateNatTableInput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s NiftyCreateNatTableInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyCreateNatTableInput) GoString() string {
	return s.String()
}

type NiftyCreateNatTableOutput struct {
	_ struct{} `type:"structure"`

	NatTable *NatTable `locationName:"natTable" type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`
}

// String returns the string representation
func (s NiftyCreateNatTableOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyCreateNatTableOutput) GoString() string {
	return s.String()
}

// SetNatTable sets the NatTable field's value.
func (s *NiftyCreateNatTableOutput) SetNatTable(v *NatTable) *NiftyCreateNatTableOutput {
	s.NatTable = v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyCreateNatTableOutput) SetRequestId(v string) *NiftyCreateNatTableOutput {
	s.RequestId = &v
	return s
}

type NiftyCreatePrivateLanInput struct {
	_ struct{} `type:"structure"`

	AccountingType *string `locationName:"AccountingType" type:"string"`

	AvailabilityZone *string `locationName:"AvailabilityZone" type:"string"`

	CidrBlock *string `locationName:"CidrBlock" type:"string"`

	Description *string `locationName:"Description" type:"string"`

	PrivateLanName *string `locationName:"PrivateLanName" type:"string"`
}

// String returns the string representation
func (s NiftyCreatePrivateLanInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyCreatePrivateLanInput) GoString() string {
	return s.String()
}

// SetAccountingType sets the AccountingType field's value.
func (s *NiftyCreatePrivateLanInput) SetAccountingType(v string) *NiftyCreatePrivateLanInput {
	s.AccountingType = &v
	return s
}

// SetAvailabilityZone sets the AvailabilityZone field's value.
func (s *NiftyCreatePrivateLanInput) SetAvailabilityZone(v string) *NiftyCreatePrivateLanInput {
	s.AvailabilityZone = &v
	return s
}

// SetCidrBlock sets the CidrBlock field's value.
func (s *NiftyCreatePrivateLanInput) SetCidrBlock(v string) *NiftyCreatePrivateLanInput {
	s.CidrBlock = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *NiftyCreatePrivateLanInput) SetDescription(v string) *NiftyCreatePrivateLanInput {
	s.Description = &v
	return s
}

// SetPrivateLanName sets the PrivateLanName field's value.
func (s *NiftyCreatePrivateLanInput) SetPrivateLanName(v string) *NiftyCreatePrivateLanInput {
	s.PrivateLanName = &v
	return s
}

type NiftyCreatePrivateLanOutput struct {
	_ struct{} `type:"structure"`

	PrivateLan *PrivateLan `locationName:"privateLan" type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`
}

// String returns the string representation
func (s NiftyCreatePrivateLanOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyCreatePrivateLanOutput) GoString() string {
	return s.String()
}

// SetPrivateLan sets the PrivateLan field's value.
func (s *NiftyCreatePrivateLanOutput) SetPrivateLan(v *PrivateLan) *NiftyCreatePrivateLanOutput {
	s.PrivateLan = v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyCreatePrivateLanOutput) SetRequestId(v string) *NiftyCreatePrivateLanOutput {
	s.RequestId = &v
	return s
}

type NiftyCreateRouterInput struct {
	_ struct{} `type:"structure"`

	AccountingType *string `locationName:"AccountingType" type:"string"`

	AvailabilityZone *string `locationName:"AvailabilityZone" type:"string"`

	Description *string `locationName:"Description" type:"string"`

	NetworkInterface []*RequestNetworkInterfaceStruct `locationName:"NetworkInterface" type:"list"`

	RouterName *string `locationName:"RouterName" type:"string"`

	SecurityGroup []*string `locationName:"SecurityGroup" type:"list"`

	Type *string `locationName:"Type" type:"string"`
}

// String returns the string representation
func (s NiftyCreateRouterInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyCreateRouterInput) GoString() string {
	return s.String()
}

// SetAccountingType sets the AccountingType field's value.
func (s *NiftyCreateRouterInput) SetAccountingType(v string) *NiftyCreateRouterInput {
	s.AccountingType = &v
	return s
}

// SetAvailabilityZone sets the AvailabilityZone field's value.
func (s *NiftyCreateRouterInput) SetAvailabilityZone(v string) *NiftyCreateRouterInput {
	s.AvailabilityZone = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *NiftyCreateRouterInput) SetDescription(v string) *NiftyCreateRouterInput {
	s.Description = &v
	return s
}

// SetNetworkInterface sets the NetworkInterface field's value.
func (s *NiftyCreateRouterInput) SetNetworkInterface(v []*RequestNetworkInterfaceStruct) *NiftyCreateRouterInput {
	s.NetworkInterface = v
	return s
}

// SetRouterName sets the RouterName field's value.
func (s *NiftyCreateRouterInput) SetRouterName(v string) *NiftyCreateRouterInput {
	s.RouterName = &v
	return s
}

// SetSecurityGroup sets the SecurityGroup field's value.
func (s *NiftyCreateRouterInput) SetSecurityGroup(v []*string) *NiftyCreateRouterInput {
	s.SecurityGroup = v
	return s
}

// SetType sets the Type field's value.
func (s *NiftyCreateRouterInput) SetType(v string) *NiftyCreateRouterInput {
	s.Type = &v
	return s
}

type NiftyCreateRouterOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Router *Router `locationName:"router" type:"structure"`
}

// String returns the string representation
func (s NiftyCreateRouterOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyCreateRouterOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyCreateRouterOutput) SetRequestId(v string) *NiftyCreateRouterOutput {
	s.RequestId = &v
	return s
}

// SetRouter sets the Router field's value.
func (s *NiftyCreateRouterOutput) SetRouter(v *Router) *NiftyCreateRouterOutput {
	s.Router = v
	return s
}

type NiftyCreateSeparateInstanceRuleInput struct {
	_ struct{} `type:"structure"`

	InstanceId []*string `locationName:"InstanceId" type:"list"`

	InstanceUniqueId []*string `locationName:"InstanceUniqueId" type:"list"`

	Placement *RequestPlacementStruct `locationName:"Placement" type:"structure"`

	SeparateInstanceRuleDescription *string `locationName:"SeparateInstanceRuleDescription" type:"string"`

	SeparateInstanceRuleName *string `locationName:"SeparateInstanceRuleName" type:"string"`
}

// String returns the string representation
func (s NiftyCreateSeparateInstanceRuleInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyCreateSeparateInstanceRuleInput) GoString() string {
	return s.String()
}

// SetInstanceId sets the InstanceId field's value.
func (s *NiftyCreateSeparateInstanceRuleInput) SetInstanceId(v []*string) *NiftyCreateSeparateInstanceRuleInput {
	s.InstanceId = v
	return s
}

// SetInstanceUniqueId sets the InstanceUniqueId field's value.
func (s *NiftyCreateSeparateInstanceRuleInput) SetInstanceUniqueId(v []*string) *NiftyCreateSeparateInstanceRuleInput {
	s.InstanceUniqueId = v
	return s
}

// SetPlacement sets the Placement field's value.
func (s *NiftyCreateSeparateInstanceRuleInput) SetPlacement(v *RequestPlacementStruct) *NiftyCreateSeparateInstanceRuleInput {
	s.Placement = v
	return s
}

// SetSeparateInstanceRuleDescription sets the SeparateInstanceRuleDescription field's value.
func (s *NiftyCreateSeparateInstanceRuleInput) SetSeparateInstanceRuleDescription(v string) *NiftyCreateSeparateInstanceRuleInput {
	s.SeparateInstanceRuleDescription = &v
	return s
}

// SetSeparateInstanceRuleName sets the SeparateInstanceRuleName field's value.
func (s *NiftyCreateSeparateInstanceRuleInput) SetSeparateInstanceRuleName(v string) *NiftyCreateSeparateInstanceRuleInput {
	s.SeparateInstanceRuleName = &v
	return s
}

type NiftyCreateSeparateInstanceRuleOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *string `locationName:"return" type:"string"`
}

// String returns the string representation
func (s NiftyCreateSeparateInstanceRuleOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyCreateSeparateInstanceRuleOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyCreateSeparateInstanceRuleOutput) SetRequestId(v string) *NiftyCreateSeparateInstanceRuleOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *NiftyCreateSeparateInstanceRuleOutput) SetReturn(v string) *NiftyCreateSeparateInstanceRuleOutput {
	s.Return = &v
	return s
}

type NiftyCreateWebProxyInput struct {
	_ struct{} `type:"structure"`

	Agreement *bool `locationName:"Agreement" type:"boolean"`

	BypassInterface *RequestBypassInterfaceStruct `locationName:"BypassInterface" type:"structure"`

	Description *string `locationName:"Description" type:"string"`

	ListenInterface *RequestListenInterfaceStruct `locationName:"ListenInterface" type:"structure"`

	ListenPort *string `locationName:"ListenPort" type:"string"`

	Option *RequestOptionStruct `locationName:"Option" type:"structure"`

	RouterId *string `locationName:"RouterId" type:"string"`

	RouterName *string `locationName:"RouterName" type:"string"`
}

// String returns the string representation
func (s NiftyCreateWebProxyInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyCreateWebProxyInput) GoString() string {
	return s.String()
}

// SetAgreement sets the Agreement field's value.
func (s *NiftyCreateWebProxyInput) SetAgreement(v bool) *NiftyCreateWebProxyInput {
	s.Agreement = &v
	return s
}

// SetBypassInterface sets the BypassInterface field's value.
func (s *NiftyCreateWebProxyInput) SetBypassInterface(v *RequestBypassInterfaceStruct) *NiftyCreateWebProxyInput {
	s.BypassInterface = v
	return s
}

// SetDescription sets the Description field's value.
func (s *NiftyCreateWebProxyInput) SetDescription(v string) *NiftyCreateWebProxyInput {
	s.Description = &v
	return s
}

// SetListenInterface sets the ListenInterface field's value.
func (s *NiftyCreateWebProxyInput) SetListenInterface(v *RequestListenInterfaceStruct) *NiftyCreateWebProxyInput {
	s.ListenInterface = v
	return s
}

// SetListenPort sets the ListenPort field's value.
func (s *NiftyCreateWebProxyInput) SetListenPort(v string) *NiftyCreateWebProxyInput {
	s.ListenPort = &v
	return s
}

// SetOption sets the Option field's value.
func (s *NiftyCreateWebProxyInput) SetOption(v *RequestOptionStruct) *NiftyCreateWebProxyInput {
	s.Option = v
	return s
}

// SetRouterId sets the RouterId field's value.
func (s *NiftyCreateWebProxyInput) SetRouterId(v string) *NiftyCreateWebProxyInput {
	s.RouterId = &v
	return s
}

// SetRouterName sets the RouterName field's value.
func (s *NiftyCreateWebProxyInput) SetRouterName(v string) *NiftyCreateWebProxyInput {
	s.RouterName = &v
	return s
}

type NiftyCreateWebProxyOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	WebProxy *WebProxy `locationName:"webProxy" type:"structure"`
}

// String returns the string representation
func (s NiftyCreateWebProxyOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyCreateWebProxyOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyCreateWebProxyOutput) SetRequestId(v string) *NiftyCreateWebProxyOutput {
	s.RequestId = &v
	return s
}

// SetWebProxy sets the WebProxy field's value.
func (s *NiftyCreateWebProxyOutput) SetWebProxy(v *WebProxy) *NiftyCreateWebProxyOutput {
	s.WebProxy = v
	return s
}

type NiftyDeleteAlarmInput struct {
	_ struct{} `type:"structure"`

	FunctionName *string `locationName:"FunctionName" type:"string"`

	RuleName *string `locationName:"RuleName" type:"string"`
}

// String returns the string representation
func (s NiftyDeleteAlarmInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDeleteAlarmInput) GoString() string {
	return s.String()
}

// SetFunctionName sets the FunctionName field's value.
func (s *NiftyDeleteAlarmInput) SetFunctionName(v string) *NiftyDeleteAlarmInput {
	s.FunctionName = &v
	return s
}

// SetRuleName sets the RuleName field's value.
func (s *NiftyDeleteAlarmInput) SetRuleName(v string) *NiftyDeleteAlarmInput {
	s.RuleName = &v
	return s
}

type NiftyDeleteAlarmOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s NiftyDeleteAlarmOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDeleteAlarmOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyDeleteAlarmOutput) SetRequestId(v string) *NiftyDeleteAlarmOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *NiftyDeleteAlarmOutput) SetReturn(v bool) *NiftyDeleteAlarmOutput {
	s.Return = &v
	return s
}

type NiftyDeleteAutoScalingGroupInput struct {
	_ struct{} `type:"structure"`

	AutoScalingGroupName *string `locationName:"AutoScalingGroupName" type:"string"`
}

// String returns the string representation
func (s NiftyDeleteAutoScalingGroupInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDeleteAutoScalingGroupInput) GoString() string {
	return s.String()
}

// SetAutoScalingGroupName sets the AutoScalingGroupName field's value.
func (s *NiftyDeleteAutoScalingGroupInput) SetAutoScalingGroupName(v string) *NiftyDeleteAutoScalingGroupInput {
	s.AutoScalingGroupName = &v
	return s
}

type NiftyDeleteAutoScalingGroupOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s NiftyDeleteAutoScalingGroupOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDeleteAutoScalingGroupOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyDeleteAutoScalingGroupOutput) SetRequestId(v string) *NiftyDeleteAutoScalingGroupOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *NiftyDeleteAutoScalingGroupOutput) SetReturn(v bool) *NiftyDeleteAutoScalingGroupOutput {
	s.Return = &v
	return s
}

type NiftyDeleteDhcpConfigInput struct {
	_ struct{} `type:"structure"`

	DhcpConfigId *string `locationName:"DhcpConfigId" type:"string"`
}

// String returns the string representation
func (s NiftyDeleteDhcpConfigInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDeleteDhcpConfigInput) GoString() string {
	return s.String()
}

// SetDhcpConfigId sets the DhcpConfigId field's value.
func (s *NiftyDeleteDhcpConfigInput) SetDhcpConfigId(v string) *NiftyDeleteDhcpConfigInput {
	s.DhcpConfigId = &v
	return s
}

type NiftyDeleteDhcpConfigOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s NiftyDeleteDhcpConfigOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDeleteDhcpConfigOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyDeleteDhcpConfigOutput) SetRequestId(v string) *NiftyDeleteDhcpConfigOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *NiftyDeleteDhcpConfigOutput) SetReturn(v bool) *NiftyDeleteDhcpConfigOutput {
	s.Return = &v
	return s
}

type NiftyDeleteDhcpIpAddressPoolInput struct {
	_ struct{} `type:"structure"`

	DhcpConfigId *string `locationName:"DhcpConfigId" type:"string"`

	StartIpAddress *string `locationName:"StartIpAddress" type:"string"`

	StopIpAddress *string `locationName:"StopIpAddress" type:"string"`
}

// String returns the string representation
func (s NiftyDeleteDhcpIpAddressPoolInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDeleteDhcpIpAddressPoolInput) GoString() string {
	return s.String()
}

// SetDhcpConfigId sets the DhcpConfigId field's value.
func (s *NiftyDeleteDhcpIpAddressPoolInput) SetDhcpConfigId(v string) *NiftyDeleteDhcpIpAddressPoolInput {
	s.DhcpConfigId = &v
	return s
}

// SetStartIpAddress sets the StartIpAddress field's value.
func (s *NiftyDeleteDhcpIpAddressPoolInput) SetStartIpAddress(v string) *NiftyDeleteDhcpIpAddressPoolInput {
	s.StartIpAddress = &v
	return s
}

// SetStopIpAddress sets the StopIpAddress field's value.
func (s *NiftyDeleteDhcpIpAddressPoolInput) SetStopIpAddress(v string) *NiftyDeleteDhcpIpAddressPoolInput {
	s.StopIpAddress = &v
	return s
}

type NiftyDeleteDhcpIpAddressPoolOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s NiftyDeleteDhcpIpAddressPoolOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDeleteDhcpIpAddressPoolOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyDeleteDhcpIpAddressPoolOutput) SetRequestId(v string) *NiftyDeleteDhcpIpAddressPoolOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *NiftyDeleteDhcpIpAddressPoolOutput) SetReturn(v bool) *NiftyDeleteDhcpIpAddressPoolOutput {
	s.Return = &v
	return s
}

type NiftyDeleteDhcpStaticMappingInput struct {
	_ struct{} `type:"structure"`

	DhcpConfigId *string `locationName:"DhcpConfigId" type:"string"`

	IpAddress *string `locationName:"IpAddress" type:"string"`

	MacAddress *string `locationName:"MacAddress" type:"string"`
}

// String returns the string representation
func (s NiftyDeleteDhcpStaticMappingInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDeleteDhcpStaticMappingInput) GoString() string {
	return s.String()
}

// SetDhcpConfigId sets the DhcpConfigId field's value.
func (s *NiftyDeleteDhcpStaticMappingInput) SetDhcpConfigId(v string) *NiftyDeleteDhcpStaticMappingInput {
	s.DhcpConfigId = &v
	return s
}

// SetIpAddress sets the IpAddress field's value.
func (s *NiftyDeleteDhcpStaticMappingInput) SetIpAddress(v string) *NiftyDeleteDhcpStaticMappingInput {
	s.IpAddress = &v
	return s
}

// SetMacAddress sets the MacAddress field's value.
func (s *NiftyDeleteDhcpStaticMappingInput) SetMacAddress(v string) *NiftyDeleteDhcpStaticMappingInput {
	s.MacAddress = &v
	return s
}

type NiftyDeleteDhcpStaticMappingOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s NiftyDeleteDhcpStaticMappingOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDeleteDhcpStaticMappingOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyDeleteDhcpStaticMappingOutput) SetRequestId(v string) *NiftyDeleteDhcpStaticMappingOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *NiftyDeleteDhcpStaticMappingOutput) SetReturn(v bool) *NiftyDeleteDhcpStaticMappingOutput {
	s.Return = &v
	return s
}

type NiftyDeleteElasticLoadBalancerInput struct {
	_ struct{} `type:"structure"`

	ElasticLoadBalancerId *string `locationName:"ElasticLoadBalancerId" type:"string"`

	ElasticLoadBalancerName *string `locationName:"ElasticLoadBalancerName" type:"string"`

	ElasticLoadBalancerPort *int64 `locationName:"ElasticLoadBalancerPort" type:"integer"`

	InstancePort *int64 `locationName:"InstancePort" type:"integer"`

	Protocol *string `locationName:"Protocol" type:"string"`
}

// String returns the string representation
func (s NiftyDeleteElasticLoadBalancerInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDeleteElasticLoadBalancerInput) GoString() string {
	return s.String()
}

// SetElasticLoadBalancerId sets the ElasticLoadBalancerId field's value.
func (s *NiftyDeleteElasticLoadBalancerInput) SetElasticLoadBalancerId(v string) *NiftyDeleteElasticLoadBalancerInput {
	s.ElasticLoadBalancerId = &v
	return s
}

// SetElasticLoadBalancerName sets the ElasticLoadBalancerName field's value.
func (s *NiftyDeleteElasticLoadBalancerInput) SetElasticLoadBalancerName(v string) *NiftyDeleteElasticLoadBalancerInput {
	s.ElasticLoadBalancerName = &v
	return s
}

// SetElasticLoadBalancerPort sets the ElasticLoadBalancerPort field's value.
func (s *NiftyDeleteElasticLoadBalancerInput) SetElasticLoadBalancerPort(v int64) *NiftyDeleteElasticLoadBalancerInput {
	s.ElasticLoadBalancerPort = &v
	return s
}

// SetInstancePort sets the InstancePort field's value.
func (s *NiftyDeleteElasticLoadBalancerInput) SetInstancePort(v int64) *NiftyDeleteElasticLoadBalancerInput {
	s.InstancePort = &v
	return s
}

// SetProtocol sets the Protocol field's value.
func (s *NiftyDeleteElasticLoadBalancerInput) SetProtocol(v string) *NiftyDeleteElasticLoadBalancerInput {
	s.Protocol = &v
	return s
}

type NiftyDeleteElasticLoadBalancerOutput struct {
	_ struct{} `type:"structure"`

	ResponseMetadata *ResponseMetadata `locationName:"ResponseMetadata" type:"structure"`
}

// String returns the string representation
func (s NiftyDeleteElasticLoadBalancerOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDeleteElasticLoadBalancerOutput) GoString() string {
	return s.String()
}

// SetResponseMetadata sets the ResponseMetadata field's value.
func (s *NiftyDeleteElasticLoadBalancerOutput) SetResponseMetadata(v *ResponseMetadata) *NiftyDeleteElasticLoadBalancerOutput {
	s.ResponseMetadata = v
	return s
}

type NiftyDeleteInstanceSnapshotInput struct {
	_ struct{} `type:"structure"`

	InstanceSnapshotId []*string `locationName:"InstanceSnapshotId" type:"list"`

	SnapshotName []*string `locationName:"SnapshotName" type:"list"`
}

// String returns the string representation
func (s NiftyDeleteInstanceSnapshotInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDeleteInstanceSnapshotInput) GoString() string {
	return s.String()
}

// SetInstanceSnapshotId sets the InstanceSnapshotId field's value.
func (s *NiftyDeleteInstanceSnapshotInput) SetInstanceSnapshotId(v []*string) *NiftyDeleteInstanceSnapshotInput {
	s.InstanceSnapshotId = v
	return s
}

// SetSnapshotName sets the SnapshotName field's value.
func (s *NiftyDeleteInstanceSnapshotInput) SetSnapshotName(v []*string) *NiftyDeleteInstanceSnapshotInput {
	s.SnapshotName = v
	return s
}

type NiftyDeleteInstanceSnapshotOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	SnapshotInfoSet []*SnapshotInfoSetItem `locationName:"snapshotInfoSet" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s NiftyDeleteInstanceSnapshotOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDeleteInstanceSnapshotOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyDeleteInstanceSnapshotOutput) SetRequestId(v string) *NiftyDeleteInstanceSnapshotOutput {
	s.RequestId = &v
	return s
}

// SetSnapshotInfoSet sets the SnapshotInfoSet field's value.
func (s *NiftyDeleteInstanceSnapshotOutput) SetSnapshotInfoSet(v []*SnapshotInfoSetItem) *NiftyDeleteInstanceSnapshotOutput {
	s.SnapshotInfoSet = v
	return s
}

type NiftyDeleteNatRuleInput struct {
	_ struct{} `type:"structure"`

	NatTableId *string `locationName:"NatTableId" type:"string"`

	NatType *string `locationName:"NatType" type:"string"`

	RuleNumber *string `locationName:"RuleNumber" type:"string"`
}

// String returns the string representation
func (s NiftyDeleteNatRuleInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDeleteNatRuleInput) GoString() string {
	return s.String()
}

// SetNatTableId sets the NatTableId field's value.
func (s *NiftyDeleteNatRuleInput) SetNatTableId(v string) *NiftyDeleteNatRuleInput {
	s.NatTableId = &v
	return s
}

// SetNatType sets the NatType field's value.
func (s *NiftyDeleteNatRuleInput) SetNatType(v string) *NiftyDeleteNatRuleInput {
	s.NatType = &v
	return s
}

// SetRuleNumber sets the RuleNumber field's value.
func (s *NiftyDeleteNatRuleInput) SetRuleNumber(v string) *NiftyDeleteNatRuleInput {
	s.RuleNumber = &v
	return s
}

type NiftyDeleteNatRuleOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s NiftyDeleteNatRuleOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDeleteNatRuleOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyDeleteNatRuleOutput) SetRequestId(v string) *NiftyDeleteNatRuleOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *NiftyDeleteNatRuleOutput) SetReturn(v bool) *NiftyDeleteNatRuleOutput {
	s.Return = &v
	return s
}

type NiftyDeleteNatTableInput struct {
	_ struct{} `type:"structure"`

	NatTableId *string `locationName:"NatTableId" type:"string"`
}

// String returns the string representation
func (s NiftyDeleteNatTableInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDeleteNatTableInput) GoString() string {
	return s.String()
}

// SetNatTableId sets the NatTableId field's value.
func (s *NiftyDeleteNatTableInput) SetNatTableId(v string) *NiftyDeleteNatTableInput {
	s.NatTableId = &v
	return s
}

type NiftyDeleteNatTableOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s NiftyDeleteNatTableOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDeleteNatTableOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyDeleteNatTableOutput) SetRequestId(v string) *NiftyDeleteNatTableOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *NiftyDeleteNatTableOutput) SetReturn(v bool) *NiftyDeleteNatTableOutput {
	s.Return = &v
	return s
}

type NiftyDeletePrivateLanInput struct {
	_ struct{} `type:"structure"`

	NetworkId *string `locationName:"NetworkId" type:"string"`

	PrivateLanName *string `locationName:"PrivateLanName" type:"string"`
}

// String returns the string representation
func (s NiftyDeletePrivateLanInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDeletePrivateLanInput) GoString() string {
	return s.String()
}

// SetNetworkId sets the NetworkId field's value.
func (s *NiftyDeletePrivateLanInput) SetNetworkId(v string) *NiftyDeletePrivateLanInput {
	s.NetworkId = &v
	return s
}

// SetPrivateLanName sets the PrivateLanName field's value.
func (s *NiftyDeletePrivateLanInput) SetPrivateLanName(v string) *NiftyDeletePrivateLanInput {
	s.PrivateLanName = &v
	return s
}

type NiftyDeletePrivateLanOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s NiftyDeletePrivateLanOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDeletePrivateLanOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyDeletePrivateLanOutput) SetRequestId(v string) *NiftyDeletePrivateLanOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *NiftyDeletePrivateLanOutput) SetReturn(v bool) *NiftyDeletePrivateLanOutput {
	s.Return = &v
	return s
}

type NiftyDeleteRouterInput struct {
	_ struct{} `type:"structure"`

	RouterId *string `locationName:"RouterId" type:"string"`

	RouterName *string `locationName:"RouterName" type:"string"`
}

// String returns the string representation
func (s NiftyDeleteRouterInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDeleteRouterInput) GoString() string {
	return s.String()
}

// SetRouterId sets the RouterId field's value.
func (s *NiftyDeleteRouterInput) SetRouterId(v string) *NiftyDeleteRouterInput {
	s.RouterId = &v
	return s
}

// SetRouterName sets the RouterName field's value.
func (s *NiftyDeleteRouterInput) SetRouterName(v string) *NiftyDeleteRouterInput {
	s.RouterName = &v
	return s
}

type NiftyDeleteRouterOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s NiftyDeleteRouterOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDeleteRouterOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyDeleteRouterOutput) SetRequestId(v string) *NiftyDeleteRouterOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *NiftyDeleteRouterOutput) SetReturn(v bool) *NiftyDeleteRouterOutput {
	s.Return = &v
	return s
}

type NiftyDeleteSeparateInstanceRuleInput struct {
	_ struct{} `type:"structure"`

	SeparateInstanceRuleName *string `locationName:"SeparateInstanceRuleName" type:"string"`
}

// String returns the string representation
func (s NiftyDeleteSeparateInstanceRuleInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDeleteSeparateInstanceRuleInput) GoString() string {
	return s.String()
}

// SetSeparateInstanceRuleName sets the SeparateInstanceRuleName field's value.
func (s *NiftyDeleteSeparateInstanceRuleInput) SetSeparateInstanceRuleName(v string) *NiftyDeleteSeparateInstanceRuleInput {
	s.SeparateInstanceRuleName = &v
	return s
}

type NiftyDeleteSeparateInstanceRuleOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *string `locationName:"return" type:"string"`
}

// String returns the string representation
func (s NiftyDeleteSeparateInstanceRuleOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDeleteSeparateInstanceRuleOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyDeleteSeparateInstanceRuleOutput) SetRequestId(v string) *NiftyDeleteSeparateInstanceRuleOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *NiftyDeleteSeparateInstanceRuleOutput) SetReturn(v string) *NiftyDeleteSeparateInstanceRuleOutput {
	s.Return = &v
	return s
}

type NiftyDeleteWebProxyInput struct {
	_ struct{} `type:"structure"`

	Agreement *bool `locationName:"Agreement" type:"boolean"`

	RouterId *string `locationName:"RouterId" type:"string"`

	RouterName *string `locationName:"RouterName" type:"string"`
}

// String returns the string representation
func (s NiftyDeleteWebProxyInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDeleteWebProxyInput) GoString() string {
	return s.String()
}

// SetAgreement sets the Agreement field's value.
func (s *NiftyDeleteWebProxyInput) SetAgreement(v bool) *NiftyDeleteWebProxyInput {
	s.Agreement = &v
	return s
}

// SetRouterId sets the RouterId field's value.
func (s *NiftyDeleteWebProxyInput) SetRouterId(v string) *NiftyDeleteWebProxyInput {
	s.RouterId = &v
	return s
}

// SetRouterName sets the RouterName field's value.
func (s *NiftyDeleteWebProxyInput) SetRouterName(v string) *NiftyDeleteWebProxyInput {
	s.RouterName = &v
	return s
}

type NiftyDeleteWebProxyOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s NiftyDeleteWebProxyOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDeleteWebProxyOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyDeleteWebProxyOutput) SetRequestId(v string) *NiftyDeleteWebProxyOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *NiftyDeleteWebProxyOutput) SetReturn(v bool) *NiftyDeleteWebProxyOutput {
	s.Return = &v
	return s
}

type NiftyDeregisterInstancesFromElasticLoadBalancerInput struct {
	_ struct{} `type:"structure"`

	ElasticLoadBalancerId *string `locationName:"ElasticLoadBalancerId" type:"string"`

	ElasticLoadBalancerName *string `locationName:"ElasticLoadBalancerName" type:"string"`

	ElasticLoadBalancerPort *int64 `locationName:"ElasticLoadBalancerPort" type:"integer"`

	InstancePort *int64 `locationName:"InstancePort" type:"integer"`

	Instances []*RequestInstancesStruct `locationName:"Instances" locationNameList:"member" type:"list"`

	Protocol *string `locationName:"Protocol" type:"string"`
}

// String returns the string representation
func (s NiftyDeregisterInstancesFromElasticLoadBalancerInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDeregisterInstancesFromElasticLoadBalancerInput) GoString() string {
	return s.String()
}

// SetElasticLoadBalancerId sets the ElasticLoadBalancerId field's value.
func (s *NiftyDeregisterInstancesFromElasticLoadBalancerInput) SetElasticLoadBalancerId(v string) *NiftyDeregisterInstancesFromElasticLoadBalancerInput {
	s.ElasticLoadBalancerId = &v
	return s
}

// SetElasticLoadBalancerName sets the ElasticLoadBalancerName field's value.
func (s *NiftyDeregisterInstancesFromElasticLoadBalancerInput) SetElasticLoadBalancerName(v string) *NiftyDeregisterInstancesFromElasticLoadBalancerInput {
	s.ElasticLoadBalancerName = &v
	return s
}

// SetElasticLoadBalancerPort sets the ElasticLoadBalancerPort field's value.
func (s *NiftyDeregisterInstancesFromElasticLoadBalancerInput) SetElasticLoadBalancerPort(v int64) *NiftyDeregisterInstancesFromElasticLoadBalancerInput {
	s.ElasticLoadBalancerPort = &v
	return s
}

// SetInstancePort sets the InstancePort field's value.
func (s *NiftyDeregisterInstancesFromElasticLoadBalancerInput) SetInstancePort(v int64) *NiftyDeregisterInstancesFromElasticLoadBalancerInput {
	s.InstancePort = &v
	return s
}

// SetInstances sets the Instances field's value.
func (s *NiftyDeregisterInstancesFromElasticLoadBalancerInput) SetInstances(v []*RequestInstancesStruct) *NiftyDeregisterInstancesFromElasticLoadBalancerInput {
	s.Instances = v
	return s
}

// SetProtocol sets the Protocol field's value.
func (s *NiftyDeregisterInstancesFromElasticLoadBalancerInput) SetProtocol(v string) *NiftyDeregisterInstancesFromElasticLoadBalancerInput {
	s.Protocol = &v
	return s
}

type NiftyDeregisterInstancesFromElasticLoadBalancerOutput struct {
	_ struct{} `type:"structure"`

	Instances []*InstancesMemberItem `locationName:"Instances" locationNameList:"member" type:"list"`

	NiftyDeregisterInstancesFromElasticLoadBalancerResult *NiftyDeregisterInstancesFromElasticLoadBalancerOutput `locationName:"NiftyDeregisterInstancesFromElasticLoadBalancerResult" type:"structure"`

	ResponseMetadata *ResponseMetadata `locationName:"ResponseMetadata" type:"structure"`
}

// String returns the string representation
func (s NiftyDeregisterInstancesFromElasticLoadBalancerOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDeregisterInstancesFromElasticLoadBalancerOutput) GoString() string {
	return s.String()
}

// SetInstances sets the Instances field's value.
func (s *NiftyDeregisterInstancesFromElasticLoadBalancerOutput) SetInstances(v []*InstancesMemberItem) *NiftyDeregisterInstancesFromElasticLoadBalancerOutput {
	s.Instances = v
	return s
}

// SetNiftyDeregisterInstancesFromElasticLoadBalancerResult sets the NiftyDeregisterInstancesFromElasticLoadBalancerResult field's value.
func (s *NiftyDeregisterInstancesFromElasticLoadBalancerOutput) SetNiftyDeregisterInstancesFromElasticLoadBalancerResult(v *NiftyDeregisterInstancesFromElasticLoadBalancerOutput) *NiftyDeregisterInstancesFromElasticLoadBalancerOutput {
	s.NiftyDeregisterInstancesFromElasticLoadBalancerResult = v
	return s
}

// SetResponseMetadata sets the ResponseMetadata field's value.
func (s *NiftyDeregisterInstancesFromElasticLoadBalancerOutput) SetResponseMetadata(v *ResponseMetadata) *NiftyDeregisterInstancesFromElasticLoadBalancerOutput {
	s.ResponseMetadata = v
	return s
}

type NiftyDeregisterInstancesFromSeparateInstanceRuleInput struct {
	_ struct{} `type:"structure"`

	InstanceId []*string `locationName:"InstanceId" type:"list"`

	InstanceUniqueId []*string `locationName:"InstanceUniqueId" type:"list"`

	SeparateInstanceRuleName *string `locationName:"SeparateInstanceRuleName" type:"string"`
}

// String returns the string representation
func (s NiftyDeregisterInstancesFromSeparateInstanceRuleInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDeregisterInstancesFromSeparateInstanceRuleInput) GoString() string {
	return s.String()
}

// SetInstanceId sets the InstanceId field's value.
func (s *NiftyDeregisterInstancesFromSeparateInstanceRuleInput) SetInstanceId(v []*string) *NiftyDeregisterInstancesFromSeparateInstanceRuleInput {
	s.InstanceId = v
	return s
}

// SetInstanceUniqueId sets the InstanceUniqueId field's value.
func (s *NiftyDeregisterInstancesFromSeparateInstanceRuleInput) SetInstanceUniqueId(v []*string) *NiftyDeregisterInstancesFromSeparateInstanceRuleInput {
	s.InstanceUniqueId = v
	return s
}

// SetSeparateInstanceRuleName sets the SeparateInstanceRuleName field's value.
func (s *NiftyDeregisterInstancesFromSeparateInstanceRuleInput) SetSeparateInstanceRuleName(v string) *NiftyDeregisterInstancesFromSeparateInstanceRuleInput {
	s.SeparateInstanceRuleName = &v
	return s
}

type NiftyDeregisterInstancesFromSeparateInstanceRuleOutput struct {
	_ struct{} `type:"structure"`

	InstancesSet []*InstancesSetItem `locationName:"instancesSet" locationNameList:"item" type:"list"`

	RequestId *string `locationName:"requestId" type:"string"`
}

// String returns the string representation
func (s NiftyDeregisterInstancesFromSeparateInstanceRuleOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDeregisterInstancesFromSeparateInstanceRuleOutput) GoString() string {
	return s.String()
}

// SetInstancesSet sets the InstancesSet field's value.
func (s *NiftyDeregisterInstancesFromSeparateInstanceRuleOutput) SetInstancesSet(v []*InstancesSetItem) *NiftyDeregisterInstancesFromSeparateInstanceRuleOutput {
	s.InstancesSet = v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyDeregisterInstancesFromSeparateInstanceRuleOutput) SetRequestId(v string) *NiftyDeregisterInstancesFromSeparateInstanceRuleOutput {
	s.RequestId = &v
	return s
}

type NiftyDeregisterRoutersFromSecurityGroupInput struct {
	_ struct{} `type:"structure"`

	GroupName *string `locationName:"GroupName" type:"string"`

	RouterSet []*RequestRouterSetStruct `locationName:"RouterSet" type:"list"`
}

// String returns the string representation
func (s NiftyDeregisterRoutersFromSecurityGroupInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDeregisterRoutersFromSecurityGroupInput) GoString() string {
	return s.String()
}

// SetGroupName sets the GroupName field's value.
func (s *NiftyDeregisterRoutersFromSecurityGroupInput) SetGroupName(v string) *NiftyDeregisterRoutersFromSecurityGroupInput {
	s.GroupName = &v
	return s
}

// SetRouterSet sets the RouterSet field's value.
func (s *NiftyDeregisterRoutersFromSecurityGroupInput) SetRouterSet(v []*RequestRouterSetStruct) *NiftyDeregisterRoutersFromSecurityGroupInput {
	s.RouterSet = v
	return s
}

type NiftyDeregisterRoutersFromSecurityGroupOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	RouterSet []*RouterSetItem `locationName:"routerSet" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s NiftyDeregisterRoutersFromSecurityGroupOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDeregisterRoutersFromSecurityGroupOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyDeregisterRoutersFromSecurityGroupOutput) SetRequestId(v string) *NiftyDeregisterRoutersFromSecurityGroupOutput {
	s.RequestId = &v
	return s
}

// SetRouterSet sets the RouterSet field's value.
func (s *NiftyDeregisterRoutersFromSecurityGroupOutput) SetRouterSet(v []*RouterSetItem) *NiftyDeregisterRoutersFromSecurityGroupOutput {
	s.RouterSet = v
	return s
}

type NiftyDeregisterVpnGatewaysFromSecurityGroupInput struct {
	_ struct{} `type:"structure"`

	GroupName *string `locationName:"GroupName" type:"string"`

	RouterSet []*RequestRouterSetStruct `locationName:"RouterSet" type:"list"`
}

// String returns the string representation
func (s NiftyDeregisterVpnGatewaysFromSecurityGroupInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDeregisterVpnGatewaysFromSecurityGroupInput) GoString() string {
	return s.String()
}

// SetGroupName sets the GroupName field's value.
func (s *NiftyDeregisterVpnGatewaysFromSecurityGroupInput) SetGroupName(v string) *NiftyDeregisterVpnGatewaysFromSecurityGroupInput {
	s.GroupName = &v
	return s
}

// SetRouterSet sets the RouterSet field's value.
func (s *NiftyDeregisterVpnGatewaysFromSecurityGroupInput) SetRouterSet(v []*RequestRouterSetStruct) *NiftyDeregisterVpnGatewaysFromSecurityGroupInput {
	s.RouterSet = v
	return s
}

type NiftyDeregisterVpnGatewaysFromSecurityGroupOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	VpnGatewaySet []*VpnGatewaySetItem `locationName:"vpnGatewaySet" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s NiftyDeregisterVpnGatewaysFromSecurityGroupOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDeregisterVpnGatewaysFromSecurityGroupOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyDeregisterVpnGatewaysFromSecurityGroupOutput) SetRequestId(v string) *NiftyDeregisterVpnGatewaysFromSecurityGroupOutput {
	s.RequestId = &v
	return s
}

// SetVpnGatewaySet sets the VpnGatewaySet field's value.
func (s *NiftyDeregisterVpnGatewaysFromSecurityGroupOutput) SetVpnGatewaySet(v []*VpnGatewaySetItem) *NiftyDeregisterVpnGatewaysFromSecurityGroupOutput {
	s.VpnGatewaySet = v
	return s
}

type NiftyDescribeAlarmHistoryInput struct {
	_ struct{} `type:"structure"`

	Rule []*RequestRuleStruct `locationName:"Rule" type:"list"`
}

// String returns the string representation
func (s NiftyDescribeAlarmHistoryInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDescribeAlarmHistoryInput) GoString() string {
	return s.String()
}

// SetRule sets the Rule field's value.
func (s *NiftyDescribeAlarmHistoryInput) SetRule(v []*RequestRuleStruct) *NiftyDescribeAlarmHistoryInput {
	s.Rule = v
	return s
}

type NiftyDescribeAlarmHistoryOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	ReservationSet []*ReservationSetItem `locationName:"reservationSet" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s NiftyDescribeAlarmHistoryOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDescribeAlarmHistoryOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyDescribeAlarmHistoryOutput) SetRequestId(v string) *NiftyDescribeAlarmHistoryOutput {
	s.RequestId = &v
	return s
}

// SetReservationSet sets the ReservationSet field's value.
func (s *NiftyDescribeAlarmHistoryOutput) SetReservationSet(v []*ReservationSetItem) *NiftyDescribeAlarmHistoryOutput {
	s.ReservationSet = v
	return s
}

type NiftyDescribeAlarmRulesActivitiesInput struct {
	_ struct{} `type:"structure"`

	Rule []*RequestRuleStruct `locationName:"Rule" type:"list"`
}

// String returns the string representation
func (s NiftyDescribeAlarmRulesActivitiesInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDescribeAlarmRulesActivitiesInput) GoString() string {
	return s.String()
}

// SetRule sets the Rule field's value.
func (s *NiftyDescribeAlarmRulesActivitiesInput) SetRule(v []*RequestRuleStruct) *NiftyDescribeAlarmRulesActivitiesInput {
	s.Rule = v
	return s
}

type NiftyDescribeAlarmRulesActivitiesOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	ReservationSet []*ReservationSetItem `locationName:"reservationSet" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s NiftyDescribeAlarmRulesActivitiesOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDescribeAlarmRulesActivitiesOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyDescribeAlarmRulesActivitiesOutput) SetRequestId(v string) *NiftyDescribeAlarmRulesActivitiesOutput {
	s.RequestId = &v
	return s
}

// SetReservationSet sets the ReservationSet field's value.
func (s *NiftyDescribeAlarmRulesActivitiesOutput) SetReservationSet(v []*ReservationSetItem) *NiftyDescribeAlarmRulesActivitiesOutput {
	s.ReservationSet = v
	return s
}

type NiftyDescribeAlarmsInput struct {
	_ struct{} `type:"structure"`

	Rule []*RequestRuleStruct `locationName:"Rule" type:"list"`
}

// String returns the string representation
func (s NiftyDescribeAlarmsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDescribeAlarmsInput) GoString() string {
	return s.String()
}

// SetRule sets the Rule field's value.
func (s *NiftyDescribeAlarmsInput) SetRule(v []*RequestRuleStruct) *NiftyDescribeAlarmsInput {
	s.Rule = v
	return s
}

type NiftyDescribeAlarmsOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	ReservationSet []*ReservationSetItem `locationName:"reservationSet" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s NiftyDescribeAlarmsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDescribeAlarmsOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyDescribeAlarmsOutput) SetRequestId(v string) *NiftyDescribeAlarmsOutput {
	s.RequestId = &v
	return s
}

// SetReservationSet sets the ReservationSet field's value.
func (s *NiftyDescribeAlarmsOutput) SetReservationSet(v []*ReservationSetItem) *NiftyDescribeAlarmsOutput {
	s.ReservationSet = v
	return s
}

type NiftyDescribeAlarmsPartitionsInput struct {
	_ struct{} `type:"structure"`

	InstanceId []*string `locationName:"InstanceId" type:"list"`
}

// String returns the string representation
func (s NiftyDescribeAlarmsPartitionsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDescribeAlarmsPartitionsInput) GoString() string {
	return s.String()
}

// SetInstanceId sets the InstanceId field's value.
func (s *NiftyDescribeAlarmsPartitionsInput) SetInstanceId(v []*string) *NiftyDescribeAlarmsPartitionsInput {
	s.InstanceId = v
	return s
}

type NiftyDescribeAlarmsPartitionsOutput struct {
	_ struct{} `type:"structure"`

	AlarmTargetSet []*AlarmTargetSetItem `locationName:"alarmTargetSet" locationNameList:"item" type:"list"`

	RequestId *string `locationName:"requestId" type:"string"`
}

// String returns the string representation
func (s NiftyDescribeAlarmsPartitionsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDescribeAlarmsPartitionsOutput) GoString() string {
	return s.String()
}

// SetAlarmTargetSet sets the AlarmTargetSet field's value.
func (s *NiftyDescribeAlarmsPartitionsOutput) SetAlarmTargetSet(v []*AlarmTargetSetItem) *NiftyDescribeAlarmsPartitionsOutput {
	s.AlarmTargetSet = v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyDescribeAlarmsPartitionsOutput) SetRequestId(v string) *NiftyDescribeAlarmsPartitionsOutput {
	s.RequestId = &v
	return s
}

type NiftyDescribeAutoScalingGroupsInput struct {
	_ struct{} `type:"structure"`

	AutoScalingGroupName []*string `locationName:"AutoScalingGroupName" type:"list"`
}

// String returns the string representation
func (s NiftyDescribeAutoScalingGroupsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDescribeAutoScalingGroupsInput) GoString() string {
	return s.String()
}

// SetAutoScalingGroupName sets the AutoScalingGroupName field's value.
func (s *NiftyDescribeAutoScalingGroupsInput) SetAutoScalingGroupName(v []*string) *NiftyDescribeAutoScalingGroupsInput {
	s.AutoScalingGroupName = v
	return s
}

type NiftyDescribeAutoScalingGroupsOutput struct {
	_ struct{} `type:"structure"`

	AutoScalingReservationSet []*AutoScalingReservationSetItem `locationName:"autoScalingReservationSet" locationNameList:"item" type:"list"`

	RequestId *string `locationName:"requestId" type:"string"`
}

// String returns the string representation
func (s NiftyDescribeAutoScalingGroupsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDescribeAutoScalingGroupsOutput) GoString() string {
	return s.String()
}

// SetAutoScalingReservationSet sets the AutoScalingReservationSet field's value.
func (s *NiftyDescribeAutoScalingGroupsOutput) SetAutoScalingReservationSet(v []*AutoScalingReservationSetItem) *NiftyDescribeAutoScalingGroupsOutput {
	s.AutoScalingReservationSet = v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyDescribeAutoScalingGroupsOutput) SetRequestId(v string) *NiftyDescribeAutoScalingGroupsOutput {
	s.RequestId = &v
	return s
}

type NiftyDescribeCorporateInfoForCertificateInput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s NiftyDescribeCorporateInfoForCertificateInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDescribeCorporateInfoForCertificateInput) GoString() string {
	return s.String()
}

type NiftyDescribeCorporateInfoForCertificateOutput struct {
	_ struct{} `type:"structure"`

	City *string `locationName:"city" type:"string"`

	CorpGrade *string `locationName:"corpGrade" type:"string"`

	CorpName *string `locationName:"corpName" type:"string"`

	DivisionName *string `locationName:"divisionName" type:"string"`

	KanaName1 *string `locationName:"kanaName1" type:"string"`

	KanaName2 *string `locationName:"kanaName2" type:"string"`

	Name1 *string `locationName:"name1" type:"string"`

	Name2 *string `locationName:"name2" type:"string"`

	PostName *string `locationName:"postName" type:"string"`

	Pref *string `locationName:"pref" type:"string"`

	PresidentName1 *string `locationName:"presidentName1" type:"string"`

	PresidentName2 *string `locationName:"presidentName2" type:"string"`

	RequestId *string `locationName:"requestId" type:"string"`

	TdbCode *string `locationName:"tdbCode" type:"string"`

	Zip1 *string `locationName:"zip1" type:"string"`

	Zip2 *string `locationName:"zip2" type:"string"`
}

// String returns the string representation
func (s NiftyDescribeCorporateInfoForCertificateOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDescribeCorporateInfoForCertificateOutput) GoString() string {
	return s.String()
}

// SetCity sets the City field's value.
func (s *NiftyDescribeCorporateInfoForCertificateOutput) SetCity(v string) *NiftyDescribeCorporateInfoForCertificateOutput {
	s.City = &v
	return s
}

// SetCorpGrade sets the CorpGrade field's value.
func (s *NiftyDescribeCorporateInfoForCertificateOutput) SetCorpGrade(v string) *NiftyDescribeCorporateInfoForCertificateOutput {
	s.CorpGrade = &v
	return s
}

// SetCorpName sets the CorpName field's value.
func (s *NiftyDescribeCorporateInfoForCertificateOutput) SetCorpName(v string) *NiftyDescribeCorporateInfoForCertificateOutput {
	s.CorpName = &v
	return s
}

// SetDivisionName sets the DivisionName field's value.
func (s *NiftyDescribeCorporateInfoForCertificateOutput) SetDivisionName(v string) *NiftyDescribeCorporateInfoForCertificateOutput {
	s.DivisionName = &v
	return s
}

// SetKanaName1 sets the KanaName1 field's value.
func (s *NiftyDescribeCorporateInfoForCertificateOutput) SetKanaName1(v string) *NiftyDescribeCorporateInfoForCertificateOutput {
	s.KanaName1 = &v
	return s
}

// SetKanaName2 sets the KanaName2 field's value.
func (s *NiftyDescribeCorporateInfoForCertificateOutput) SetKanaName2(v string) *NiftyDescribeCorporateInfoForCertificateOutput {
	s.KanaName2 = &v
	return s
}

// SetName1 sets the Name1 field's value.
func (s *NiftyDescribeCorporateInfoForCertificateOutput) SetName1(v string) *NiftyDescribeCorporateInfoForCertificateOutput {
	s.Name1 = &v
	return s
}

// SetName2 sets the Name2 field's value.
func (s *NiftyDescribeCorporateInfoForCertificateOutput) SetName2(v string) *NiftyDescribeCorporateInfoForCertificateOutput {
	s.Name2 = &v
	return s
}

// SetPostName sets the PostName field's value.
func (s *NiftyDescribeCorporateInfoForCertificateOutput) SetPostName(v string) *NiftyDescribeCorporateInfoForCertificateOutput {
	s.PostName = &v
	return s
}

// SetPref sets the Pref field's value.
func (s *NiftyDescribeCorporateInfoForCertificateOutput) SetPref(v string) *NiftyDescribeCorporateInfoForCertificateOutput {
	s.Pref = &v
	return s
}

// SetPresidentName1 sets the PresidentName1 field's value.
func (s *NiftyDescribeCorporateInfoForCertificateOutput) SetPresidentName1(v string) *NiftyDescribeCorporateInfoForCertificateOutput {
	s.PresidentName1 = &v
	return s
}

// SetPresidentName2 sets the PresidentName2 field's value.
func (s *NiftyDescribeCorporateInfoForCertificateOutput) SetPresidentName2(v string) *NiftyDescribeCorporateInfoForCertificateOutput {
	s.PresidentName2 = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyDescribeCorporateInfoForCertificateOutput) SetRequestId(v string) *NiftyDescribeCorporateInfoForCertificateOutput {
	s.RequestId = &v
	return s
}

// SetTdbCode sets the TdbCode field's value.
func (s *NiftyDescribeCorporateInfoForCertificateOutput) SetTdbCode(v string) *NiftyDescribeCorporateInfoForCertificateOutput {
	s.TdbCode = &v
	return s
}

// SetZip1 sets the Zip1 field's value.
func (s *NiftyDescribeCorporateInfoForCertificateOutput) SetZip1(v string) *NiftyDescribeCorporateInfoForCertificateOutput {
	s.Zip1 = &v
	return s
}

// SetZip2 sets the Zip2 field's value.
func (s *NiftyDescribeCorporateInfoForCertificateOutput) SetZip2(v string) *NiftyDescribeCorporateInfoForCertificateOutput {
	s.Zip2 = &v
	return s
}

type NiftyDescribeDhcpConfigsInput struct {
	_ struct{} `type:"structure"`

	DhcpConfigId *string `locationName:"DhcpConfigId" type:"string"`

	Filter []*RequestFilterStruct `locationName:"Filter" type:"list"`
}

// String returns the string representation
func (s NiftyDescribeDhcpConfigsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDescribeDhcpConfigsInput) GoString() string {
	return s.String()
}

// SetDhcpConfigId sets the DhcpConfigId field's value.
func (s *NiftyDescribeDhcpConfigsInput) SetDhcpConfigId(v string) *NiftyDescribeDhcpConfigsInput {
	s.DhcpConfigId = &v
	return s
}

// SetFilter sets the Filter field's value.
func (s *NiftyDescribeDhcpConfigsInput) SetFilter(v []*RequestFilterStruct) *NiftyDescribeDhcpConfigsInput {
	s.Filter = v
	return s
}

type NiftyDescribeDhcpConfigsOutput struct {
	_ struct{} `type:"structure"`

	DhcpConfigsSet []*DhcpConfigsSetItem `locationName:"dhcpConfigsSet" locationNameList:"item" type:"list"`

	RequestId *string `locationName:"requestId" type:"string"`
}

// String returns the string representation
func (s NiftyDescribeDhcpConfigsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDescribeDhcpConfigsOutput) GoString() string {
	return s.String()
}

// SetDhcpConfigsSet sets the DhcpConfigsSet field's value.
func (s *NiftyDescribeDhcpConfigsOutput) SetDhcpConfigsSet(v []*DhcpConfigsSetItem) *NiftyDescribeDhcpConfigsOutput {
	s.DhcpConfigsSet = v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyDescribeDhcpConfigsOutput) SetRequestId(v string) *NiftyDescribeDhcpConfigsOutput {
	s.RequestId = &v
	return s
}

type NiftyDescribeDhcpStatusInput struct {
	_ struct{} `type:"structure"`

	RouterId *string `locationName:"RouterId" type:"string"`

	RouterName *string `locationName:"RouterName" type:"string"`
}

// String returns the string representation
func (s NiftyDescribeDhcpStatusInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDescribeDhcpStatusInput) GoString() string {
	return s.String()
}

// SetRouterId sets the RouterId field's value.
func (s *NiftyDescribeDhcpStatusInput) SetRouterId(v string) *NiftyDescribeDhcpStatusInput {
	s.RouterId = &v
	return s
}

// SetRouterName sets the RouterName field's value.
func (s *NiftyDescribeDhcpStatusInput) SetRouterName(v string) *NiftyDescribeDhcpStatusInput {
	s.RouterName = &v
	return s
}

type NiftyDescribeDhcpStatusOutput struct {
	_ struct{} `type:"structure"`

	DhcpStatusInformationSet []*DhcpStatusInformationSetItem `locationName:"dhcpStatusInformationSet" locationNameList:"item" type:"list"`

	RequestId *string `locationName:"requestId" type:"string"`

	RouterId *string `locationName:"routerId" type:"string"`

	RouterName *string `locationName:"routerName" type:"string"`
}

// String returns the string representation
func (s NiftyDescribeDhcpStatusOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDescribeDhcpStatusOutput) GoString() string {
	return s.String()
}

// SetDhcpStatusInformationSet sets the DhcpStatusInformationSet field's value.
func (s *NiftyDescribeDhcpStatusOutput) SetDhcpStatusInformationSet(v []*DhcpStatusInformationSetItem) *NiftyDescribeDhcpStatusOutput {
	s.DhcpStatusInformationSet = v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyDescribeDhcpStatusOutput) SetRequestId(v string) *NiftyDescribeDhcpStatusOutput {
	s.RequestId = &v
	return s
}

// SetRouterId sets the RouterId field's value.
func (s *NiftyDescribeDhcpStatusOutput) SetRouterId(v string) *NiftyDescribeDhcpStatusOutput {
	s.RouterId = &v
	return s
}

// SetRouterName sets the RouterName field's value.
func (s *NiftyDescribeDhcpStatusOutput) SetRouterName(v string) *NiftyDescribeDhcpStatusOutput {
	s.RouterName = &v
	return s
}

type NiftyDescribeElasticLoadBalancersInput struct {
	_ struct{} `type:"structure"`

	ElasticLoadBalancers *RequestElasticLoadBalancersStruct `locationName:"ElasticLoadBalancers" type:"structure"`

	Filter []*RequestFilterStruct `locationName:"Filter" type:"list"`
}

// String returns the string representation
func (s NiftyDescribeElasticLoadBalancersInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDescribeElasticLoadBalancersInput) GoString() string {
	return s.String()
}

// SetElasticLoadBalancers sets the ElasticLoadBalancers field's value.
func (s *NiftyDescribeElasticLoadBalancersInput) SetElasticLoadBalancers(v *RequestElasticLoadBalancersStruct) *NiftyDescribeElasticLoadBalancersInput {
	s.ElasticLoadBalancers = v
	return s
}

// SetFilter sets the Filter field's value.
func (s *NiftyDescribeElasticLoadBalancersInput) SetFilter(v []*RequestFilterStruct) *NiftyDescribeElasticLoadBalancersInput {
	s.Filter = v
	return s
}

type NiftyDescribeElasticLoadBalancersOutput struct {
	_ struct{} `type:"structure"`

	ElasticLoadBalancerDescriptions []*ElasticLoadBalancerDescriptionsMemberItem `locationName:"ElasticLoadBalancerDescriptions" locationNameList:"member" type:"list"`

	NiftyDescribeElasticLoadBalancersResult *NiftyDescribeElasticLoadBalancersOutput `locationName:"NiftyDescribeElasticLoadBalancersResult" type:"structure"`

	ResponseMetadata *ResponseMetadata `locationName:"ResponseMetadata" type:"structure"`
}

// String returns the string representation
func (s NiftyDescribeElasticLoadBalancersOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDescribeElasticLoadBalancersOutput) GoString() string {
	return s.String()
}

// SetElasticLoadBalancerDescriptions sets the ElasticLoadBalancerDescriptions field's value.
func (s *NiftyDescribeElasticLoadBalancersOutput) SetElasticLoadBalancerDescriptions(v []*ElasticLoadBalancerDescriptionsMemberItem) *NiftyDescribeElasticLoadBalancersOutput {
	s.ElasticLoadBalancerDescriptions = v
	return s
}

// SetNiftyDescribeElasticLoadBalancersResult sets the NiftyDescribeElasticLoadBalancersResult field's value.
func (s *NiftyDescribeElasticLoadBalancersOutput) SetNiftyDescribeElasticLoadBalancersResult(v *NiftyDescribeElasticLoadBalancersOutput) *NiftyDescribeElasticLoadBalancersOutput {
	s.NiftyDescribeElasticLoadBalancersResult = v
	return s
}

// SetResponseMetadata sets the ResponseMetadata field's value.
func (s *NiftyDescribeElasticLoadBalancersOutput) SetResponseMetadata(v *ResponseMetadata) *NiftyDescribeElasticLoadBalancersOutput {
	s.ResponseMetadata = v
	return s
}

type NiftyDescribeInstanceElasticLoadBalancerHealthInput struct {
	_ struct{} `type:"structure"`

	ElasticLoadBalancerId *string `locationName:"ElasticLoadBalancerId" type:"string"`

	ElasticLoadBalancerName *string `locationName:"ElasticLoadBalancerName" type:"string"`

	ElasticLoadBalancerPort *int64 `locationName:"ElasticLoadBalancerPort" type:"integer"`

	InstancePort *int64 `locationName:"InstancePort" type:"integer"`

	Instances []*RequestInstancesStruct `locationName:"Instances" locationNameList:"member" type:"list"`

	Protocol *string `locationName:"Protocol" type:"string"`
}

// String returns the string representation
func (s NiftyDescribeInstanceElasticLoadBalancerHealthInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDescribeInstanceElasticLoadBalancerHealthInput) GoString() string {
	return s.String()
}

// SetElasticLoadBalancerId sets the ElasticLoadBalancerId field's value.
func (s *NiftyDescribeInstanceElasticLoadBalancerHealthInput) SetElasticLoadBalancerId(v string) *NiftyDescribeInstanceElasticLoadBalancerHealthInput {
	s.ElasticLoadBalancerId = &v
	return s
}

// SetElasticLoadBalancerName sets the ElasticLoadBalancerName field's value.
func (s *NiftyDescribeInstanceElasticLoadBalancerHealthInput) SetElasticLoadBalancerName(v string) *NiftyDescribeInstanceElasticLoadBalancerHealthInput {
	s.ElasticLoadBalancerName = &v
	return s
}

// SetElasticLoadBalancerPort sets the ElasticLoadBalancerPort field's value.
func (s *NiftyDescribeInstanceElasticLoadBalancerHealthInput) SetElasticLoadBalancerPort(v int64) *NiftyDescribeInstanceElasticLoadBalancerHealthInput {
	s.ElasticLoadBalancerPort = &v
	return s
}

// SetInstancePort sets the InstancePort field's value.
func (s *NiftyDescribeInstanceElasticLoadBalancerHealthInput) SetInstancePort(v int64) *NiftyDescribeInstanceElasticLoadBalancerHealthInput {
	s.InstancePort = &v
	return s
}

// SetInstances sets the Instances field's value.
func (s *NiftyDescribeInstanceElasticLoadBalancerHealthInput) SetInstances(v []*RequestInstancesStruct) *NiftyDescribeInstanceElasticLoadBalancerHealthInput {
	s.Instances = v
	return s
}

// SetProtocol sets the Protocol field's value.
func (s *NiftyDescribeInstanceElasticLoadBalancerHealthInput) SetProtocol(v string) *NiftyDescribeInstanceElasticLoadBalancerHealthInput {
	s.Protocol = &v
	return s
}

type NiftyDescribeInstanceElasticLoadBalancerHealthOutput struct {
	_ struct{} `type:"structure"`

	InstanceStates []*InstanceStatesMemberItem `locationName:"InstanceStates" locationNameList:"member" type:"list"`

	NiftyDescribeInstanceElasticLoadBalancerHealthResult *NiftyDescribeInstanceElasticLoadBalancerHealthOutput `locationName:"NiftyDescribeInstanceElasticLoadBalancerHealthResult" type:"structure"`

	ResponseMetadata *ResponseMetadata `locationName:"ResponseMetadata" type:"structure"`
}

// String returns the string representation
func (s NiftyDescribeInstanceElasticLoadBalancerHealthOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDescribeInstanceElasticLoadBalancerHealthOutput) GoString() string {
	return s.String()
}

// SetInstanceStates sets the InstanceStates field's value.
func (s *NiftyDescribeInstanceElasticLoadBalancerHealthOutput) SetInstanceStates(v []*InstanceStatesMemberItem) *NiftyDescribeInstanceElasticLoadBalancerHealthOutput {
	s.InstanceStates = v
	return s
}

// SetNiftyDescribeInstanceElasticLoadBalancerHealthResult sets the NiftyDescribeInstanceElasticLoadBalancerHealthResult field's value.
func (s *NiftyDescribeInstanceElasticLoadBalancerHealthOutput) SetNiftyDescribeInstanceElasticLoadBalancerHealthResult(v *NiftyDescribeInstanceElasticLoadBalancerHealthOutput) *NiftyDescribeInstanceElasticLoadBalancerHealthOutput {
	s.NiftyDescribeInstanceElasticLoadBalancerHealthResult = v
	return s
}

// SetResponseMetadata sets the ResponseMetadata field's value.
func (s *NiftyDescribeInstanceElasticLoadBalancerHealthOutput) SetResponseMetadata(v *ResponseMetadata) *NiftyDescribeInstanceElasticLoadBalancerHealthOutput {
	s.ResponseMetadata = v
	return s
}

type NiftyDescribeInstanceSnapshotsInput struct {
	_ struct{} `type:"structure"`

	InstanceSnapshotId []*string `locationName:"InstanceSnapshotId" type:"list"`

	SnapshotName []*string `locationName:"SnapshotName" type:"list"`
}

// String returns the string representation
func (s NiftyDescribeInstanceSnapshotsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDescribeInstanceSnapshotsInput) GoString() string {
	return s.String()
}

// SetInstanceSnapshotId sets the InstanceSnapshotId field's value.
func (s *NiftyDescribeInstanceSnapshotsInput) SetInstanceSnapshotId(v []*string) *NiftyDescribeInstanceSnapshotsInput {
	s.InstanceSnapshotId = v
	return s
}

// SetSnapshotName sets the SnapshotName field's value.
func (s *NiftyDescribeInstanceSnapshotsInput) SetSnapshotName(v []*string) *NiftyDescribeInstanceSnapshotsInput {
	s.SnapshotName = v
	return s
}

type NiftyDescribeInstanceSnapshotsOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	SnapshotInfoSet []*SnapshotInfoSetItem `locationName:"snapshotInfoSet" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s NiftyDescribeInstanceSnapshotsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDescribeInstanceSnapshotsOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyDescribeInstanceSnapshotsOutput) SetRequestId(v string) *NiftyDescribeInstanceSnapshotsOutput {
	s.RequestId = &v
	return s
}

// SetSnapshotInfoSet sets the SnapshotInfoSet field's value.
func (s *NiftyDescribeInstanceSnapshotsOutput) SetSnapshotInfoSet(v []*SnapshotInfoSetItem) *NiftyDescribeInstanceSnapshotsOutput {
	s.SnapshotInfoSet = v
	return s
}

type NiftyDescribeNatTablesInput struct {
	_ struct{} `type:"structure"`

	Filter []*RequestFilterStruct `locationName:"Filter" type:"list"`

	NatTableId []*string `locationName:"NatTableId" type:"list"`
}

// String returns the string representation
func (s NiftyDescribeNatTablesInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDescribeNatTablesInput) GoString() string {
	return s.String()
}

// SetFilter sets the Filter field's value.
func (s *NiftyDescribeNatTablesInput) SetFilter(v []*RequestFilterStruct) *NiftyDescribeNatTablesInput {
	s.Filter = v
	return s
}

// SetNatTableId sets the NatTableId field's value.
func (s *NiftyDescribeNatTablesInput) SetNatTableId(v []*string) *NiftyDescribeNatTablesInput {
	s.NatTableId = v
	return s
}

type NiftyDescribeNatTablesOutput struct {
	_ struct{} `type:"structure"`

	NatTableSet []*NatTableSetItem `locationName:"natTableSet" locationNameList:"item" type:"list"`

	RequestId *string `locationName:"requestId" type:"string"`
}

// String returns the string representation
func (s NiftyDescribeNatTablesOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDescribeNatTablesOutput) GoString() string {
	return s.String()
}

// SetNatTableSet sets the NatTableSet field's value.
func (s *NiftyDescribeNatTablesOutput) SetNatTableSet(v []*NatTableSetItem) *NiftyDescribeNatTablesOutput {
	s.NatTableSet = v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyDescribeNatTablesOutput) SetRequestId(v string) *NiftyDescribeNatTablesOutput {
	s.RequestId = &v
	return s
}

type NiftyDescribePerformanceChartInput struct {
	_ struct{} `type:"structure"`

	DataType []*string `locationName:"DataType" type:"list"`

	FromDate *string `locationName:"FromDate" type:"string"`

	FunctionName *string `locationName:"FunctionName" type:"string"`

	ResourceName []*string `locationName:"ResourceName" type:"list"`

	ToDate *string `locationName:"ToDate" type:"string"`

	ValueType *string `locationName:"ValueType" type:"string"`
}

// String returns the string representation
func (s NiftyDescribePerformanceChartInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDescribePerformanceChartInput) GoString() string {
	return s.String()
}

// SetDataType sets the DataType field's value.
func (s *NiftyDescribePerformanceChartInput) SetDataType(v []*string) *NiftyDescribePerformanceChartInput {
	s.DataType = v
	return s
}

// SetFromDate sets the FromDate field's value.
func (s *NiftyDescribePerformanceChartInput) SetFromDate(v string) *NiftyDescribePerformanceChartInput {
	s.FromDate = &v
	return s
}

// SetFunctionName sets the FunctionName field's value.
func (s *NiftyDescribePerformanceChartInput) SetFunctionName(v string) *NiftyDescribePerformanceChartInput {
	s.FunctionName = &v
	return s
}

// SetResourceName sets the ResourceName field's value.
func (s *NiftyDescribePerformanceChartInput) SetResourceName(v []*string) *NiftyDescribePerformanceChartInput {
	s.ResourceName = v
	return s
}

// SetToDate sets the ToDate field's value.
func (s *NiftyDescribePerformanceChartInput) SetToDate(v string) *NiftyDescribePerformanceChartInput {
	s.ToDate = &v
	return s
}

// SetValueType sets the ValueType field's value.
func (s *NiftyDescribePerformanceChartInput) SetValueType(v string) *NiftyDescribePerformanceChartInput {
	s.ValueType = &v
	return s
}

type NiftyDescribePerformanceChartOutput struct {
	_ struct{} `type:"structure"`

	FunctionName *string `locationName:"functionName" type:"string"`

	PerformanceChartSet []*PerformanceChartSetItem `locationName:"performanceChartSet" locationNameList:"item" type:"list"`

	RequestId *string `locationName:"requestId" type:"string"`

	ValueType *string `locationName:"valueType" type:"string"`
}

// String returns the string representation
func (s NiftyDescribePerformanceChartOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDescribePerformanceChartOutput) GoString() string {
	return s.String()
}

// SetFunctionName sets the FunctionName field's value.
func (s *NiftyDescribePerformanceChartOutput) SetFunctionName(v string) *NiftyDescribePerformanceChartOutput {
	s.FunctionName = &v
	return s
}

// SetPerformanceChartSet sets the PerformanceChartSet field's value.
func (s *NiftyDescribePerformanceChartOutput) SetPerformanceChartSet(v []*PerformanceChartSetItem) *NiftyDescribePerformanceChartOutput {
	s.PerformanceChartSet = v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyDescribePerformanceChartOutput) SetRequestId(v string) *NiftyDescribePerformanceChartOutput {
	s.RequestId = &v
	return s
}

// SetValueType sets the ValueType field's value.
func (s *NiftyDescribePerformanceChartOutput) SetValueType(v string) *NiftyDescribePerformanceChartOutput {
	s.ValueType = &v
	return s
}

type NiftyDescribePrivateLansInput struct {
	_ struct{} `type:"structure"`

	Filter []*RequestFilterStruct `locationName:"Filter" type:"list"`

	NetworkId []*string `locationName:"NetworkId" type:"list"`

	PrivateLanName []*string `locationName:"PrivateLanName" type:"list"`
}

// String returns the string representation
func (s NiftyDescribePrivateLansInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDescribePrivateLansInput) GoString() string {
	return s.String()
}

// SetFilter sets the Filter field's value.
func (s *NiftyDescribePrivateLansInput) SetFilter(v []*RequestFilterStruct) *NiftyDescribePrivateLansInput {
	s.Filter = v
	return s
}

// SetNetworkId sets the NetworkId field's value.
func (s *NiftyDescribePrivateLansInput) SetNetworkId(v []*string) *NiftyDescribePrivateLansInput {
	s.NetworkId = v
	return s
}

// SetPrivateLanName sets the PrivateLanName field's value.
func (s *NiftyDescribePrivateLansInput) SetPrivateLanName(v []*string) *NiftyDescribePrivateLansInput {
	s.PrivateLanName = v
	return s
}

type NiftyDescribePrivateLansOutput struct {
	_ struct{} `type:"structure"`

	PrivateLanSet []*PrivateLanSetItem `locationName:"privateLanSet" locationNameList:"item" type:"list"`

	RequestId *string `locationName:"requestId" type:"string"`
}

// String returns the string representation
func (s NiftyDescribePrivateLansOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDescribePrivateLansOutput) GoString() string {
	return s.String()
}

// SetPrivateLanSet sets the PrivateLanSet field's value.
func (s *NiftyDescribePrivateLansOutput) SetPrivateLanSet(v []*PrivateLanSetItem) *NiftyDescribePrivateLansOutput {
	s.PrivateLanSet = v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyDescribePrivateLansOutput) SetRequestId(v string) *NiftyDescribePrivateLansOutput {
	s.RequestId = &v
	return s
}

type NiftyDescribeRoutersInput struct {
	_ struct{} `type:"structure"`

	Filter []*RequestFilterStruct `locationName:"Filter" type:"list"`

	RouterId []*string `locationName:"RouterId" type:"list"`

	RouterName []*string `locationName:"RouterName" type:"list"`
}

// String returns the string representation
func (s NiftyDescribeRoutersInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDescribeRoutersInput) GoString() string {
	return s.String()
}

// SetFilter sets the Filter field's value.
func (s *NiftyDescribeRoutersInput) SetFilter(v []*RequestFilterStruct) *NiftyDescribeRoutersInput {
	s.Filter = v
	return s
}

// SetRouterId sets the RouterId field's value.
func (s *NiftyDescribeRoutersInput) SetRouterId(v []*string) *NiftyDescribeRoutersInput {
	s.RouterId = v
	return s
}

// SetRouterName sets the RouterName field's value.
func (s *NiftyDescribeRoutersInput) SetRouterName(v []*string) *NiftyDescribeRoutersInput {
	s.RouterName = v
	return s
}

type NiftyDescribeRoutersOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	RouterSet []*RouterSetItem `locationName:"routerSet" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s NiftyDescribeRoutersOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDescribeRoutersOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyDescribeRoutersOutput) SetRequestId(v string) *NiftyDescribeRoutersOutput {
	s.RequestId = &v
	return s
}

// SetRouterSet sets the RouterSet field's value.
func (s *NiftyDescribeRoutersOutput) SetRouterSet(v []*RouterSetItem) *NiftyDescribeRoutersOutput {
	s.RouterSet = v
	return s
}

type NiftyDescribeScalingActivitiesInput struct {
	_ struct{} `type:"structure"`

	ActivityDateFrom *string `locationName:"ActivityDateFrom" type:"string"`

	ActivityDateTo *string `locationName:"ActivityDateTo" type:"string"`

	AutoScalingGroupName *string `locationName:"AutoScalingGroupName" type:"string"`

	Range *RequestRangeStruct `locationName:"Range" type:"structure"`
}

// String returns the string representation
func (s NiftyDescribeScalingActivitiesInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDescribeScalingActivitiesInput) GoString() string {
	return s.String()
}

// SetActivityDateFrom sets the ActivityDateFrom field's value.
func (s *NiftyDescribeScalingActivitiesInput) SetActivityDateFrom(v string) *NiftyDescribeScalingActivitiesInput {
	s.ActivityDateFrom = &v
	return s
}

// SetActivityDateTo sets the ActivityDateTo field's value.
func (s *NiftyDescribeScalingActivitiesInput) SetActivityDateTo(v string) *NiftyDescribeScalingActivitiesInput {
	s.ActivityDateTo = &v
	return s
}

// SetAutoScalingGroupName sets the AutoScalingGroupName field's value.
func (s *NiftyDescribeScalingActivitiesInput) SetAutoScalingGroupName(v string) *NiftyDescribeScalingActivitiesInput {
	s.AutoScalingGroupName = &v
	return s
}

// SetRange sets the Range field's value.
func (s *NiftyDescribeScalingActivitiesInput) SetRange(v *RequestRangeStruct) *NiftyDescribeScalingActivitiesInput {
	s.Range = v
	return s
}

type NiftyDescribeScalingActivitiesOutput struct {
	_ struct{} `type:"structure"`

	AutoScalingGroupName *string `locationName:"autoScalingGroupName" type:"string"`

	LogSet []*LogSetItem `locationName:"logSet" locationNameList:"item" type:"list"`

	RequestId *string `locationName:"requestId" type:"string"`
}

// String returns the string representation
func (s NiftyDescribeScalingActivitiesOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDescribeScalingActivitiesOutput) GoString() string {
	return s.String()
}

// SetAutoScalingGroupName sets the AutoScalingGroupName field's value.
func (s *NiftyDescribeScalingActivitiesOutput) SetAutoScalingGroupName(v string) *NiftyDescribeScalingActivitiesOutput {
	s.AutoScalingGroupName = &v
	return s
}

// SetLogSet sets the LogSet field's value.
func (s *NiftyDescribeScalingActivitiesOutput) SetLogSet(v []*LogSetItem) *NiftyDescribeScalingActivitiesOutput {
	s.LogSet = v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyDescribeScalingActivitiesOutput) SetRequestId(v string) *NiftyDescribeScalingActivitiesOutput {
	s.RequestId = &v
	return s
}

type NiftyDescribeSeparateInstanceRulesInput struct {
	_ struct{} `type:"structure"`

	Filter []*RequestFilterStruct `locationName:"Filter" type:"list"`

	SeparateInstanceRuleName []*string `locationName:"SeparateInstanceRuleName" type:"list"`
}

// String returns the string representation
func (s NiftyDescribeSeparateInstanceRulesInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDescribeSeparateInstanceRulesInput) GoString() string {
	return s.String()
}

// SetFilter sets the Filter field's value.
func (s *NiftyDescribeSeparateInstanceRulesInput) SetFilter(v []*RequestFilterStruct) *NiftyDescribeSeparateInstanceRulesInput {
	s.Filter = v
	return s
}

// SetSeparateInstanceRuleName sets the SeparateInstanceRuleName field's value.
func (s *NiftyDescribeSeparateInstanceRulesInput) SetSeparateInstanceRuleName(v []*string) *NiftyDescribeSeparateInstanceRulesInput {
	s.SeparateInstanceRuleName = v
	return s
}

type NiftyDescribeSeparateInstanceRulesOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	SeparateInstanceRulesInfo []*SeparateInstanceRulesInfoSetItem `locationName:"separateInstanceRulesInfo" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s NiftyDescribeSeparateInstanceRulesOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDescribeSeparateInstanceRulesOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyDescribeSeparateInstanceRulesOutput) SetRequestId(v string) *NiftyDescribeSeparateInstanceRulesOutput {
	s.RequestId = &v
	return s
}

// SetSeparateInstanceRulesInfo sets the SeparateInstanceRulesInfo field's value.
func (s *NiftyDescribeSeparateInstanceRulesOutput) SetSeparateInstanceRulesInfo(v []*SeparateInstanceRulesInfoSetItem) *NiftyDescribeSeparateInstanceRulesOutput {
	s.SeparateInstanceRulesInfo = v
	return s
}

type NiftyDescribeVpnGatewayActivitiesInput struct {
	_ struct{} `type:"structure"`

	NiftyVpnGatewayName *string `locationName:"NiftyVpnGatewayName" type:"string"`

	VpnGatewayId *string `locationName:"VpnGatewayId" type:"string"`
}

// String returns the string representation
func (s NiftyDescribeVpnGatewayActivitiesInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDescribeVpnGatewayActivitiesInput) GoString() string {
	return s.String()
}

// SetNiftyVpnGatewayName sets the NiftyVpnGatewayName field's value.
func (s *NiftyDescribeVpnGatewayActivitiesInput) SetNiftyVpnGatewayName(v string) *NiftyDescribeVpnGatewayActivitiesInput {
	s.NiftyVpnGatewayName = &v
	return s
}

// SetVpnGatewayId sets the VpnGatewayId field's value.
func (s *NiftyDescribeVpnGatewayActivitiesInput) SetVpnGatewayId(v string) *NiftyDescribeVpnGatewayActivitiesInput {
	s.VpnGatewayId = &v
	return s
}

type NiftyDescribeVpnGatewayActivitiesOutput struct {
	_ struct{} `type:"structure"`

	AnalyzeResultSet []*AnalyzeResultSetItem `locationName:"analyzeResultSet" locationNameList:"item" type:"list"`

	Log *string `locationName:"log" type:"string"`

	NiftyVpnGatewayName *string `locationName:"niftyVpnGatewayName" type:"string"`

	RequestId *string `locationName:"requestId" type:"string"`

	VpnGatewayId *string `locationName:"vpnGatewayId" type:"string"`
}

// String returns the string representation
func (s NiftyDescribeVpnGatewayActivitiesOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDescribeVpnGatewayActivitiesOutput) GoString() string {
	return s.String()
}

// SetAnalyzeResultSet sets the AnalyzeResultSet field's value.
func (s *NiftyDescribeVpnGatewayActivitiesOutput) SetAnalyzeResultSet(v []*AnalyzeResultSetItem) *NiftyDescribeVpnGatewayActivitiesOutput {
	s.AnalyzeResultSet = v
	return s
}

// SetLog sets the Log field's value.
func (s *NiftyDescribeVpnGatewayActivitiesOutput) SetLog(v string) *NiftyDescribeVpnGatewayActivitiesOutput {
	s.Log = &v
	return s
}

// SetNiftyVpnGatewayName sets the NiftyVpnGatewayName field's value.
func (s *NiftyDescribeVpnGatewayActivitiesOutput) SetNiftyVpnGatewayName(v string) *NiftyDescribeVpnGatewayActivitiesOutput {
	s.NiftyVpnGatewayName = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyDescribeVpnGatewayActivitiesOutput) SetRequestId(v string) *NiftyDescribeVpnGatewayActivitiesOutput {
	s.RequestId = &v
	return s
}

// SetVpnGatewayId sets the VpnGatewayId field's value.
func (s *NiftyDescribeVpnGatewayActivitiesOutput) SetVpnGatewayId(v string) *NiftyDescribeVpnGatewayActivitiesOutput {
	s.VpnGatewayId = &v
	return s
}

type NiftyDescribeWebProxiesInput struct {
	_ struct{} `type:"structure"`

	Filter []*RequestFilterStruct `locationName:"Filter" type:"list"`

	RouterId []*string `locationName:"RouterId" type:"list"`

	RouterName []*string `locationName:"RouterName" type:"list"`
}

// String returns the string representation
func (s NiftyDescribeWebProxiesInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDescribeWebProxiesInput) GoString() string {
	return s.String()
}

// SetFilter sets the Filter field's value.
func (s *NiftyDescribeWebProxiesInput) SetFilter(v []*RequestFilterStruct) *NiftyDescribeWebProxiesInput {
	s.Filter = v
	return s
}

// SetRouterId sets the RouterId field's value.
func (s *NiftyDescribeWebProxiesInput) SetRouterId(v []*string) *NiftyDescribeWebProxiesInput {
	s.RouterId = v
	return s
}

// SetRouterName sets the RouterName field's value.
func (s *NiftyDescribeWebProxiesInput) SetRouterName(v []*string) *NiftyDescribeWebProxiesInput {
	s.RouterName = v
	return s
}

type NiftyDescribeWebProxiesOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	WebProxy []*WebProxySetItem `locationName:"webProxy" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s NiftyDescribeWebProxiesOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDescribeWebProxiesOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyDescribeWebProxiesOutput) SetRequestId(v string) *NiftyDescribeWebProxiesOutput {
	s.RequestId = &v
	return s
}

// SetWebProxy sets the WebProxy field's value.
func (s *NiftyDescribeWebProxiesOutput) SetWebProxy(v []*WebProxySetItem) *NiftyDescribeWebProxiesOutput {
	s.WebProxy = v
	return s
}

type NiftyDisableDhcpInput struct {
	_ struct{} `type:"structure"`

	Agreement *bool `locationName:"Agreement" type:"boolean"`

	NetworkId *string `locationName:"NetworkId" type:"string"`

	NetworkName *string `locationName:"NetworkName" type:"string"`

	RouterId *string `locationName:"RouterId" type:"string"`

	RouterName *string `locationName:"RouterName" type:"string"`
}

// String returns the string representation
func (s NiftyDisableDhcpInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDisableDhcpInput) GoString() string {
	return s.String()
}

// SetAgreement sets the Agreement field's value.
func (s *NiftyDisableDhcpInput) SetAgreement(v bool) *NiftyDisableDhcpInput {
	s.Agreement = &v
	return s
}

// SetNetworkId sets the NetworkId field's value.
func (s *NiftyDisableDhcpInput) SetNetworkId(v string) *NiftyDisableDhcpInput {
	s.NetworkId = &v
	return s
}

// SetNetworkName sets the NetworkName field's value.
func (s *NiftyDisableDhcpInput) SetNetworkName(v string) *NiftyDisableDhcpInput {
	s.NetworkName = &v
	return s
}

// SetRouterId sets the RouterId field's value.
func (s *NiftyDisableDhcpInput) SetRouterId(v string) *NiftyDisableDhcpInput {
	s.RouterId = &v
	return s
}

// SetRouterName sets the RouterName field's value.
func (s *NiftyDisableDhcpInput) SetRouterName(v string) *NiftyDisableDhcpInput {
	s.RouterName = &v
	return s
}

type NiftyDisableDhcpOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s NiftyDisableDhcpOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDisableDhcpOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyDisableDhcpOutput) SetRequestId(v string) *NiftyDisableDhcpOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *NiftyDisableDhcpOutput) SetReturn(v bool) *NiftyDisableDhcpOutput {
	s.Return = &v
	return s
}

type NiftyDisassociateNatTableInput struct {
	_ struct{} `type:"structure"`

	Agreement *bool `locationName:"Agreement" type:"boolean"`

	AssociationId *string `locationName:"AssociationId" type:"string"`
}

// String returns the string representation
func (s NiftyDisassociateNatTableInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDisassociateNatTableInput) GoString() string {
	return s.String()
}

// SetAgreement sets the Agreement field's value.
func (s *NiftyDisassociateNatTableInput) SetAgreement(v bool) *NiftyDisassociateNatTableInput {
	s.Agreement = &v
	return s
}

// SetAssociationId sets the AssociationId field's value.
func (s *NiftyDisassociateNatTableInput) SetAssociationId(v string) *NiftyDisassociateNatTableInput {
	s.AssociationId = &v
	return s
}

type NiftyDisassociateNatTableOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s NiftyDisassociateNatTableOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDisassociateNatTableOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyDisassociateNatTableOutput) SetRequestId(v string) *NiftyDisassociateNatTableOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *NiftyDisassociateNatTableOutput) SetReturn(v bool) *NiftyDisassociateNatTableOutput {
	s.Return = &v
	return s
}

type NiftyDisassociateRouteTableFromVpnGatewayInput struct {
	_ struct{} `type:"structure"`

	Agreement *bool `locationName:"Agreement" type:"boolean"`

	AssociationId *string `locationName:"AssociationId" type:"string"`
}

// String returns the string representation
func (s NiftyDisassociateRouteTableFromVpnGatewayInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDisassociateRouteTableFromVpnGatewayInput) GoString() string {
	return s.String()
}

// SetAgreement sets the Agreement field's value.
func (s *NiftyDisassociateRouteTableFromVpnGatewayInput) SetAgreement(v bool) *NiftyDisassociateRouteTableFromVpnGatewayInput {
	s.Agreement = &v
	return s
}

// SetAssociationId sets the AssociationId field's value.
func (s *NiftyDisassociateRouteTableFromVpnGatewayInput) SetAssociationId(v string) *NiftyDisassociateRouteTableFromVpnGatewayInput {
	s.AssociationId = &v
	return s
}

type NiftyDisassociateRouteTableFromVpnGatewayOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s NiftyDisassociateRouteTableFromVpnGatewayOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDisassociateRouteTableFromVpnGatewayOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyDisassociateRouteTableFromVpnGatewayOutput) SetRequestId(v string) *NiftyDisassociateRouteTableFromVpnGatewayOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *NiftyDisassociateRouteTableFromVpnGatewayOutput) SetReturn(v bool) *NiftyDisassociateRouteTableFromVpnGatewayOutput {
	s.Return = &v
	return s
}

type NiftyDistributionIdsSetItem struct {
	_ struct{} `type:"structure"`

	DistributionId *string `locationName:"distributionId" type:"string"`
}

// String returns the string representation
func (s NiftyDistributionIdsSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyDistributionIdsSetItem) GoString() string {
	return s.String()
}

// SetDistributionId sets the DistributionId field's value.
func (s *NiftyDistributionIdsSetItem) SetDistributionId(v string) *NiftyDistributionIdsSetItem {
	s.DistributionId = &v
	return s
}

type NiftyElasticLoadBalancingSetItem struct {
	_ struct{} `type:"structure"`

	ElasticLoadBalancerId *string `locationName:"elasticLoadBalancerId" type:"string"`

	ElasticLoadBalancerName *string `locationName:"elasticLoadBalancerName" type:"string"`

	ElasticLoadBalancerPort *int64 `locationName:"elasticLoadBalancerPort" type:"integer"`

	InstancePort *int64 `locationName:"instancePort" type:"integer"`

	Protocol *string `locationName:"protocol" type:"string"`
}

// String returns the string representation
func (s NiftyElasticLoadBalancingSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyElasticLoadBalancingSetItem) GoString() string {
	return s.String()
}

// SetElasticLoadBalancerId sets the ElasticLoadBalancerId field's value.
func (s *NiftyElasticLoadBalancingSetItem) SetElasticLoadBalancerId(v string) *NiftyElasticLoadBalancingSetItem {
	s.ElasticLoadBalancerId = &v
	return s
}

// SetElasticLoadBalancerName sets the ElasticLoadBalancerName field's value.
func (s *NiftyElasticLoadBalancingSetItem) SetElasticLoadBalancerName(v string) *NiftyElasticLoadBalancingSetItem {
	s.ElasticLoadBalancerName = &v
	return s
}

// SetElasticLoadBalancerPort sets the ElasticLoadBalancerPort field's value.
func (s *NiftyElasticLoadBalancingSetItem) SetElasticLoadBalancerPort(v int64) *NiftyElasticLoadBalancingSetItem {
	s.ElasticLoadBalancerPort = &v
	return s
}

// SetInstancePort sets the InstancePort field's value.
func (s *NiftyElasticLoadBalancingSetItem) SetInstancePort(v int64) *NiftyElasticLoadBalancingSetItem {
	s.InstancePort = &v
	return s
}

// SetProtocol sets the Protocol field's value.
func (s *NiftyElasticLoadBalancingSetItem) SetProtocol(v string) *NiftyElasticLoadBalancingSetItem {
	s.Protocol = &v
	return s
}

type NiftyEnableDhcpInput struct {
	_ struct{} `type:"structure"`

	Agreement *bool `locationName:"Agreement" type:"boolean"`

	DhcpConfigId *string `locationName:"DhcpConfigId" type:"string"`

	DhcpOptionsId *string `locationName:"DhcpOptionsId" type:"string"`

	NetworkId *string `locationName:"NetworkId" type:"string"`

	NetworkName *string `locationName:"NetworkName" type:"string"`

	RouterId *string `locationName:"RouterId" type:"string"`

	RouterName *string `locationName:"RouterName" type:"string"`
}

// String returns the string representation
func (s NiftyEnableDhcpInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyEnableDhcpInput) GoString() string {
	return s.String()
}

// SetAgreement sets the Agreement field's value.
func (s *NiftyEnableDhcpInput) SetAgreement(v bool) *NiftyEnableDhcpInput {
	s.Agreement = &v
	return s
}

// SetDhcpConfigId sets the DhcpConfigId field's value.
func (s *NiftyEnableDhcpInput) SetDhcpConfigId(v string) *NiftyEnableDhcpInput {
	s.DhcpConfigId = &v
	return s
}

// SetDhcpOptionsId sets the DhcpOptionsId field's value.
func (s *NiftyEnableDhcpInput) SetDhcpOptionsId(v string) *NiftyEnableDhcpInput {
	s.DhcpOptionsId = &v
	return s
}

// SetNetworkId sets the NetworkId field's value.
func (s *NiftyEnableDhcpInput) SetNetworkId(v string) *NiftyEnableDhcpInput {
	s.NetworkId = &v
	return s
}

// SetNetworkName sets the NetworkName field's value.
func (s *NiftyEnableDhcpInput) SetNetworkName(v string) *NiftyEnableDhcpInput {
	s.NetworkName = &v
	return s
}

// SetRouterId sets the RouterId field's value.
func (s *NiftyEnableDhcpInput) SetRouterId(v string) *NiftyEnableDhcpInput {
	s.RouterId = &v
	return s
}

// SetRouterName sets the RouterName field's value.
func (s *NiftyEnableDhcpInput) SetRouterName(v string) *NiftyEnableDhcpInput {
	s.RouterName = &v
	return s
}

type NiftyEnableDhcpOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s NiftyEnableDhcpOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyEnableDhcpOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyEnableDhcpOutput) SetRequestId(v string) *NiftyEnableDhcpOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *NiftyEnableDhcpOutput) SetReturn(v bool) *NiftyEnableDhcpOutput {
	s.Return = &v
	return s
}

type NiftyIpsecConfiguration struct {
	_ struct{} `type:"structure"`

	EncryptionAlgorithm *string `locationName:"encryptionAlgorithm" type:"string"`

	HashingAlgorithm *string `locationName:"hashingAlgorithm" type:"string"`

	InternetKeyExchange *string `locationName:"internetKeyExchange" type:"string"`

	Mtu *string `locationName:"mtu" type:"string"`

	PreSharedKey *string `locationName:"preSharedKey" type:"string"`
}

// String returns the string representation
func (s NiftyIpsecConfiguration) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyIpsecConfiguration) GoString() string {
	return s.String()
}

// SetEncryptionAlgorithm sets the EncryptionAlgorithm field's value.
func (s *NiftyIpsecConfiguration) SetEncryptionAlgorithm(v string) *NiftyIpsecConfiguration {
	s.EncryptionAlgorithm = &v
	return s
}

// SetHashingAlgorithm sets the HashingAlgorithm field's value.
func (s *NiftyIpsecConfiguration) SetHashingAlgorithm(v string) *NiftyIpsecConfiguration {
	s.HashingAlgorithm = &v
	return s
}

// SetInternetKeyExchange sets the InternetKeyExchange field's value.
func (s *NiftyIpsecConfiguration) SetInternetKeyExchange(v string) *NiftyIpsecConfiguration {
	s.InternetKeyExchange = &v
	return s
}

// SetMtu sets the Mtu field's value.
func (s *NiftyIpsecConfiguration) SetMtu(v string) *NiftyIpsecConfiguration {
	s.Mtu = &v
	return s
}

// SetPreSharedKey sets the PreSharedKey field's value.
func (s *NiftyIpsecConfiguration) SetPreSharedKey(v string) *NiftyIpsecConfiguration {
	s.PreSharedKey = &v
	return s
}

type NiftyModifyAddressAttributeInput struct {
	_ struct{} `type:"structure"`

	Attribute *string `locationName:"Attribute" type:"string"`

	PrivateIpAddress *string `locationName:"PrivateIpAddress" type:"string"`

	PublicIp *string `locationName:"PublicIp" type:"string"`

	Value *string `locationName:"Value" type:"string"`
}

// String returns the string representation
func (s NiftyModifyAddressAttributeInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyModifyAddressAttributeInput) GoString() string {
	return s.String()
}

// SetAttribute sets the Attribute field's value.
func (s *NiftyModifyAddressAttributeInput) SetAttribute(v string) *NiftyModifyAddressAttributeInput {
	s.Attribute = &v
	return s
}

// SetPrivateIpAddress sets the PrivateIpAddress field's value.
func (s *NiftyModifyAddressAttributeInput) SetPrivateIpAddress(v string) *NiftyModifyAddressAttributeInput {
	s.PrivateIpAddress = &v
	return s
}

// SetPublicIp sets the PublicIp field's value.
func (s *NiftyModifyAddressAttributeInput) SetPublicIp(v string) *NiftyModifyAddressAttributeInput {
	s.PublicIp = &v
	return s
}

// SetValue sets the Value field's value.
func (s *NiftyModifyAddressAttributeInput) SetValue(v string) *NiftyModifyAddressAttributeInput {
	s.Value = &v
	return s
}

type NiftyModifyAddressAttributeOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s NiftyModifyAddressAttributeOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyModifyAddressAttributeOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyModifyAddressAttributeOutput) SetRequestId(v string) *NiftyModifyAddressAttributeOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *NiftyModifyAddressAttributeOutput) SetReturn(v bool) *NiftyModifyAddressAttributeOutput {
	s.Return = &v
	return s
}

type NiftyModifyCustomerGatewayAttributeInput struct {
	_ struct{} `type:"structure"`

	Attribute *string `locationName:"Attribute" type:"string"`

	CustomerGatewayId *string `locationName:"CustomerGatewayId" type:"string"`

	NiftyCustomerGatewayName *string `locationName:"NiftyCustomerGatewayName" type:"string"`

	Value *string `locationName:"Value" type:"string"`
}

// String returns the string representation
func (s NiftyModifyCustomerGatewayAttributeInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyModifyCustomerGatewayAttributeInput) GoString() string {
	return s.String()
}

// SetAttribute sets the Attribute field's value.
func (s *NiftyModifyCustomerGatewayAttributeInput) SetAttribute(v string) *NiftyModifyCustomerGatewayAttributeInput {
	s.Attribute = &v
	return s
}

// SetCustomerGatewayId sets the CustomerGatewayId field's value.
func (s *NiftyModifyCustomerGatewayAttributeInput) SetCustomerGatewayId(v string) *NiftyModifyCustomerGatewayAttributeInput {
	s.CustomerGatewayId = &v
	return s
}

// SetNiftyCustomerGatewayName sets the NiftyCustomerGatewayName field's value.
func (s *NiftyModifyCustomerGatewayAttributeInput) SetNiftyCustomerGatewayName(v string) *NiftyModifyCustomerGatewayAttributeInput {
	s.NiftyCustomerGatewayName = &v
	return s
}

// SetValue sets the Value field's value.
func (s *NiftyModifyCustomerGatewayAttributeInput) SetValue(v string) *NiftyModifyCustomerGatewayAttributeInput {
	s.Value = &v
	return s
}

type NiftyModifyCustomerGatewayAttributeOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s NiftyModifyCustomerGatewayAttributeOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyModifyCustomerGatewayAttributeOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyModifyCustomerGatewayAttributeOutput) SetRequestId(v string) *NiftyModifyCustomerGatewayAttributeOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *NiftyModifyCustomerGatewayAttributeOutput) SetReturn(v bool) *NiftyModifyCustomerGatewayAttributeOutput {
	s.Return = &v
	return s
}

type NiftyModifyElasticLoadBalancerAttributesInput struct {
	_ struct{} `type:"structure"`

	ElasticLoadBalancerId *string `locationName:"ElasticLoadBalancerId" type:"string"`

	ElasticLoadBalancerName *string `locationName:"ElasticLoadBalancerName" type:"string"`

	ElasticLoadBalancerPort *int64 `locationName:"ElasticLoadBalancerPort" type:"integer"`

	InstancePort *int64 `locationName:"InstancePort" type:"integer"`

	LoadBalancerAttributes *RequestLoadBalancerAttributesStruct `locationName:"LoadBalancerAttributes" type:"structure"`

	Protocol *string `locationName:"Protocol" type:"string"`
}

// String returns the string representation
func (s NiftyModifyElasticLoadBalancerAttributesInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyModifyElasticLoadBalancerAttributesInput) GoString() string {
	return s.String()
}

// SetElasticLoadBalancerId sets the ElasticLoadBalancerId field's value.
func (s *NiftyModifyElasticLoadBalancerAttributesInput) SetElasticLoadBalancerId(v string) *NiftyModifyElasticLoadBalancerAttributesInput {
	s.ElasticLoadBalancerId = &v
	return s
}

// SetElasticLoadBalancerName sets the ElasticLoadBalancerName field's value.
func (s *NiftyModifyElasticLoadBalancerAttributesInput) SetElasticLoadBalancerName(v string) *NiftyModifyElasticLoadBalancerAttributesInput {
	s.ElasticLoadBalancerName = &v
	return s
}

// SetElasticLoadBalancerPort sets the ElasticLoadBalancerPort field's value.
func (s *NiftyModifyElasticLoadBalancerAttributesInput) SetElasticLoadBalancerPort(v int64) *NiftyModifyElasticLoadBalancerAttributesInput {
	s.ElasticLoadBalancerPort = &v
	return s
}

// SetInstancePort sets the InstancePort field's value.
func (s *NiftyModifyElasticLoadBalancerAttributesInput) SetInstancePort(v int64) *NiftyModifyElasticLoadBalancerAttributesInput {
	s.InstancePort = &v
	return s
}

// SetLoadBalancerAttributes sets the LoadBalancerAttributes field's value.
func (s *NiftyModifyElasticLoadBalancerAttributesInput) SetLoadBalancerAttributes(v *RequestLoadBalancerAttributesStruct) *NiftyModifyElasticLoadBalancerAttributesInput {
	s.LoadBalancerAttributes = v
	return s
}

// SetProtocol sets the Protocol field's value.
func (s *NiftyModifyElasticLoadBalancerAttributesInput) SetProtocol(v string) *NiftyModifyElasticLoadBalancerAttributesInput {
	s.Protocol = &v
	return s
}

type NiftyModifyElasticLoadBalancerAttributesOutput struct {
	_ struct{} `type:"structure"`

	ResponseMetadata *ResponseMetadata `locationName:"ResponseMetadata" type:"structure"`
}

// String returns the string representation
func (s NiftyModifyElasticLoadBalancerAttributesOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyModifyElasticLoadBalancerAttributesOutput) GoString() string {
	return s.String()
}

// SetResponseMetadata sets the ResponseMetadata field's value.
func (s *NiftyModifyElasticLoadBalancerAttributesOutput) SetResponseMetadata(v *ResponseMetadata) *NiftyModifyElasticLoadBalancerAttributesOutput {
	s.ResponseMetadata = v
	return s
}

type NiftyModifyInstanceSnapshotAttributeInput struct {
	_ struct{} `type:"structure"`

	Attribute *string `locationName:"Attribute" type:"string"`

	InstanceSnapshotId *string `locationName:"InstanceSnapshotId" type:"string"`

	SnapshotName *string `locationName:"SnapshotName" type:"string"`

	Value *string `locationName:"Value" type:"string"`
}

// String returns the string representation
func (s NiftyModifyInstanceSnapshotAttributeInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyModifyInstanceSnapshotAttributeInput) GoString() string {
	return s.String()
}

// SetAttribute sets the Attribute field's value.
func (s *NiftyModifyInstanceSnapshotAttributeInput) SetAttribute(v string) *NiftyModifyInstanceSnapshotAttributeInput {
	s.Attribute = &v
	return s
}

// SetInstanceSnapshotId sets the InstanceSnapshotId field's value.
func (s *NiftyModifyInstanceSnapshotAttributeInput) SetInstanceSnapshotId(v string) *NiftyModifyInstanceSnapshotAttributeInput {
	s.InstanceSnapshotId = &v
	return s
}

// SetSnapshotName sets the SnapshotName field's value.
func (s *NiftyModifyInstanceSnapshotAttributeInput) SetSnapshotName(v string) *NiftyModifyInstanceSnapshotAttributeInput {
	s.SnapshotName = &v
	return s
}

// SetValue sets the Value field's value.
func (s *NiftyModifyInstanceSnapshotAttributeInput) SetValue(v string) *NiftyModifyInstanceSnapshotAttributeInput {
	s.Value = &v
	return s
}

type NiftyModifyInstanceSnapshotAttributeOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s NiftyModifyInstanceSnapshotAttributeOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyModifyInstanceSnapshotAttributeOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyModifyInstanceSnapshotAttributeOutput) SetRequestId(v string) *NiftyModifyInstanceSnapshotAttributeOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *NiftyModifyInstanceSnapshotAttributeOutput) SetReturn(v bool) *NiftyModifyInstanceSnapshotAttributeOutput {
	s.Return = &v
	return s
}

type NiftyModifyKeyPairAttributeInput struct {
	_ struct{} `type:"structure"`

	Attribute *string `locationName:"Attribute" type:"string"`

	KeyName *string `locationName:"KeyName" type:"string"`

	Value *string `locationName:"Value" type:"string"`
}

// String returns the string representation
func (s NiftyModifyKeyPairAttributeInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyModifyKeyPairAttributeInput) GoString() string {
	return s.String()
}

// SetAttribute sets the Attribute field's value.
func (s *NiftyModifyKeyPairAttributeInput) SetAttribute(v string) *NiftyModifyKeyPairAttributeInput {
	s.Attribute = &v
	return s
}

// SetKeyName sets the KeyName field's value.
func (s *NiftyModifyKeyPairAttributeInput) SetKeyName(v string) *NiftyModifyKeyPairAttributeInput {
	s.KeyName = &v
	return s
}

// SetValue sets the Value field's value.
func (s *NiftyModifyKeyPairAttributeInput) SetValue(v string) *NiftyModifyKeyPairAttributeInput {
	s.Value = &v
	return s
}

type NiftyModifyKeyPairAttributeOutput struct {
	_ struct{} `type:"structure"`

	Attribute *string `locationName:"attribute" type:"string"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`

	Value *string `locationName:"value" type:"string"`
}

// String returns the string representation
func (s NiftyModifyKeyPairAttributeOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyModifyKeyPairAttributeOutput) GoString() string {
	return s.String()
}

// SetAttribute sets the Attribute field's value.
func (s *NiftyModifyKeyPairAttributeOutput) SetAttribute(v string) *NiftyModifyKeyPairAttributeOutput {
	s.Attribute = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyModifyKeyPairAttributeOutput) SetRequestId(v string) *NiftyModifyKeyPairAttributeOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *NiftyModifyKeyPairAttributeOutput) SetReturn(v bool) *NiftyModifyKeyPairAttributeOutput {
	s.Return = &v
	return s
}

// SetValue sets the Value field's value.
func (s *NiftyModifyKeyPairAttributeOutput) SetValue(v string) *NiftyModifyKeyPairAttributeOutput {
	s.Value = &v
	return s
}

type NiftyModifyPrivateLanAttributeInput struct {
	_ struct{} `type:"structure"`

	Attribute *string `locationName:"Attribute" type:"string"`

	NetworkId *string `locationName:"NetworkId" type:"string"`

	PrivateLanName *string `locationName:"PrivateLanName" type:"string"`

	Value *string `locationName:"Value" type:"string"`
}

// String returns the string representation
func (s NiftyModifyPrivateLanAttributeInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyModifyPrivateLanAttributeInput) GoString() string {
	return s.String()
}

// SetAttribute sets the Attribute field's value.
func (s *NiftyModifyPrivateLanAttributeInput) SetAttribute(v string) *NiftyModifyPrivateLanAttributeInput {
	s.Attribute = &v
	return s
}

// SetNetworkId sets the NetworkId field's value.
func (s *NiftyModifyPrivateLanAttributeInput) SetNetworkId(v string) *NiftyModifyPrivateLanAttributeInput {
	s.NetworkId = &v
	return s
}

// SetPrivateLanName sets the PrivateLanName field's value.
func (s *NiftyModifyPrivateLanAttributeInput) SetPrivateLanName(v string) *NiftyModifyPrivateLanAttributeInput {
	s.PrivateLanName = &v
	return s
}

// SetValue sets the Value field's value.
func (s *NiftyModifyPrivateLanAttributeInput) SetValue(v string) *NiftyModifyPrivateLanAttributeInput {
	s.Value = &v
	return s
}

type NiftyModifyPrivateLanAttributeOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s NiftyModifyPrivateLanAttributeOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyModifyPrivateLanAttributeOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyModifyPrivateLanAttributeOutput) SetRequestId(v string) *NiftyModifyPrivateLanAttributeOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *NiftyModifyPrivateLanAttributeOutput) SetReturn(v bool) *NiftyModifyPrivateLanAttributeOutput {
	s.Return = &v
	return s
}

type NiftyModifyRouterAttributeInput struct {
	_ struct{} `type:"structure"`

	Agreement *bool `locationName:"Agreement" type:"boolean"`

	Attribute *string `locationName:"Attribute" type:"string"`

	RouterId *string `locationName:"RouterId" type:"string"`

	RouterName *string `locationName:"RouterName" type:"string"`

	Value *string `locationName:"Value" type:"string"`
}

// String returns the string representation
func (s NiftyModifyRouterAttributeInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyModifyRouterAttributeInput) GoString() string {
	return s.String()
}

// SetAgreement sets the Agreement field's value.
func (s *NiftyModifyRouterAttributeInput) SetAgreement(v bool) *NiftyModifyRouterAttributeInput {
	s.Agreement = &v
	return s
}

// SetAttribute sets the Attribute field's value.
func (s *NiftyModifyRouterAttributeInput) SetAttribute(v string) *NiftyModifyRouterAttributeInput {
	s.Attribute = &v
	return s
}

// SetRouterId sets the RouterId field's value.
func (s *NiftyModifyRouterAttributeInput) SetRouterId(v string) *NiftyModifyRouterAttributeInput {
	s.RouterId = &v
	return s
}

// SetRouterName sets the RouterName field's value.
func (s *NiftyModifyRouterAttributeInput) SetRouterName(v string) *NiftyModifyRouterAttributeInput {
	s.RouterName = &v
	return s
}

// SetValue sets the Value field's value.
func (s *NiftyModifyRouterAttributeInput) SetValue(v string) *NiftyModifyRouterAttributeInput {
	s.Value = &v
	return s
}

type NiftyModifyRouterAttributeOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s NiftyModifyRouterAttributeOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyModifyRouterAttributeOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyModifyRouterAttributeOutput) SetRequestId(v string) *NiftyModifyRouterAttributeOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *NiftyModifyRouterAttributeOutput) SetReturn(v bool) *NiftyModifyRouterAttributeOutput {
	s.Return = &v
	return s
}

type NiftyModifyVpnGatewayAttributeInput struct {
	_ struct{} `type:"structure"`

	Agreement *bool `locationName:"Agreement" type:"boolean"`

	Attribute *string `locationName:"Attribute" type:"string"`

	NiftyVpnGatewayName *string `locationName:"NiftyVpnGatewayName" type:"string"`

	Value *string `locationName:"Value" type:"string"`

	VpnGatewayId *string `locationName:"VpnGatewayId" type:"string"`
}

// String returns the string representation
func (s NiftyModifyVpnGatewayAttributeInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyModifyVpnGatewayAttributeInput) GoString() string {
	return s.String()
}

// SetAgreement sets the Agreement field's value.
func (s *NiftyModifyVpnGatewayAttributeInput) SetAgreement(v bool) *NiftyModifyVpnGatewayAttributeInput {
	s.Agreement = &v
	return s
}

// SetAttribute sets the Attribute field's value.
func (s *NiftyModifyVpnGatewayAttributeInput) SetAttribute(v string) *NiftyModifyVpnGatewayAttributeInput {
	s.Attribute = &v
	return s
}

// SetNiftyVpnGatewayName sets the NiftyVpnGatewayName field's value.
func (s *NiftyModifyVpnGatewayAttributeInput) SetNiftyVpnGatewayName(v string) *NiftyModifyVpnGatewayAttributeInput {
	s.NiftyVpnGatewayName = &v
	return s
}

// SetValue sets the Value field's value.
func (s *NiftyModifyVpnGatewayAttributeInput) SetValue(v string) *NiftyModifyVpnGatewayAttributeInput {
	s.Value = &v
	return s
}

// SetVpnGatewayId sets the VpnGatewayId field's value.
func (s *NiftyModifyVpnGatewayAttributeInput) SetVpnGatewayId(v string) *NiftyModifyVpnGatewayAttributeInput {
	s.VpnGatewayId = &v
	return s
}

type NiftyModifyVpnGatewayAttributeOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s NiftyModifyVpnGatewayAttributeOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyModifyVpnGatewayAttributeOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyModifyVpnGatewayAttributeOutput) SetRequestId(v string) *NiftyModifyVpnGatewayAttributeOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *NiftyModifyVpnGatewayAttributeOutput) SetReturn(v bool) *NiftyModifyVpnGatewayAttributeOutput {
	s.Return = &v
	return s
}

type NiftyModifyWebProxyAttributeInput struct {
	_ struct{} `type:"structure"`

	Agreement *bool `locationName:"Agreement" type:"boolean"`

	Attribute *string `locationName:"Attribute" type:"string"`

	RouterId *string `locationName:"RouterId" type:"string"`

	RouterName *string `locationName:"RouterName" type:"string"`

	Value *string `locationName:"Value" type:"string"`
}

// String returns the string representation
func (s NiftyModifyWebProxyAttributeInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyModifyWebProxyAttributeInput) GoString() string {
	return s.String()
}

// SetAgreement sets the Agreement field's value.
func (s *NiftyModifyWebProxyAttributeInput) SetAgreement(v bool) *NiftyModifyWebProxyAttributeInput {
	s.Agreement = &v
	return s
}

// SetAttribute sets the Attribute field's value.
func (s *NiftyModifyWebProxyAttributeInput) SetAttribute(v string) *NiftyModifyWebProxyAttributeInput {
	s.Attribute = &v
	return s
}

// SetRouterId sets the RouterId field's value.
func (s *NiftyModifyWebProxyAttributeInput) SetRouterId(v string) *NiftyModifyWebProxyAttributeInput {
	s.RouterId = &v
	return s
}

// SetRouterName sets the RouterName field's value.
func (s *NiftyModifyWebProxyAttributeInput) SetRouterName(v string) *NiftyModifyWebProxyAttributeInput {
	s.RouterName = &v
	return s
}

// SetValue sets the Value field's value.
func (s *NiftyModifyWebProxyAttributeInput) SetValue(v string) *NiftyModifyWebProxyAttributeInput {
	s.Value = &v
	return s
}

type NiftyModifyWebProxyAttributeOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s NiftyModifyWebProxyAttributeOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyModifyWebProxyAttributeOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyModifyWebProxyAttributeOutput) SetRequestId(v string) *NiftyModifyWebProxyAttributeOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *NiftyModifyWebProxyAttributeOutput) SetReturn(v bool) *NiftyModifyWebProxyAttributeOutput {
	s.Return = &v
	return s
}

type NiftyPrivateIpType struct {
	_ struct{} `type:"structure"`

	Value *string `locationName:"value" type:"string"`
}

// String returns the string representation
func (s NiftyPrivateIpType) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyPrivateIpType) GoString() string {
	return s.String()
}

// SetValue sets the Value field's value.
func (s *NiftyPrivateIpType) SetValue(v string) *NiftyPrivateIpType {
	s.Value = &v
	return s
}

type NiftyRebootRoutersInput struct {
	_ struct{} `type:"structure"`

	Router []*RequestRouterStruct `locationName:"Router" type:"list"`
}

// String returns the string representation
func (s NiftyRebootRoutersInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyRebootRoutersInput) GoString() string {
	return s.String()
}

// SetRouter sets the Router field's value.
func (s *NiftyRebootRoutersInput) SetRouter(v []*RequestRouterStruct) *NiftyRebootRoutersInput {
	s.Router = v
	return s
}

type NiftyRebootRoutersOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s NiftyRebootRoutersOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyRebootRoutersOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyRebootRoutersOutput) SetRequestId(v string) *NiftyRebootRoutersOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *NiftyRebootRoutersOutput) SetReturn(v bool) *NiftyRebootRoutersOutput {
	s.Return = &v
	return s
}

type NiftyRebootVpnGatewaysInput struct {
	_ struct{} `type:"structure"`

	VpnGateway []*RequestVpnGatewayStruct `locationName:"VpnGateway" type:"list"`
}

// String returns the string representation
func (s NiftyRebootVpnGatewaysInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyRebootVpnGatewaysInput) GoString() string {
	return s.String()
}

// SetVpnGateway sets the VpnGateway field's value.
func (s *NiftyRebootVpnGatewaysInput) SetVpnGateway(v []*RequestVpnGatewayStruct) *NiftyRebootVpnGatewaysInput {
	s.VpnGateway = v
	return s
}

type NiftyRebootVpnGatewaysOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s NiftyRebootVpnGatewaysOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyRebootVpnGatewaysOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyRebootVpnGatewaysOutput) SetRequestId(v string) *NiftyRebootVpnGatewaysOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *NiftyRebootVpnGatewaysOutput) SetReturn(v bool) *NiftyRebootVpnGatewaysOutput {
	s.Return = &v
	return s
}

type NiftyRegisterInstancesWithElasticLoadBalancerInput struct {
	_ struct{} `type:"structure"`

	ElasticLoadBalancerId *string `locationName:"ElasticLoadBalancerId" type:"string"`

	ElasticLoadBalancerName *string `locationName:"ElasticLoadBalancerName" type:"string"`

	ElasticLoadBalancerPort *int64 `locationName:"ElasticLoadBalancerPort" type:"integer"`

	InstancePort *int64 `locationName:"InstancePort" type:"integer"`

	Instances []*RequestInstancesStruct `locationName:"Instances" locationNameList:"member" type:"list"`

	Protocol *string `locationName:"Protocol" type:"string"`
}

// String returns the string representation
func (s NiftyRegisterInstancesWithElasticLoadBalancerInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyRegisterInstancesWithElasticLoadBalancerInput) GoString() string {
	return s.String()
}

// SetElasticLoadBalancerId sets the ElasticLoadBalancerId field's value.
func (s *NiftyRegisterInstancesWithElasticLoadBalancerInput) SetElasticLoadBalancerId(v string) *NiftyRegisterInstancesWithElasticLoadBalancerInput {
	s.ElasticLoadBalancerId = &v
	return s
}

// SetElasticLoadBalancerName sets the ElasticLoadBalancerName field's value.
func (s *NiftyRegisterInstancesWithElasticLoadBalancerInput) SetElasticLoadBalancerName(v string) *NiftyRegisterInstancesWithElasticLoadBalancerInput {
	s.ElasticLoadBalancerName = &v
	return s
}

// SetElasticLoadBalancerPort sets the ElasticLoadBalancerPort field's value.
func (s *NiftyRegisterInstancesWithElasticLoadBalancerInput) SetElasticLoadBalancerPort(v int64) *NiftyRegisterInstancesWithElasticLoadBalancerInput {
	s.ElasticLoadBalancerPort = &v
	return s
}

// SetInstancePort sets the InstancePort field's value.
func (s *NiftyRegisterInstancesWithElasticLoadBalancerInput) SetInstancePort(v int64) *NiftyRegisterInstancesWithElasticLoadBalancerInput {
	s.InstancePort = &v
	return s
}

// SetInstances sets the Instances field's value.
func (s *NiftyRegisterInstancesWithElasticLoadBalancerInput) SetInstances(v []*RequestInstancesStruct) *NiftyRegisterInstancesWithElasticLoadBalancerInput {
	s.Instances = v
	return s
}

// SetProtocol sets the Protocol field's value.
func (s *NiftyRegisterInstancesWithElasticLoadBalancerInput) SetProtocol(v string) *NiftyRegisterInstancesWithElasticLoadBalancerInput {
	s.Protocol = &v
	return s
}

type NiftyRegisterInstancesWithElasticLoadBalancerOutput struct {
	_ struct{} `type:"structure"`

	Instances []*InstancesMemberItem `locationName:"Instances" locationNameList:"member" type:"list"`

	NiftyRegisterInstancesWithElasticLoadBalancerResult *NiftyRegisterInstancesWithElasticLoadBalancerOutput `locationName:"NiftyRegisterInstancesWithElasticLoadBalancerResult" type:"structure"`

	ResponseMetadata *ResponseMetadata `locationName:"ResponseMetadata" type:"structure"`
}

// String returns the string representation
func (s NiftyRegisterInstancesWithElasticLoadBalancerOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyRegisterInstancesWithElasticLoadBalancerOutput) GoString() string {
	return s.String()
}

// SetInstances sets the Instances field's value.
func (s *NiftyRegisterInstancesWithElasticLoadBalancerOutput) SetInstances(v []*InstancesMemberItem) *NiftyRegisterInstancesWithElasticLoadBalancerOutput {
	s.Instances = v
	return s
}

// SetNiftyRegisterInstancesWithElasticLoadBalancerResult sets the NiftyRegisterInstancesWithElasticLoadBalancerResult field's value.
func (s *NiftyRegisterInstancesWithElasticLoadBalancerOutput) SetNiftyRegisterInstancesWithElasticLoadBalancerResult(v *NiftyRegisterInstancesWithElasticLoadBalancerOutput) *NiftyRegisterInstancesWithElasticLoadBalancerOutput {
	s.NiftyRegisterInstancesWithElasticLoadBalancerResult = v
	return s
}

// SetResponseMetadata sets the ResponseMetadata field's value.
func (s *NiftyRegisterInstancesWithElasticLoadBalancerOutput) SetResponseMetadata(v *ResponseMetadata) *NiftyRegisterInstancesWithElasticLoadBalancerOutput {
	s.ResponseMetadata = v
	return s
}

type NiftyRegisterInstancesWithSeparateInstanceRuleInput struct {
	_ struct{} `type:"structure"`

	InstanceId []*string `locationName:"InstanceId" type:"list"`

	InstanceUniqueId []*string `locationName:"InstanceUniqueId" type:"list"`

	SeparateInstanceRuleName *string `locationName:"SeparateInstanceRuleName" type:"string"`
}

// String returns the string representation
func (s NiftyRegisterInstancesWithSeparateInstanceRuleInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyRegisterInstancesWithSeparateInstanceRuleInput) GoString() string {
	return s.String()
}

// SetInstanceId sets the InstanceId field's value.
func (s *NiftyRegisterInstancesWithSeparateInstanceRuleInput) SetInstanceId(v []*string) *NiftyRegisterInstancesWithSeparateInstanceRuleInput {
	s.InstanceId = v
	return s
}

// SetInstanceUniqueId sets the InstanceUniqueId field's value.
func (s *NiftyRegisterInstancesWithSeparateInstanceRuleInput) SetInstanceUniqueId(v []*string) *NiftyRegisterInstancesWithSeparateInstanceRuleInput {
	s.InstanceUniqueId = v
	return s
}

// SetSeparateInstanceRuleName sets the SeparateInstanceRuleName field's value.
func (s *NiftyRegisterInstancesWithSeparateInstanceRuleInput) SetSeparateInstanceRuleName(v string) *NiftyRegisterInstancesWithSeparateInstanceRuleInput {
	s.SeparateInstanceRuleName = &v
	return s
}

type NiftyRegisterInstancesWithSeparateInstanceRuleOutput struct {
	_ struct{} `type:"structure"`

	InstancesSet []*InstancesSetItem `locationName:"instancesSet" locationNameList:"item" type:"list"`

	RequestId *string `locationName:"requestId" type:"string"`
}

// String returns the string representation
func (s NiftyRegisterInstancesWithSeparateInstanceRuleOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyRegisterInstancesWithSeparateInstanceRuleOutput) GoString() string {
	return s.String()
}

// SetInstancesSet sets the InstancesSet field's value.
func (s *NiftyRegisterInstancesWithSeparateInstanceRuleOutput) SetInstancesSet(v []*InstancesSetItem) *NiftyRegisterInstancesWithSeparateInstanceRuleOutput {
	s.InstancesSet = v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyRegisterInstancesWithSeparateInstanceRuleOutput) SetRequestId(v string) *NiftyRegisterInstancesWithSeparateInstanceRuleOutput {
	s.RequestId = &v
	return s
}

type NiftyRegisterPortWithElasticLoadBalancerInput struct {
	_ struct{} `type:"structure"`

	ElasticLoadBalancerId *string `locationName:"ElasticLoadBalancerId" type:"string"`

	ElasticLoadBalancerName *string `locationName:"ElasticLoadBalancerName" type:"string"`

	Listeners []*RequestListenersStruct `locationName:"Listeners" locationNameList:"member" type:"list"`
}

// String returns the string representation
func (s NiftyRegisterPortWithElasticLoadBalancerInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyRegisterPortWithElasticLoadBalancerInput) GoString() string {
	return s.String()
}

// SetElasticLoadBalancerId sets the ElasticLoadBalancerId field's value.
func (s *NiftyRegisterPortWithElasticLoadBalancerInput) SetElasticLoadBalancerId(v string) *NiftyRegisterPortWithElasticLoadBalancerInput {
	s.ElasticLoadBalancerId = &v
	return s
}

// SetElasticLoadBalancerName sets the ElasticLoadBalancerName field's value.
func (s *NiftyRegisterPortWithElasticLoadBalancerInput) SetElasticLoadBalancerName(v string) *NiftyRegisterPortWithElasticLoadBalancerInput {
	s.ElasticLoadBalancerName = &v
	return s
}

// SetListeners sets the Listeners field's value.
func (s *NiftyRegisterPortWithElasticLoadBalancerInput) SetListeners(v []*RequestListenersStruct) *NiftyRegisterPortWithElasticLoadBalancerInput {
	s.Listeners = v
	return s
}

type NiftyRegisterPortWithElasticLoadBalancerOutput struct {
	_ struct{} `type:"structure"`

	Listeners []*ListenersMemberItem `locationName:"Listeners" locationNameList:"member" type:"list"`

	NiftyRegisterPortWithElasticLoadBalancerResult *NiftyRegisterPortWithElasticLoadBalancerOutput `locationName:"NiftyRegisterPortWithElasticLoadBalancerResult" type:"structure"`

	ResponseMetadata *ResponseMetadata `locationName:"ResponseMetadata" type:"structure"`
}

// String returns the string representation
func (s NiftyRegisterPortWithElasticLoadBalancerOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyRegisterPortWithElasticLoadBalancerOutput) GoString() string {
	return s.String()
}

// SetListeners sets the Listeners field's value.
func (s *NiftyRegisterPortWithElasticLoadBalancerOutput) SetListeners(v []*ListenersMemberItem) *NiftyRegisterPortWithElasticLoadBalancerOutput {
	s.Listeners = v
	return s
}

// SetNiftyRegisterPortWithElasticLoadBalancerResult sets the NiftyRegisterPortWithElasticLoadBalancerResult field's value.
func (s *NiftyRegisterPortWithElasticLoadBalancerOutput) SetNiftyRegisterPortWithElasticLoadBalancerResult(v *NiftyRegisterPortWithElasticLoadBalancerOutput) *NiftyRegisterPortWithElasticLoadBalancerOutput {
	s.NiftyRegisterPortWithElasticLoadBalancerResult = v
	return s
}

// SetResponseMetadata sets the ResponseMetadata field's value.
func (s *NiftyRegisterPortWithElasticLoadBalancerOutput) SetResponseMetadata(v *ResponseMetadata) *NiftyRegisterPortWithElasticLoadBalancerOutput {
	s.ResponseMetadata = v
	return s
}

type NiftyRegisterRoutersWithSecurityGroupInput struct {
	_ struct{} `type:"structure"`

	GroupName *string `locationName:"GroupName" type:"string"`

	RouterSet []*RequestRouterSetStruct `locationName:"RouterSet" type:"list"`
}

// String returns the string representation
func (s NiftyRegisterRoutersWithSecurityGroupInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyRegisterRoutersWithSecurityGroupInput) GoString() string {
	return s.String()
}

// SetGroupName sets the GroupName field's value.
func (s *NiftyRegisterRoutersWithSecurityGroupInput) SetGroupName(v string) *NiftyRegisterRoutersWithSecurityGroupInput {
	s.GroupName = &v
	return s
}

// SetRouterSet sets the RouterSet field's value.
func (s *NiftyRegisterRoutersWithSecurityGroupInput) SetRouterSet(v []*RequestRouterSetStruct) *NiftyRegisterRoutersWithSecurityGroupInput {
	s.RouterSet = v
	return s
}

type NiftyRegisterRoutersWithSecurityGroupOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	RouterSet []*RouterSetItem `locationName:"routerSet" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s NiftyRegisterRoutersWithSecurityGroupOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyRegisterRoutersWithSecurityGroupOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyRegisterRoutersWithSecurityGroupOutput) SetRequestId(v string) *NiftyRegisterRoutersWithSecurityGroupOutput {
	s.RequestId = &v
	return s
}

// SetRouterSet sets the RouterSet field's value.
func (s *NiftyRegisterRoutersWithSecurityGroupOutput) SetRouterSet(v []*RouterSetItem) *NiftyRegisterRoutersWithSecurityGroupOutput {
	s.RouterSet = v
	return s
}

type NiftyRegisterVpnGatewaysWithSecurityGroupInput struct {
	_ struct{} `type:"structure"`

	GroupName *string `locationName:"GroupName" type:"string"`

	VpnGatewaySet []*RequestVpnGatewaySetStruct `locationName:"VpnGatewaySet" type:"list"`
}

// String returns the string representation
func (s NiftyRegisterVpnGatewaysWithSecurityGroupInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyRegisterVpnGatewaysWithSecurityGroupInput) GoString() string {
	return s.String()
}

// SetGroupName sets the GroupName field's value.
func (s *NiftyRegisterVpnGatewaysWithSecurityGroupInput) SetGroupName(v string) *NiftyRegisterVpnGatewaysWithSecurityGroupInput {
	s.GroupName = &v
	return s
}

// SetVpnGatewaySet sets the VpnGatewaySet field's value.
func (s *NiftyRegisterVpnGatewaysWithSecurityGroupInput) SetVpnGatewaySet(v []*RequestVpnGatewaySetStruct) *NiftyRegisterVpnGatewaysWithSecurityGroupInput {
	s.VpnGatewaySet = v
	return s
}

type NiftyRegisterVpnGatewaysWithSecurityGroupOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	VpnGatewaySet []*VpnGatewaySetItem `locationName:"vpnGatewaySet" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s NiftyRegisterVpnGatewaysWithSecurityGroupOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyRegisterVpnGatewaysWithSecurityGroupOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyRegisterVpnGatewaysWithSecurityGroupOutput) SetRequestId(v string) *NiftyRegisterVpnGatewaysWithSecurityGroupOutput {
	s.RequestId = &v
	return s
}

// SetVpnGatewaySet sets the VpnGatewaySet field's value.
func (s *NiftyRegisterVpnGatewaysWithSecurityGroupOutput) SetVpnGatewaySet(v []*VpnGatewaySetItem) *NiftyRegisterVpnGatewaysWithSecurityGroupOutput {
	s.VpnGatewaySet = v
	return s
}

type NiftyReleaseRouterBackupStateInput struct {
	_ struct{} `type:"structure"`

	RouterId *string `locationName:"RouterId" type:"string"`

	RouterName *string `locationName:"RouterName" type:"string"`
}

// String returns the string representation
func (s NiftyReleaseRouterBackupStateInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyReleaseRouterBackupStateInput) GoString() string {
	return s.String()
}

// SetRouterId sets the RouterId field's value.
func (s *NiftyReleaseRouterBackupStateInput) SetRouterId(v string) *NiftyReleaseRouterBackupStateInput {
	s.RouterId = &v
	return s
}

// SetRouterName sets the RouterName field's value.
func (s *NiftyReleaseRouterBackupStateInput) SetRouterName(v string) *NiftyReleaseRouterBackupStateInput {
	s.RouterName = &v
	return s
}

type NiftyReleaseRouterBackupStateOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s NiftyReleaseRouterBackupStateOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyReleaseRouterBackupStateOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyReleaseRouterBackupStateOutput) SetRequestId(v string) *NiftyReleaseRouterBackupStateOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *NiftyReleaseRouterBackupStateOutput) SetReturn(v bool) *NiftyReleaseRouterBackupStateOutput {
	s.Return = &v
	return s
}

type NiftyReleaseVpnGatewayBackupStateInput struct {
	_ struct{} `type:"structure"`

	NiftyVpnGatewayName *string `locationName:"NiftyVpnGatewayName" type:"string"`

	VpnGatewayId *string `locationName:"VpnGatewayId" type:"string"`
}

// String returns the string representation
func (s NiftyReleaseVpnGatewayBackupStateInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyReleaseVpnGatewayBackupStateInput) GoString() string {
	return s.String()
}

// SetNiftyVpnGatewayName sets the NiftyVpnGatewayName field's value.
func (s *NiftyReleaseVpnGatewayBackupStateInput) SetNiftyVpnGatewayName(v string) *NiftyReleaseVpnGatewayBackupStateInput {
	s.NiftyVpnGatewayName = &v
	return s
}

// SetVpnGatewayId sets the VpnGatewayId field's value.
func (s *NiftyReleaseVpnGatewayBackupStateInput) SetVpnGatewayId(v string) *NiftyReleaseVpnGatewayBackupStateInput {
	s.VpnGatewayId = &v
	return s
}

type NiftyReleaseVpnGatewayBackupStateOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s NiftyReleaseVpnGatewayBackupStateOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyReleaseVpnGatewayBackupStateOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyReleaseVpnGatewayBackupStateOutput) SetRequestId(v string) *NiftyReleaseVpnGatewayBackupStateOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *NiftyReleaseVpnGatewayBackupStateOutput) SetReturn(v bool) *NiftyReleaseVpnGatewayBackupStateOutput {
	s.Return = &v
	return s
}

type NiftyReplaceDhcpConfigInput struct {
	_ struct{} `type:"structure"`

	Agreement *bool `locationName:"Agreement" type:"boolean"`

	DhcpConfigId *string `locationName:"DhcpConfigId" type:"string"`

	NetworkId *string `locationName:"NetworkId" type:"string"`

	NetworkName *string `locationName:"NetworkName" type:"string"`

	RouterId *string `locationName:"RouterId" type:"string"`

	RouterName *string `locationName:"RouterName" type:"string"`
}

// String returns the string representation
func (s NiftyReplaceDhcpConfigInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyReplaceDhcpConfigInput) GoString() string {
	return s.String()
}

// SetAgreement sets the Agreement field's value.
func (s *NiftyReplaceDhcpConfigInput) SetAgreement(v bool) *NiftyReplaceDhcpConfigInput {
	s.Agreement = &v
	return s
}

// SetDhcpConfigId sets the DhcpConfigId field's value.
func (s *NiftyReplaceDhcpConfigInput) SetDhcpConfigId(v string) *NiftyReplaceDhcpConfigInput {
	s.DhcpConfigId = &v
	return s
}

// SetNetworkId sets the NetworkId field's value.
func (s *NiftyReplaceDhcpConfigInput) SetNetworkId(v string) *NiftyReplaceDhcpConfigInput {
	s.NetworkId = &v
	return s
}

// SetNetworkName sets the NetworkName field's value.
func (s *NiftyReplaceDhcpConfigInput) SetNetworkName(v string) *NiftyReplaceDhcpConfigInput {
	s.NetworkName = &v
	return s
}

// SetRouterId sets the RouterId field's value.
func (s *NiftyReplaceDhcpConfigInput) SetRouterId(v string) *NiftyReplaceDhcpConfigInput {
	s.RouterId = &v
	return s
}

// SetRouterName sets the RouterName field's value.
func (s *NiftyReplaceDhcpConfigInput) SetRouterName(v string) *NiftyReplaceDhcpConfigInput {
	s.RouterName = &v
	return s
}

type NiftyReplaceDhcpConfigOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s NiftyReplaceDhcpConfigOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyReplaceDhcpConfigOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyReplaceDhcpConfigOutput) SetRequestId(v string) *NiftyReplaceDhcpConfigOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *NiftyReplaceDhcpConfigOutput) SetReturn(v bool) *NiftyReplaceDhcpConfigOutput {
	s.Return = &v
	return s
}

type NiftyReplaceDhcpOptionInput struct {
	_ struct{} `type:"structure"`

	Agreement *bool `locationName:"Agreement" type:"boolean"`

	DhcpOptionsId *string `locationName:"DhcpOptionsId" type:"string"`

	NetworkId *string `locationName:"NetworkId" type:"string"`

	NetworkName *string `locationName:"NetworkName" type:"string"`

	RouterId *string `locationName:"RouterId" type:"string"`

	RouterName *string `locationName:"RouterName" type:"string"`
}

// String returns the string representation
func (s NiftyReplaceDhcpOptionInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyReplaceDhcpOptionInput) GoString() string {
	return s.String()
}

// SetAgreement sets the Agreement field's value.
func (s *NiftyReplaceDhcpOptionInput) SetAgreement(v bool) *NiftyReplaceDhcpOptionInput {
	s.Agreement = &v
	return s
}

// SetDhcpOptionsId sets the DhcpOptionsId field's value.
func (s *NiftyReplaceDhcpOptionInput) SetDhcpOptionsId(v string) *NiftyReplaceDhcpOptionInput {
	s.DhcpOptionsId = &v
	return s
}

// SetNetworkId sets the NetworkId field's value.
func (s *NiftyReplaceDhcpOptionInput) SetNetworkId(v string) *NiftyReplaceDhcpOptionInput {
	s.NetworkId = &v
	return s
}

// SetNetworkName sets the NetworkName field's value.
func (s *NiftyReplaceDhcpOptionInput) SetNetworkName(v string) *NiftyReplaceDhcpOptionInput {
	s.NetworkName = &v
	return s
}

// SetRouterId sets the RouterId field's value.
func (s *NiftyReplaceDhcpOptionInput) SetRouterId(v string) *NiftyReplaceDhcpOptionInput {
	s.RouterId = &v
	return s
}

// SetRouterName sets the RouterName field's value.
func (s *NiftyReplaceDhcpOptionInput) SetRouterName(v string) *NiftyReplaceDhcpOptionInput {
	s.RouterName = &v
	return s
}

type NiftyReplaceDhcpOptionOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s NiftyReplaceDhcpOptionOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyReplaceDhcpOptionOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyReplaceDhcpOptionOutput) SetRequestId(v string) *NiftyReplaceDhcpOptionOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *NiftyReplaceDhcpOptionOutput) SetReturn(v bool) *NiftyReplaceDhcpOptionOutput {
	s.Return = &v
	return s
}

type NiftyReplaceElasticLoadBalancerLatestVersionInput struct {
	_ struct{} `type:"structure"`

	ElasticLoadBalancerId *string `locationName:"ElasticLoadBalancerId" type:"string"`

	ElasticLoadBalancerName *string `locationName:"ElasticLoadBalancerName" type:"string"`
}

// String returns the string representation
func (s NiftyReplaceElasticLoadBalancerLatestVersionInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyReplaceElasticLoadBalancerLatestVersionInput) GoString() string {
	return s.String()
}

// SetElasticLoadBalancerId sets the ElasticLoadBalancerId field's value.
func (s *NiftyReplaceElasticLoadBalancerLatestVersionInput) SetElasticLoadBalancerId(v string) *NiftyReplaceElasticLoadBalancerLatestVersionInput {
	s.ElasticLoadBalancerId = &v
	return s
}

// SetElasticLoadBalancerName sets the ElasticLoadBalancerName field's value.
func (s *NiftyReplaceElasticLoadBalancerLatestVersionInput) SetElasticLoadBalancerName(v string) *NiftyReplaceElasticLoadBalancerLatestVersionInput {
	s.ElasticLoadBalancerName = &v
	return s
}

type NiftyReplaceElasticLoadBalancerLatestVersionOutput struct {
	_ struct{} `type:"structure"`

	ResponseMetadata *ResponseMetadata `locationName:"ResponseMetadata" type:"structure"`
}

// String returns the string representation
func (s NiftyReplaceElasticLoadBalancerLatestVersionOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyReplaceElasticLoadBalancerLatestVersionOutput) GoString() string {
	return s.String()
}

// SetResponseMetadata sets the ResponseMetadata field's value.
func (s *NiftyReplaceElasticLoadBalancerLatestVersionOutput) SetResponseMetadata(v *ResponseMetadata) *NiftyReplaceElasticLoadBalancerLatestVersionOutput {
	s.ResponseMetadata = v
	return s
}

type NiftyReplaceNatRuleInput struct {
	_ struct{} `type:"structure"`

	Description *string `locationName:"Description" type:"string"`

	Destination *RequestDestinationStruct `locationName:"Destination" type:"structure"`

	InboundInterface *RequestInboundInterfaceStruct `locationName:"InboundInterface" type:"structure"`

	NatTableId *string `locationName:"NatTableId" type:"string"`

	NatType *string `locationName:"NatType" type:"string"`

	OutboundInterface *RequestOutboundInterfaceStruct `locationName:"OutboundInterface" type:"structure"`

	Protocol *string `locationName:"Protocol" type:"string"`

	RuleNumber *string `locationName:"RuleNumber" type:"string"`

	Source *RequestSourceStruct `locationName:"Source" type:"structure"`

	Translation *RequestTranslationStruct `locationName:"Translation" type:"structure"`
}

// String returns the string representation
func (s NiftyReplaceNatRuleInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyReplaceNatRuleInput) GoString() string {
	return s.String()
}

// SetDescription sets the Description field's value.
func (s *NiftyReplaceNatRuleInput) SetDescription(v string) *NiftyReplaceNatRuleInput {
	s.Description = &v
	return s
}

// SetDestination sets the Destination field's value.
func (s *NiftyReplaceNatRuleInput) SetDestination(v *RequestDestinationStruct) *NiftyReplaceNatRuleInput {
	s.Destination = v
	return s
}

// SetInboundInterface sets the InboundInterface field's value.
func (s *NiftyReplaceNatRuleInput) SetInboundInterface(v *RequestInboundInterfaceStruct) *NiftyReplaceNatRuleInput {
	s.InboundInterface = v
	return s
}

// SetNatTableId sets the NatTableId field's value.
func (s *NiftyReplaceNatRuleInput) SetNatTableId(v string) *NiftyReplaceNatRuleInput {
	s.NatTableId = &v
	return s
}

// SetNatType sets the NatType field's value.
func (s *NiftyReplaceNatRuleInput) SetNatType(v string) *NiftyReplaceNatRuleInput {
	s.NatType = &v
	return s
}

// SetOutboundInterface sets the OutboundInterface field's value.
func (s *NiftyReplaceNatRuleInput) SetOutboundInterface(v *RequestOutboundInterfaceStruct) *NiftyReplaceNatRuleInput {
	s.OutboundInterface = v
	return s
}

// SetProtocol sets the Protocol field's value.
func (s *NiftyReplaceNatRuleInput) SetProtocol(v string) *NiftyReplaceNatRuleInput {
	s.Protocol = &v
	return s
}

// SetRuleNumber sets the RuleNumber field's value.
func (s *NiftyReplaceNatRuleInput) SetRuleNumber(v string) *NiftyReplaceNatRuleInput {
	s.RuleNumber = &v
	return s
}

// SetSource sets the Source field's value.
func (s *NiftyReplaceNatRuleInput) SetSource(v *RequestSourceStruct) *NiftyReplaceNatRuleInput {
	s.Source = v
	return s
}

// SetTranslation sets the Translation field's value.
func (s *NiftyReplaceNatRuleInput) SetTranslation(v *RequestTranslationStruct) *NiftyReplaceNatRuleInput {
	s.Translation = v
	return s
}

type NiftyReplaceNatRuleOutput struct {
	_ struct{} `type:"structure"`

	NatRule *NatRule `locationName:"natRule" type:"structure"`

	NatTableId *string `locationName:"natTableId" type:"string"`

	RequestId *string `locationName:"requestId" type:"string"`
}

// String returns the string representation
func (s NiftyReplaceNatRuleOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyReplaceNatRuleOutput) GoString() string {
	return s.String()
}

// SetNatRule sets the NatRule field's value.
func (s *NiftyReplaceNatRuleOutput) SetNatRule(v *NatRule) *NiftyReplaceNatRuleOutput {
	s.NatRule = v
	return s
}

// SetNatTableId sets the NatTableId field's value.
func (s *NiftyReplaceNatRuleOutput) SetNatTableId(v string) *NiftyReplaceNatRuleOutput {
	s.NatTableId = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyReplaceNatRuleOutput) SetRequestId(v string) *NiftyReplaceNatRuleOutput {
	s.RequestId = &v
	return s
}

type NiftyReplaceNatTableAssociationInput struct {
	_ struct{} `type:"structure"`

	Agreement *bool `locationName:"Agreement" type:"boolean"`

	AssociationId *string `locationName:"AssociationId" type:"string"`

	NatTableId *string `locationName:"NatTableId" type:"string"`
}

// String returns the string representation
func (s NiftyReplaceNatTableAssociationInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyReplaceNatTableAssociationInput) GoString() string {
	return s.String()
}

// SetAgreement sets the Agreement field's value.
func (s *NiftyReplaceNatTableAssociationInput) SetAgreement(v bool) *NiftyReplaceNatTableAssociationInput {
	s.Agreement = &v
	return s
}

// SetAssociationId sets the AssociationId field's value.
func (s *NiftyReplaceNatTableAssociationInput) SetAssociationId(v string) *NiftyReplaceNatTableAssociationInput {
	s.AssociationId = &v
	return s
}

// SetNatTableId sets the NatTableId field's value.
func (s *NiftyReplaceNatTableAssociationInput) SetNatTableId(v string) *NiftyReplaceNatTableAssociationInput {
	s.NatTableId = &v
	return s
}

type NiftyReplaceNatTableAssociationOutput struct {
	_ struct{} `type:"structure"`

	NewAssociationId *string `locationName:"newAssociationId" type:"string"`

	RequestId *string `locationName:"requestId" type:"string"`
}

// String returns the string representation
func (s NiftyReplaceNatTableAssociationOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyReplaceNatTableAssociationOutput) GoString() string {
	return s.String()
}

// SetNewAssociationId sets the NewAssociationId field's value.
func (s *NiftyReplaceNatTableAssociationOutput) SetNewAssociationId(v string) *NiftyReplaceNatTableAssociationOutput {
	s.NewAssociationId = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyReplaceNatTableAssociationOutput) SetRequestId(v string) *NiftyReplaceNatTableAssociationOutput {
	s.RequestId = &v
	return s
}

type NiftyReplaceRouteTableAssociationWithVpnGatewayInput struct {
	_ struct{} `type:"structure"`

	Agreement *bool `locationName:"Agreement" type:"boolean"`

	AssociationId *string `locationName:"AssociationId" type:"string"`

	RouteTableId *string `locationName:"RouteTableId" type:"string"`
}

// String returns the string representation
func (s NiftyReplaceRouteTableAssociationWithVpnGatewayInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyReplaceRouteTableAssociationWithVpnGatewayInput) GoString() string {
	return s.String()
}

// SetAgreement sets the Agreement field's value.
func (s *NiftyReplaceRouteTableAssociationWithVpnGatewayInput) SetAgreement(v bool) *NiftyReplaceRouteTableAssociationWithVpnGatewayInput {
	s.Agreement = &v
	return s
}

// SetAssociationId sets the AssociationId field's value.
func (s *NiftyReplaceRouteTableAssociationWithVpnGatewayInput) SetAssociationId(v string) *NiftyReplaceRouteTableAssociationWithVpnGatewayInput {
	s.AssociationId = &v
	return s
}

// SetRouteTableId sets the RouteTableId field's value.
func (s *NiftyReplaceRouteTableAssociationWithVpnGatewayInput) SetRouteTableId(v string) *NiftyReplaceRouteTableAssociationWithVpnGatewayInput {
	s.RouteTableId = &v
	return s
}

type NiftyReplaceRouteTableAssociationWithVpnGatewayOutput struct {
	_ struct{} `type:"structure"`

	NewAssociationId *string `locationName:"newAssociationId" type:"string"`

	RequestId *string `locationName:"requestId" type:"string"`
}

// String returns the string representation
func (s NiftyReplaceRouteTableAssociationWithVpnGatewayOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyReplaceRouteTableAssociationWithVpnGatewayOutput) GoString() string {
	return s.String()
}

// SetNewAssociationId sets the NewAssociationId field's value.
func (s *NiftyReplaceRouteTableAssociationWithVpnGatewayOutput) SetNewAssociationId(v string) *NiftyReplaceRouteTableAssociationWithVpnGatewayOutput {
	s.NewAssociationId = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyReplaceRouteTableAssociationWithVpnGatewayOutput) SetRequestId(v string) *NiftyReplaceRouteTableAssociationWithVpnGatewayOutput {
	s.RequestId = &v
	return s
}

type NiftyReplaceRouterLatestVersionInput struct {
	_ struct{} `type:"structure"`

	Agreement *bool `locationName:"Agreement" type:"boolean"`

	RouterId *string `locationName:"RouterId" type:"string"`

	RouterName *string `locationName:"RouterName" type:"string"`
}

// String returns the string representation
func (s NiftyReplaceRouterLatestVersionInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyReplaceRouterLatestVersionInput) GoString() string {
	return s.String()
}

// SetAgreement sets the Agreement field's value.
func (s *NiftyReplaceRouterLatestVersionInput) SetAgreement(v bool) *NiftyReplaceRouterLatestVersionInput {
	s.Agreement = &v
	return s
}

// SetRouterId sets the RouterId field's value.
func (s *NiftyReplaceRouterLatestVersionInput) SetRouterId(v string) *NiftyReplaceRouterLatestVersionInput {
	s.RouterId = &v
	return s
}

// SetRouterName sets the RouterName field's value.
func (s *NiftyReplaceRouterLatestVersionInput) SetRouterName(v string) *NiftyReplaceRouterLatestVersionInput {
	s.RouterName = &v
	return s
}

type NiftyReplaceRouterLatestVersionOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s NiftyReplaceRouterLatestVersionOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyReplaceRouterLatestVersionOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyReplaceRouterLatestVersionOutput) SetRequestId(v string) *NiftyReplaceRouterLatestVersionOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *NiftyReplaceRouterLatestVersionOutput) SetReturn(v bool) *NiftyReplaceRouterLatestVersionOutput {
	s.Return = &v
	return s
}

type NiftyReplaceVpnGatewayLatestVersionInput struct {
	_ struct{} `type:"structure"`

	Agreement *bool `locationName:"Agreement" type:"boolean"`

	NiftyVpnGatewayName *string `locationName:"NiftyVpnGatewayName" type:"string"`

	VpnGatewayId *string `locationName:"VpnGatewayId" type:"string"`
}

// String returns the string representation
func (s NiftyReplaceVpnGatewayLatestVersionInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyReplaceVpnGatewayLatestVersionInput) GoString() string {
	return s.String()
}

// SetAgreement sets the Agreement field's value.
func (s *NiftyReplaceVpnGatewayLatestVersionInput) SetAgreement(v bool) *NiftyReplaceVpnGatewayLatestVersionInput {
	s.Agreement = &v
	return s
}

// SetNiftyVpnGatewayName sets the NiftyVpnGatewayName field's value.
func (s *NiftyReplaceVpnGatewayLatestVersionInput) SetNiftyVpnGatewayName(v string) *NiftyReplaceVpnGatewayLatestVersionInput {
	s.NiftyVpnGatewayName = &v
	return s
}

// SetVpnGatewayId sets the VpnGatewayId field's value.
func (s *NiftyReplaceVpnGatewayLatestVersionInput) SetVpnGatewayId(v string) *NiftyReplaceVpnGatewayLatestVersionInput {
	s.VpnGatewayId = &v
	return s
}

type NiftyReplaceVpnGatewayLatestVersionOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s NiftyReplaceVpnGatewayLatestVersionOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyReplaceVpnGatewayLatestVersionOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyReplaceVpnGatewayLatestVersionOutput) SetRequestId(v string) *NiftyReplaceVpnGatewayLatestVersionOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *NiftyReplaceVpnGatewayLatestVersionOutput) SetReturn(v bool) *NiftyReplaceVpnGatewayLatestVersionOutput {
	s.Return = &v
	return s
}

type NiftyRestoreInstanceSnapshotInput struct {
	_ struct{} `type:"structure"`

	InstanceSnapshotId *string `locationName:"InstanceSnapshotId" type:"string"`

	SnapshotName *string `locationName:"SnapshotName" type:"string"`
}

// String returns the string representation
func (s NiftyRestoreInstanceSnapshotInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyRestoreInstanceSnapshotInput) GoString() string {
	return s.String()
}

// SetInstanceSnapshotId sets the InstanceSnapshotId field's value.
func (s *NiftyRestoreInstanceSnapshotInput) SetInstanceSnapshotId(v string) *NiftyRestoreInstanceSnapshotInput {
	s.InstanceSnapshotId = &v
	return s
}

// SetSnapshotName sets the SnapshotName field's value.
func (s *NiftyRestoreInstanceSnapshotInput) SetSnapshotName(v string) *NiftyRestoreInstanceSnapshotInput {
	s.SnapshotName = &v
	return s
}

type NiftyRestoreInstanceSnapshotOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s NiftyRestoreInstanceSnapshotOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyRestoreInstanceSnapshotOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyRestoreInstanceSnapshotOutput) SetRequestId(v string) *NiftyRestoreInstanceSnapshotOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *NiftyRestoreInstanceSnapshotOutput) SetReturn(v bool) *NiftyRestoreInstanceSnapshotOutput {
	s.Return = &v
	return s
}

type NiftyRestoreRouterPreviousVersionInput struct {
	_ struct{} `type:"structure"`

	RouterId *string `locationName:"RouterId" type:"string"`

	RouterName *string `locationName:"RouterName" type:"string"`
}

// String returns the string representation
func (s NiftyRestoreRouterPreviousVersionInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyRestoreRouterPreviousVersionInput) GoString() string {
	return s.String()
}

// SetRouterId sets the RouterId field's value.
func (s *NiftyRestoreRouterPreviousVersionInput) SetRouterId(v string) *NiftyRestoreRouterPreviousVersionInput {
	s.RouterId = &v
	return s
}

// SetRouterName sets the RouterName field's value.
func (s *NiftyRestoreRouterPreviousVersionInput) SetRouterName(v string) *NiftyRestoreRouterPreviousVersionInput {
	s.RouterName = &v
	return s
}

type NiftyRestoreRouterPreviousVersionOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s NiftyRestoreRouterPreviousVersionOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyRestoreRouterPreviousVersionOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyRestoreRouterPreviousVersionOutput) SetRequestId(v string) *NiftyRestoreRouterPreviousVersionOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *NiftyRestoreRouterPreviousVersionOutput) SetReturn(v bool) *NiftyRestoreRouterPreviousVersionOutput {
	s.Return = &v
	return s
}

type NiftyRestoreVpnGatewayPreviousVersionInput struct {
	_ struct{} `type:"structure"`

	NiftyVpnGatewayName *string `locationName:"NiftyVpnGatewayName" type:"string"`

	VpnGatewayId *string `locationName:"VpnGatewayId" type:"string"`
}

// String returns the string representation
func (s NiftyRestoreVpnGatewayPreviousVersionInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyRestoreVpnGatewayPreviousVersionInput) GoString() string {
	return s.String()
}

// SetNiftyVpnGatewayName sets the NiftyVpnGatewayName field's value.
func (s *NiftyRestoreVpnGatewayPreviousVersionInput) SetNiftyVpnGatewayName(v string) *NiftyRestoreVpnGatewayPreviousVersionInput {
	s.NiftyVpnGatewayName = &v
	return s
}

// SetVpnGatewayId sets the VpnGatewayId field's value.
func (s *NiftyRestoreVpnGatewayPreviousVersionInput) SetVpnGatewayId(v string) *NiftyRestoreVpnGatewayPreviousVersionInput {
	s.VpnGatewayId = &v
	return s
}

type NiftyRestoreVpnGatewayPreviousVersionOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s NiftyRestoreVpnGatewayPreviousVersionOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyRestoreVpnGatewayPreviousVersionOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyRestoreVpnGatewayPreviousVersionOutput) SetRequestId(v string) *NiftyRestoreVpnGatewayPreviousVersionOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *NiftyRestoreVpnGatewayPreviousVersionOutput) SetReturn(v bool) *NiftyRestoreVpnGatewayPreviousVersionOutput {
	s.Return = &v
	return s
}

type NiftyRetryImportInstanceInput struct {
	_ struct{} `type:"structure"`

	InstanceId *string `locationName:"InstanceId" type:"string"`
}

// String returns the string representation
func (s NiftyRetryImportInstanceInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyRetryImportInstanceInput) GoString() string {
	return s.String()
}

// SetInstanceId sets the InstanceId field's value.
func (s *NiftyRetryImportInstanceInput) SetInstanceId(v string) *NiftyRetryImportInstanceInput {
	s.InstanceId = &v
	return s
}

type NiftyRetryImportInstanceOutput struct {
	_ struct{} `type:"structure"`

	InstanceId *string `locationName:"instanceId" type:"string"`

	InstanceState *string `locationName:"instanceState" type:"string"`

	InstanceUniqueId *string `locationName:"instanceUniqueId" type:"string"`

	RequestId *string `locationName:"requestId" type:"string"`
}

// String returns the string representation
func (s NiftyRetryImportInstanceOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyRetryImportInstanceOutput) GoString() string {
	return s.String()
}

// SetInstanceId sets the InstanceId field's value.
func (s *NiftyRetryImportInstanceOutput) SetInstanceId(v string) *NiftyRetryImportInstanceOutput {
	s.InstanceId = &v
	return s
}

// SetInstanceState sets the InstanceState field's value.
func (s *NiftyRetryImportInstanceOutput) SetInstanceState(v string) *NiftyRetryImportInstanceOutput {
	s.InstanceState = &v
	return s
}

// SetInstanceUniqueId sets the InstanceUniqueId field's value.
func (s *NiftyRetryImportInstanceOutput) SetInstanceUniqueId(v string) *NiftyRetryImportInstanceOutput {
	s.InstanceUniqueId = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyRetryImportInstanceOutput) SetRequestId(v string) *NiftyRetryImportInstanceOutput {
	s.RequestId = &v
	return s
}

type NiftySnapshottingSetItem struct {
	_ struct{} `type:"structure"`

	State *string `locationName:"state" type:"string"`
}

// String returns the string representation
func (s NiftySnapshottingSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftySnapshottingSetItem) GoString() string {
	return s.String()
}

// SetState sets the State field's value.
func (s *NiftySnapshottingSetItem) SetState(v string) *NiftySnapshottingSetItem {
	s.State = &v
	return s
}

type NiftyTunnel struct {
	_ struct{} `type:"structure"`

	DestinationPort *string `locationName:"destinationPort" type:"string"`

	Encapsulation *string `locationName:"encapsulation" type:"string"`

	Mode *string `locationName:"mode" type:"string"`

	PeerSessionId *string `locationName:"peerSessionId" type:"string"`

	PeerTunnelId *string `locationName:"peerTunnelId" type:"string"`

	SessionId *string `locationName:"sessionId" type:"string"`

	SourcePort *string `locationName:"sourcePort" type:"string"`

	TunnelId *string `locationName:"tunnelId" type:"string"`

	Type *string `locationName:"type" type:"string"`
}

// String returns the string representation
func (s NiftyTunnel) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyTunnel) GoString() string {
	return s.String()
}

// SetDestinationPort sets the DestinationPort field's value.
func (s *NiftyTunnel) SetDestinationPort(v string) *NiftyTunnel {
	s.DestinationPort = &v
	return s
}

// SetEncapsulation sets the Encapsulation field's value.
func (s *NiftyTunnel) SetEncapsulation(v string) *NiftyTunnel {
	s.Encapsulation = &v
	return s
}

// SetMode sets the Mode field's value.
func (s *NiftyTunnel) SetMode(v string) *NiftyTunnel {
	s.Mode = &v
	return s
}

// SetPeerSessionId sets the PeerSessionId field's value.
func (s *NiftyTunnel) SetPeerSessionId(v string) *NiftyTunnel {
	s.PeerSessionId = &v
	return s
}

// SetPeerTunnelId sets the PeerTunnelId field's value.
func (s *NiftyTunnel) SetPeerTunnelId(v string) *NiftyTunnel {
	s.PeerTunnelId = &v
	return s
}

// SetSessionId sets the SessionId field's value.
func (s *NiftyTunnel) SetSessionId(v string) *NiftyTunnel {
	s.SessionId = &v
	return s
}

// SetSourcePort sets the SourcePort field's value.
func (s *NiftyTunnel) SetSourcePort(v string) *NiftyTunnel {
	s.SourcePort = &v
	return s
}

// SetTunnelId sets the TunnelId field's value.
func (s *NiftyTunnel) SetTunnelId(v string) *NiftyTunnel {
	s.TunnelId = &v
	return s
}

// SetType sets the Type field's value.
func (s *NiftyTunnel) SetType(v string) *NiftyTunnel {
	s.Type = &v
	return s
}

type NiftyUpdateAlarmInput struct {
	_ struct{} `type:"structure"`

	AlarmCondition *string `locationName:"AlarmCondition" type:"string"`

	Description *string `locationName:"Description" type:"string"`

	ElasticLoadBalancerName []*string `locationName:"ElasticLoadBalancerName" type:"list"`

	ElasticLoadBalancerPort []*int64 `locationName:"ElasticLoadBalancerPort" type:"list"`

	ElasticLoadBalancerProtocol []*string `locationName:"ElasticLoadBalancerProtocol" type:"list"`

	EmailAddress []*string `locationName:"EmailAddress" type:"list"`

	FunctionName *string `locationName:"FunctionName" type:"string"`

	InstanceId []*string `locationName:"InstanceId" type:"list"`

	LoadBalancerName []*string `locationName:"LoadBalancerName" type:"list"`

	LoadBalancerPort []*int64 `locationName:"LoadBalancerPort" type:"list"`

	Partition []*string `locationName:"Partition" type:"list"`

	Rule []*RequestRuleStruct `locationName:"Rule" type:"list"`

	RuleName *string `locationName:"RuleName" type:"string"`

	RuleNameUpdate *string `locationName:"RuleNameUpdate" type:"string"`
}

// String returns the string representation
func (s NiftyUpdateAlarmInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyUpdateAlarmInput) GoString() string {
	return s.String()
}

// SetAlarmCondition sets the AlarmCondition field's value.
func (s *NiftyUpdateAlarmInput) SetAlarmCondition(v string) *NiftyUpdateAlarmInput {
	s.AlarmCondition = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *NiftyUpdateAlarmInput) SetDescription(v string) *NiftyUpdateAlarmInput {
	s.Description = &v
	return s
}

// SetElasticLoadBalancerName sets the ElasticLoadBalancerName field's value.
func (s *NiftyUpdateAlarmInput) SetElasticLoadBalancerName(v []*string) *NiftyUpdateAlarmInput {
	s.ElasticLoadBalancerName = v
	return s
}

// SetElasticLoadBalancerPort sets the ElasticLoadBalancerPort field's value.
func (s *NiftyUpdateAlarmInput) SetElasticLoadBalancerPort(v []*int64) *NiftyUpdateAlarmInput {
	s.ElasticLoadBalancerPort = v
	return s
}

// SetElasticLoadBalancerProtocol sets the ElasticLoadBalancerProtocol field's value.
func (s *NiftyUpdateAlarmInput) SetElasticLoadBalancerProtocol(v []*string) *NiftyUpdateAlarmInput {
	s.ElasticLoadBalancerProtocol = v
	return s
}

// SetEmailAddress sets the EmailAddress field's value.
func (s *NiftyUpdateAlarmInput) SetEmailAddress(v []*string) *NiftyUpdateAlarmInput {
	s.EmailAddress = v
	return s
}

// SetFunctionName sets the FunctionName field's value.
func (s *NiftyUpdateAlarmInput) SetFunctionName(v string) *NiftyUpdateAlarmInput {
	s.FunctionName = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *NiftyUpdateAlarmInput) SetInstanceId(v []*string) *NiftyUpdateAlarmInput {
	s.InstanceId = v
	return s
}

// SetLoadBalancerName sets the LoadBalancerName field's value.
func (s *NiftyUpdateAlarmInput) SetLoadBalancerName(v []*string) *NiftyUpdateAlarmInput {
	s.LoadBalancerName = v
	return s
}

// SetLoadBalancerPort sets the LoadBalancerPort field's value.
func (s *NiftyUpdateAlarmInput) SetLoadBalancerPort(v []*int64) *NiftyUpdateAlarmInput {
	s.LoadBalancerPort = v
	return s
}

// SetPartition sets the Partition field's value.
func (s *NiftyUpdateAlarmInput) SetPartition(v []*string) *NiftyUpdateAlarmInput {
	s.Partition = v
	return s
}

// SetRule sets the Rule field's value.
func (s *NiftyUpdateAlarmInput) SetRule(v []*RequestRuleStruct) *NiftyUpdateAlarmInput {
	s.Rule = v
	return s
}

// SetRuleName sets the RuleName field's value.
func (s *NiftyUpdateAlarmInput) SetRuleName(v string) *NiftyUpdateAlarmInput {
	s.RuleName = &v
	return s
}

// SetRuleNameUpdate sets the RuleNameUpdate field's value.
func (s *NiftyUpdateAlarmInput) SetRuleNameUpdate(v string) *NiftyUpdateAlarmInput {
	s.RuleNameUpdate = &v
	return s
}

type NiftyUpdateAlarmOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s NiftyUpdateAlarmOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyUpdateAlarmOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyUpdateAlarmOutput) SetRequestId(v string) *NiftyUpdateAlarmOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *NiftyUpdateAlarmOutput) SetReturn(v bool) *NiftyUpdateAlarmOutput {
	s.Return = &v
	return s
}

type NiftyUpdateAutoScalingGroupInput struct {
	_ struct{} `type:"structure"`

	AutoScalingGroupName *string `locationName:"AutoScalingGroupName" type:"string"`

	AutoScalingGroupNameUpdate *string `locationName:"AutoScalingGroupNameUpdate" type:"string"`

	ChangeInCapacity *int64 `locationName:"ChangeInCapacity" type:"integer"`

	DefaultCooldown *int64 `locationName:"DefaultCooldown" type:"integer"`

	Description *string `locationName:"Description" type:"string"`

	ImageId *string `locationName:"ImageId" type:"string"`

	InstanceLifecycleLimit *int64 `locationName:"InstanceLifecycleLimit" type:"integer"`

	InstanceType *string `locationName:"InstanceType" type:"string"`

	LoadBalancers []*RequestLoadBalancersStruct `locationName:"LoadBalancers" type:"list"`

	MaxSize *int64 `locationName:"MaxSize" type:"integer"`

	MinSize *int64 `locationName:"MinSize" type:"integer"`

	Scaleout *int64 `locationName:"Scaleout" type:"integer"`

	ScaleoutCondition *string `locationName:"ScaleoutCondition" type:"string"`

	ScalingSchedule []*RequestScalingScheduleStruct `locationName:"ScalingSchedule" type:"list"`

	ScalingTrigger []*RequestScalingTriggerStruct `locationName:"ScalingTrigger" type:"list"`

	SecurityGroup []*string `locationName:"SecurityGroup" type:"list"`
}

// String returns the string representation
func (s NiftyUpdateAutoScalingGroupInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyUpdateAutoScalingGroupInput) GoString() string {
	return s.String()
}

// SetAutoScalingGroupName sets the AutoScalingGroupName field's value.
func (s *NiftyUpdateAutoScalingGroupInput) SetAutoScalingGroupName(v string) *NiftyUpdateAutoScalingGroupInput {
	s.AutoScalingGroupName = &v
	return s
}

// SetAutoScalingGroupNameUpdate sets the AutoScalingGroupNameUpdate field's value.
func (s *NiftyUpdateAutoScalingGroupInput) SetAutoScalingGroupNameUpdate(v string) *NiftyUpdateAutoScalingGroupInput {
	s.AutoScalingGroupNameUpdate = &v
	return s
}

// SetChangeInCapacity sets the ChangeInCapacity field's value.
func (s *NiftyUpdateAutoScalingGroupInput) SetChangeInCapacity(v int64) *NiftyUpdateAutoScalingGroupInput {
	s.ChangeInCapacity = &v
	return s
}

// SetDefaultCooldown sets the DefaultCooldown field's value.
func (s *NiftyUpdateAutoScalingGroupInput) SetDefaultCooldown(v int64) *NiftyUpdateAutoScalingGroupInput {
	s.DefaultCooldown = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *NiftyUpdateAutoScalingGroupInput) SetDescription(v string) *NiftyUpdateAutoScalingGroupInput {
	s.Description = &v
	return s
}

// SetImageId sets the ImageId field's value.
func (s *NiftyUpdateAutoScalingGroupInput) SetImageId(v string) *NiftyUpdateAutoScalingGroupInput {
	s.ImageId = &v
	return s
}

// SetInstanceLifecycleLimit sets the InstanceLifecycleLimit field's value.
func (s *NiftyUpdateAutoScalingGroupInput) SetInstanceLifecycleLimit(v int64) *NiftyUpdateAutoScalingGroupInput {
	s.InstanceLifecycleLimit = &v
	return s
}

// SetInstanceType sets the InstanceType field's value.
func (s *NiftyUpdateAutoScalingGroupInput) SetInstanceType(v string) *NiftyUpdateAutoScalingGroupInput {
	s.InstanceType = &v
	return s
}

// SetLoadBalancers sets the LoadBalancers field's value.
func (s *NiftyUpdateAutoScalingGroupInput) SetLoadBalancers(v []*RequestLoadBalancersStruct) *NiftyUpdateAutoScalingGroupInput {
	s.LoadBalancers = v
	return s
}

// SetMaxSize sets the MaxSize field's value.
func (s *NiftyUpdateAutoScalingGroupInput) SetMaxSize(v int64) *NiftyUpdateAutoScalingGroupInput {
	s.MaxSize = &v
	return s
}

// SetMinSize sets the MinSize field's value.
func (s *NiftyUpdateAutoScalingGroupInput) SetMinSize(v int64) *NiftyUpdateAutoScalingGroupInput {
	s.MinSize = &v
	return s
}

// SetScaleout sets the Scaleout field's value.
func (s *NiftyUpdateAutoScalingGroupInput) SetScaleout(v int64) *NiftyUpdateAutoScalingGroupInput {
	s.Scaleout = &v
	return s
}

// SetScaleoutCondition sets the ScaleoutCondition field's value.
func (s *NiftyUpdateAutoScalingGroupInput) SetScaleoutCondition(v string) *NiftyUpdateAutoScalingGroupInput {
	s.ScaleoutCondition = &v
	return s
}

// SetScalingSchedule sets the ScalingSchedule field's value.
func (s *NiftyUpdateAutoScalingGroupInput) SetScalingSchedule(v []*RequestScalingScheduleStruct) *NiftyUpdateAutoScalingGroupInput {
	s.ScalingSchedule = v
	return s
}

// SetScalingTrigger sets the ScalingTrigger field's value.
func (s *NiftyUpdateAutoScalingGroupInput) SetScalingTrigger(v []*RequestScalingTriggerStruct) *NiftyUpdateAutoScalingGroupInput {
	s.ScalingTrigger = v
	return s
}

// SetSecurityGroup sets the SecurityGroup field's value.
func (s *NiftyUpdateAutoScalingGroupInput) SetSecurityGroup(v []*string) *NiftyUpdateAutoScalingGroupInput {
	s.SecurityGroup = v
	return s
}

type NiftyUpdateAutoScalingGroupOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s NiftyUpdateAutoScalingGroupOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyUpdateAutoScalingGroupOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyUpdateAutoScalingGroupOutput) SetRequestId(v string) *NiftyUpdateAutoScalingGroupOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *NiftyUpdateAutoScalingGroupOutput) SetReturn(v bool) *NiftyUpdateAutoScalingGroupOutput {
	s.Return = &v
	return s
}

type NiftyUpdateElasticLoadBalancerInput struct {
	_ struct{} `type:"structure"`

	AccountingTypeUpdate *int64 `locationName:"AccountingTypeUpdate" type:"integer"`

	ElasticLoadBalancerId *string `locationName:"ElasticLoadBalancerId" type:"string"`

	ElasticLoadBalancerName *string `locationName:"ElasticLoadBalancerName" type:"string"`

	ElasticLoadBalancerNameUpdate *string `locationName:"ElasticLoadBalancerNameUpdate" type:"string"`

	NetworkVolumeUpdate *int64 `locationName:"NetworkVolumeUpdate" type:"integer"`
}

// String returns the string representation
func (s NiftyUpdateElasticLoadBalancerInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyUpdateElasticLoadBalancerInput) GoString() string {
	return s.String()
}

// SetAccountingTypeUpdate sets the AccountingTypeUpdate field's value.
func (s *NiftyUpdateElasticLoadBalancerInput) SetAccountingTypeUpdate(v int64) *NiftyUpdateElasticLoadBalancerInput {
	s.AccountingTypeUpdate = &v
	return s
}

// SetElasticLoadBalancerId sets the ElasticLoadBalancerId field's value.
func (s *NiftyUpdateElasticLoadBalancerInput) SetElasticLoadBalancerId(v string) *NiftyUpdateElasticLoadBalancerInput {
	s.ElasticLoadBalancerId = &v
	return s
}

// SetElasticLoadBalancerName sets the ElasticLoadBalancerName field's value.
func (s *NiftyUpdateElasticLoadBalancerInput) SetElasticLoadBalancerName(v string) *NiftyUpdateElasticLoadBalancerInput {
	s.ElasticLoadBalancerName = &v
	return s
}

// SetElasticLoadBalancerNameUpdate sets the ElasticLoadBalancerNameUpdate field's value.
func (s *NiftyUpdateElasticLoadBalancerInput) SetElasticLoadBalancerNameUpdate(v string) *NiftyUpdateElasticLoadBalancerInput {
	s.ElasticLoadBalancerNameUpdate = &v
	return s
}

// SetNetworkVolumeUpdate sets the NetworkVolumeUpdate field's value.
func (s *NiftyUpdateElasticLoadBalancerInput) SetNetworkVolumeUpdate(v int64) *NiftyUpdateElasticLoadBalancerInput {
	s.NetworkVolumeUpdate = &v
	return s
}

type NiftyUpdateElasticLoadBalancerOutput struct {
	_ struct{} `type:"structure"`

	ResponseMetadata *ResponseMetadata `locationName:"ResponseMetadata" type:"structure"`
}

// String returns the string representation
func (s NiftyUpdateElasticLoadBalancerOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyUpdateElasticLoadBalancerOutput) GoString() string {
	return s.String()
}

// SetResponseMetadata sets the ResponseMetadata field's value.
func (s *NiftyUpdateElasticLoadBalancerOutput) SetResponseMetadata(v *ResponseMetadata) *NiftyUpdateElasticLoadBalancerOutput {
	s.ResponseMetadata = v
	return s
}

type NiftyUpdateInstanceNetworkInterfacesInput struct {
	_ struct{} `type:"structure"`

	InstanceId *string `locationName:"InstanceId" type:"string"`

	NetworkInterface []*RequestNetworkInterfaceStruct `locationName:"NetworkInterface" type:"list"`

	NiftyReboot *string `locationName:"NiftyReboot" type:"string"`
}

// String returns the string representation
func (s NiftyUpdateInstanceNetworkInterfacesInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyUpdateInstanceNetworkInterfacesInput) GoString() string {
	return s.String()
}

// SetInstanceId sets the InstanceId field's value.
func (s *NiftyUpdateInstanceNetworkInterfacesInput) SetInstanceId(v string) *NiftyUpdateInstanceNetworkInterfacesInput {
	s.InstanceId = &v
	return s
}

// SetNetworkInterface sets the NetworkInterface field's value.
func (s *NiftyUpdateInstanceNetworkInterfacesInput) SetNetworkInterface(v []*RequestNetworkInterfaceStruct) *NiftyUpdateInstanceNetworkInterfacesInput {
	s.NetworkInterface = v
	return s
}

// SetNiftyReboot sets the NiftyReboot field's value.
func (s *NiftyUpdateInstanceNetworkInterfacesInput) SetNiftyReboot(v string) *NiftyUpdateInstanceNetworkInterfacesInput {
	s.NiftyReboot = &v
	return s
}

type NiftyUpdateInstanceNetworkInterfacesOutput struct {
	_ struct{} `type:"structure"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s NiftyUpdateInstanceNetworkInterfacesOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyUpdateInstanceNetworkInterfacesOutput) GoString() string {
	return s.String()
}

// SetReturn sets the Return field's value.
func (s *NiftyUpdateInstanceNetworkInterfacesOutput) SetReturn(v bool) *NiftyUpdateInstanceNetworkInterfacesOutput {
	s.Return = &v
	return s
}

type NiftyUpdateRouterNetworkInterfacesInput struct {
	_ struct{} `type:"structure"`

	Agreement *bool `locationName:"Agreement" type:"boolean"`

	NetworkInterface []*RequestNetworkInterfaceStruct `locationName:"NetworkInterface" type:"list"`

	NiftyReboot *string `locationName:"NiftyReboot" type:"string"`

	RouterId *string `locationName:"RouterId" type:"string"`

	RouterName *string `locationName:"RouterName" type:"string"`
}

// String returns the string representation
func (s NiftyUpdateRouterNetworkInterfacesInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyUpdateRouterNetworkInterfacesInput) GoString() string {
	return s.String()
}

// SetAgreement sets the Agreement field's value.
func (s *NiftyUpdateRouterNetworkInterfacesInput) SetAgreement(v bool) *NiftyUpdateRouterNetworkInterfacesInput {
	s.Agreement = &v
	return s
}

// SetNetworkInterface sets the NetworkInterface field's value.
func (s *NiftyUpdateRouterNetworkInterfacesInput) SetNetworkInterface(v []*RequestNetworkInterfaceStruct) *NiftyUpdateRouterNetworkInterfacesInput {
	s.NetworkInterface = v
	return s
}

// SetNiftyReboot sets the NiftyReboot field's value.
func (s *NiftyUpdateRouterNetworkInterfacesInput) SetNiftyReboot(v string) *NiftyUpdateRouterNetworkInterfacesInput {
	s.NiftyReboot = &v
	return s
}

// SetRouterId sets the RouterId field's value.
func (s *NiftyUpdateRouterNetworkInterfacesInput) SetRouterId(v string) *NiftyUpdateRouterNetworkInterfacesInput {
	s.RouterId = &v
	return s
}

// SetRouterName sets the RouterName field's value.
func (s *NiftyUpdateRouterNetworkInterfacesInput) SetRouterName(v string) *NiftyUpdateRouterNetworkInterfacesInput {
	s.RouterName = &v
	return s
}

type NiftyUpdateRouterNetworkInterfacesOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s NiftyUpdateRouterNetworkInterfacesOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyUpdateRouterNetworkInterfacesOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyUpdateRouterNetworkInterfacesOutput) SetRequestId(v string) *NiftyUpdateRouterNetworkInterfacesOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *NiftyUpdateRouterNetworkInterfacesOutput) SetReturn(v bool) *NiftyUpdateRouterNetworkInterfacesOutput {
	s.Return = &v
	return s
}

type NiftyUpdateSeparateInstanceRuleInput struct {
	_ struct{} `type:"structure"`

	SeparateInstanceRuleDescriptionUpdate *string `locationName:"SeparateInstanceRuleDescriptionUpdate" type:"string"`

	SeparateInstanceRuleName *string `locationName:"SeparateInstanceRuleName" type:"string"`

	SeparateInstanceRuleNameUpdate *string `locationName:"SeparateInstanceRuleNameUpdate" type:"string"`
}

// String returns the string representation
func (s NiftyUpdateSeparateInstanceRuleInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyUpdateSeparateInstanceRuleInput) GoString() string {
	return s.String()
}

// SetSeparateInstanceRuleDescriptionUpdate sets the SeparateInstanceRuleDescriptionUpdate field's value.
func (s *NiftyUpdateSeparateInstanceRuleInput) SetSeparateInstanceRuleDescriptionUpdate(v string) *NiftyUpdateSeparateInstanceRuleInput {
	s.SeparateInstanceRuleDescriptionUpdate = &v
	return s
}

// SetSeparateInstanceRuleName sets the SeparateInstanceRuleName field's value.
func (s *NiftyUpdateSeparateInstanceRuleInput) SetSeparateInstanceRuleName(v string) *NiftyUpdateSeparateInstanceRuleInput {
	s.SeparateInstanceRuleName = &v
	return s
}

// SetSeparateInstanceRuleNameUpdate sets the SeparateInstanceRuleNameUpdate field's value.
func (s *NiftyUpdateSeparateInstanceRuleInput) SetSeparateInstanceRuleNameUpdate(v string) *NiftyUpdateSeparateInstanceRuleInput {
	s.SeparateInstanceRuleNameUpdate = &v
	return s
}

type NiftyUpdateSeparateInstanceRuleOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *string `locationName:"return" type:"string"`
}

// String returns the string representation
func (s NiftyUpdateSeparateInstanceRuleOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyUpdateSeparateInstanceRuleOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyUpdateSeparateInstanceRuleOutput) SetRequestId(v string) *NiftyUpdateSeparateInstanceRuleOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *NiftyUpdateSeparateInstanceRuleOutput) SetReturn(v string) *NiftyUpdateSeparateInstanceRuleOutput {
	s.Return = &v
	return s
}

type NiftyUpdateVpnGatewayNetworkInterfacesInput struct {
	_ struct{} `type:"structure"`

	Agreement *bool `locationName:"Agreement" type:"boolean"`

	NetworkInterface *RequestNetworkInterfaceStruct `locationName:"NetworkInterface" type:"structure"`

	NiftyReboot *string `locationName:"NiftyReboot" type:"string"`

	NiftyVpnGatewayName *string `locationName:"NiftyVpnGatewayName" type:"string"`

	VpnGatewayId *string `locationName:"VpnGatewayId" type:"string"`
}

// String returns the string representation
func (s NiftyUpdateVpnGatewayNetworkInterfacesInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyUpdateVpnGatewayNetworkInterfacesInput) GoString() string {
	return s.String()
}

// SetAgreement sets the Agreement field's value.
func (s *NiftyUpdateVpnGatewayNetworkInterfacesInput) SetAgreement(v bool) *NiftyUpdateVpnGatewayNetworkInterfacesInput {
	s.Agreement = &v
	return s
}

// SetNetworkInterface sets the NetworkInterface field's value.
func (s *NiftyUpdateVpnGatewayNetworkInterfacesInput) SetNetworkInterface(v *RequestNetworkInterfaceStruct) *NiftyUpdateVpnGatewayNetworkInterfacesInput {
	s.NetworkInterface = v
	return s
}

// SetNiftyReboot sets the NiftyReboot field's value.
func (s *NiftyUpdateVpnGatewayNetworkInterfacesInput) SetNiftyReboot(v string) *NiftyUpdateVpnGatewayNetworkInterfacesInput {
	s.NiftyReboot = &v
	return s
}

// SetNiftyVpnGatewayName sets the NiftyVpnGatewayName field's value.
func (s *NiftyUpdateVpnGatewayNetworkInterfacesInput) SetNiftyVpnGatewayName(v string) *NiftyUpdateVpnGatewayNetworkInterfacesInput {
	s.NiftyVpnGatewayName = &v
	return s
}

// SetVpnGatewayId sets the VpnGatewayId field's value.
func (s *NiftyUpdateVpnGatewayNetworkInterfacesInput) SetVpnGatewayId(v string) *NiftyUpdateVpnGatewayNetworkInterfacesInput {
	s.VpnGatewayId = &v
	return s
}

type NiftyUpdateVpnGatewayNetworkInterfacesOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s NiftyUpdateVpnGatewayNetworkInterfacesOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NiftyUpdateVpnGatewayNetworkInterfacesOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *NiftyUpdateVpnGatewayNetworkInterfacesOutput) SetRequestId(v string) *NiftyUpdateVpnGatewayNetworkInterfacesOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *NiftyUpdateVpnGatewayNetworkInterfacesOutput) SetReturn(v bool) *NiftyUpdateVpnGatewayNetworkInterfacesOutput {
	s.Return = &v
	return s
}

type Option struct {
	_ struct{} `type:"structure"`

	MobileFilter *MobileFilter `locationName:"MobileFilter" type:"structure"`

	NameServer *string `locationName:"nameServer" type:"string"`

	SessionStickinessPolicy *SessionStickinessPolicy `locationName:"SessionStickinessPolicy" type:"structure"`

	SorryPage *SorryPage `locationName:"SorryPage" type:"structure"`
}

// String returns the string representation
func (s Option) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s Option) GoString() string {
	return s.String()
}

// SetMobileFilter sets the MobileFilter field's value.
func (s *Option) SetMobileFilter(v *MobileFilter) *Option {
	s.MobileFilter = v
	return s
}

// SetNameServer sets the NameServer field's value.
func (s *Option) SetNameServer(v string) *Option {
	s.NameServer = &v
	return s
}

// SetSessionStickinessPolicy sets the SessionStickinessPolicy field's value.
func (s *Option) SetSessionStickinessPolicy(v *SessionStickinessPolicy) *Option {
	s.SessionStickinessPolicy = v
	return s
}

// SetSorryPage sets the SorryPage field's value.
func (s *Option) SetSorryPage(v *SorryPage) *Option {
	s.SorryPage = v
	return s
}

type OptionCommonInfoSetItem struct {
	_ struct{} `type:"structure"`

	OptionName *string `locationName:"optionName" type:"string"`

	OptionSet []*OptionSetItem `locationName:"optionSet" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s OptionCommonInfoSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s OptionCommonInfoSetItem) GoString() string {
	return s.String()
}

// SetOptionName sets the OptionName field's value.
func (s *OptionCommonInfoSetItem) SetOptionName(v string) *OptionCommonInfoSetItem {
	s.OptionName = &v
	return s
}

// SetOptionSet sets the OptionSet field's value.
func (s *OptionCommonInfoSetItem) SetOptionSet(v []*OptionSetItem) *OptionCommonInfoSetItem {
	s.OptionSet = v
	return s
}

type OptionInfoSetItem struct {
	_ struct{} `type:"structure"`

	OptionName *string `locationName:"optionName" type:"string"`

	OptionSet []*OptionSetItem `locationName:"optionSet" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s OptionInfoSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s OptionInfoSetItem) GoString() string {
	return s.String()
}

// SetOptionName sets the OptionName field's value.
func (s *OptionInfoSetItem) SetOptionName(v string) *OptionInfoSetItem {
	s.OptionName = &v
	return s
}

// SetOptionSet sets the OptionSet field's value.
func (s *OptionInfoSetItem) SetOptionSet(v []*OptionSetItem) *OptionInfoSetItem {
	s.OptionSet = v
	return s
}

type OptionSetItem struct {
	_ struct{} `type:"structure"`

	Charge *int64 `locationName:"charge" type:"integer"`

	Type *string `locationName:"type" type:"string"`

	Unit *string `locationName:"unit" type:"string"`

	Value *int64 `locationName:"value" type:"integer"`
}

// String returns the string representation
func (s OptionSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s OptionSetItem) GoString() string {
	return s.String()
}

// SetCharge sets the Charge field's value.
func (s *OptionSetItem) SetCharge(v int64) *OptionSetItem {
	s.Charge = &v
	return s
}

// SetType sets the Type field's value.
func (s *OptionSetItem) SetType(v string) *OptionSetItem {
	s.Type = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *OptionSetItem) SetUnit(v string) *OptionSetItem {
	s.Unit = &v
	return s
}

// SetValue sets the Value field's value.
func (s *OptionSetItem) SetValue(v int64) *OptionSetItem {
	s.Value = &v
	return s
}

type Options struct {
	_ struct{} `type:"structure"`

	StaticRoutesOnly *bool `locationName:"staticRoutesOnly" type:"boolean"`
}

// String returns the string representation
func (s Options) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s Options) GoString() string {
	return s.String()
}

// SetStaticRoutesOnly sets the StaticRoutesOnly field's value.
func (s *Options) SetStaticRoutesOnly(v bool) *Options {
	s.StaticRoutesOnly = &v
	return s
}

type OsMeasuredRateSetItem struct {
	_ struct{} `type:"structure"`

	Charge *int64 `locationName:"charge" type:"integer"`

	Type *string `locationName:"type" type:"string"`

	Unit *string `locationName:"unit" type:"string"`

	Value *int64 `locationName:"value" type:"integer"`
}

// String returns the string representation
func (s OsMeasuredRateSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s OsMeasuredRateSetItem) GoString() string {
	return s.String()
}

// SetCharge sets the Charge field's value.
func (s *OsMeasuredRateSetItem) SetCharge(v int64) *OsMeasuredRateSetItem {
	s.Charge = &v
	return s
}

// SetType sets the Type field's value.
func (s *OsMeasuredRateSetItem) SetType(v string) *OsMeasuredRateSetItem {
	s.Type = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *OsMeasuredRateSetItem) SetUnit(v string) *OsMeasuredRateSetItem {
	s.Unit = &v
	return s
}

// SetValue sets the Value field's value.
func (s *OsMeasuredRateSetItem) SetValue(v int64) *OsMeasuredRateSetItem {
	s.Value = &v
	return s
}

type OsMonthlyRateSetItem struct {
	_ struct{} `type:"structure"`

	Charge *int64 `locationName:"charge" type:"integer"`

	Type *string `locationName:"type" type:"string"`

	Unit *string `locationName:"unit" type:"string"`

	Value *int64 `locationName:"value" type:"integer"`
}

// String returns the string representation
func (s OsMonthlyRateSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s OsMonthlyRateSetItem) GoString() string {
	return s.String()
}

// SetCharge sets the Charge field's value.
func (s *OsMonthlyRateSetItem) SetCharge(v int64) *OsMonthlyRateSetItem {
	s.Charge = &v
	return s
}

// SetType sets the Type field's value.
func (s *OsMonthlyRateSetItem) SetType(v string) *OsMonthlyRateSetItem {
	s.Type = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *OsMonthlyRateSetItem) SetUnit(v string) *OsMonthlyRateSetItem {
	s.Unit = &v
	return s
}

// SetValue sets the Value field's value.
func (s *OsMonthlyRateSetItem) SetValue(v int64) *OsMonthlyRateSetItem {
	s.Value = &v
	return s
}

type OsOptionChargeInfo struct {
	_ struct{} `type:"structure"`

	OsOptionChargeMonthlyRateSet []*OsOptionChargeMonthlyRateSetItem `locationName:"osOptionChargeMonthlyRateSet" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s OsOptionChargeInfo) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s OsOptionChargeInfo) GoString() string {
	return s.String()
}

// SetOsOptionChargeMonthlyRateSet sets the OsOptionChargeMonthlyRateSet field's value.
func (s *OsOptionChargeInfo) SetOsOptionChargeMonthlyRateSet(v []*OsOptionChargeMonthlyRateSetItem) *OsOptionChargeInfo {
	s.OsOptionChargeMonthlyRateSet = v
	return s
}

type OsOptionChargeMonthlyRateSetItem struct {
	_ struct{} `type:"structure"`

	Charge *int64 `locationName:"charge" type:"integer"`

	Type *string `locationName:"type" type:"string"`

	Unit *string `locationName:"unit" type:"string"`

	Value *int64 `locationName:"value" type:"integer"`
}

// String returns the string representation
func (s OsOptionChargeMonthlyRateSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s OsOptionChargeMonthlyRateSetItem) GoString() string {
	return s.String()
}

// SetCharge sets the Charge field's value.
func (s *OsOptionChargeMonthlyRateSetItem) SetCharge(v int64) *OsOptionChargeMonthlyRateSetItem {
	s.Charge = &v
	return s
}

// SetType sets the Type field's value.
func (s *OsOptionChargeMonthlyRateSetItem) SetType(v string) *OsOptionChargeMonthlyRateSetItem {
	s.Type = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *OsOptionChargeMonthlyRateSetItem) SetUnit(v string) *OsOptionChargeMonthlyRateSetItem {
	s.Unit = &v
	return s
}

// SetValue sets the Value field's value.
func (s *OsOptionChargeMonthlyRateSetItem) SetValue(v int64) *OsOptionChargeMonthlyRateSetItem {
	s.Value = &v
	return s
}

type OutboundInterface struct {
	_ struct{} `type:"structure"`

	NetworkId *string `locationName:"networkId" type:"string"`

	NetworkName *string `locationName:"networkName" type:"string"`
}

// String returns the string representation
func (s OutboundInterface) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s OutboundInterface) GoString() string {
	return s.String()
}

// SetNetworkId sets the NetworkId field's value.
func (s *OutboundInterface) SetNetworkId(v string) *OutboundInterface {
	s.NetworkId = &v
	return s
}

// SetNetworkName sets the NetworkName field's value.
func (s *OutboundInterface) SetNetworkName(v string) *OutboundInterface {
	s.NetworkName = &v
	return s
}

type PartitionsSetItem struct {
	_ struct{} `type:"structure"`

	Partition *string `locationName:"partition" type:"string"`
}

// String returns the string representation
func (s PartitionsSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s PartitionsSetItem) GoString() string {
	return s.String()
}

// SetPartition sets the Partition field's value.
func (s *PartitionsSetItem) SetPartition(v string) *PartitionsSetItem {
	s.Partition = &v
	return s
}

type PatternAuthInfo struct {
	_ struct{} `type:"structure"`

	PatternAuthSet []*PatternAuthSetItem `locationName:"patternAuthSet" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s PatternAuthInfo) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s PatternAuthInfo) GoString() string {
	return s.String()
}

// SetPatternAuthSet sets the PatternAuthSet field's value.
func (s *PatternAuthInfo) SetPatternAuthSet(v []*PatternAuthSetItem) *PatternAuthInfo {
	s.PatternAuthSet = v
	return s
}

type PatternAuthSetItem struct {
	_ struct{} `type:"structure"`

	Charge *int64 `locationName:"charge" type:"integer"`

	Type *string `locationName:"type" type:"string"`

	Unit *string `locationName:"unit" type:"string"`

	Value *int64 `locationName:"value" type:"integer"`
}

// String returns the string representation
func (s PatternAuthSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s PatternAuthSetItem) GoString() string {
	return s.String()
}

// SetCharge sets the Charge field's value.
func (s *PatternAuthSetItem) SetCharge(v int64) *PatternAuthSetItem {
	s.Charge = &v
	return s
}

// SetType sets the Type field's value.
func (s *PatternAuthSetItem) SetType(v string) *PatternAuthSetItem {
	s.Type = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *PatternAuthSetItem) SetUnit(v string) *PatternAuthSetItem {
	s.Unit = &v
	return s
}

// SetValue sets the Value field's value.
func (s *PatternAuthSetItem) SetValue(v int64) *PatternAuthSetItem {
	s.Value = &v
	return s
}

type PerformanceChartSetItem struct {
	_ struct{} `type:"structure"`

	DataSet []*DataSetItem `locationName:"dataSet" locationNameList:"item" type:"list"`

	DataType *string `locationName:"dataType" type:"string"`

	ResourceName *string `locationName:"resourceName" type:"string"`
}

// String returns the string representation
func (s PerformanceChartSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s PerformanceChartSetItem) GoString() string {
	return s.String()
}

// SetDataSet sets the DataSet field's value.
func (s *PerformanceChartSetItem) SetDataSet(v []*DataSetItem) *PerformanceChartSetItem {
	s.DataSet = v
	return s
}

// SetDataType sets the DataType field's value.
func (s *PerformanceChartSetItem) SetDataType(v string) *PerformanceChartSetItem {
	s.DataType = &v
	return s
}

// SetResourceName sets the ResourceName field's value.
func (s *PerformanceChartSetItem) SetResourceName(v string) *PerformanceChartSetItem {
	s.ResourceName = &v
	return s
}

type Period struct {
	_ struct{} `type:"structure"`

	EndDate *time.Time `locationName:"endDate" type:"timestamp" timestampFormat:""`

	StartDate *time.Time `locationName:"startDate" type:"timestamp" timestampFormat:""`

	ValidityTerm *int64 `locationName:"validityTerm" type:"integer"`
}

// String returns the string representation
func (s Period) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s Period) GoString() string {
	return s.String()
}

// SetEndDate sets the EndDate field's value.
func (s *Period) SetEndDate(v time.Time) *Period {
	s.EndDate = &v
	return s
}

// SetStartDate sets the StartDate field's value.
func (s *Period) SetStartDate(v time.Time) *Period {
	s.StartDate = &v
	return s
}

// SetValidityTerm sets the ValidityTerm field's value.
func (s *Period) SetValidityTerm(v int64) *Period {
	s.ValidityTerm = &v
	return s
}

type Placement struct {
	_ struct{} `type:"structure"`

	AvailabilityZone *string `locationName:"availabilityZone" type:"string"`

	RegionName *string `locationName:"regionName" type:"string"`
}

// String returns the string representation
func (s Placement) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s Placement) GoString() string {
	return s.String()
}

// SetAvailabilityZone sets the AvailabilityZone field's value.
func (s *Placement) SetAvailabilityZone(v string) *Placement {
	s.AvailabilityZone = &v
	return s
}

// SetRegionName sets the RegionName field's value.
func (s *Placement) SetRegionName(v string) *Placement {
	s.RegionName = &v
	return s
}

type Policies struct {
	_ struct{} `type:"structure"`

	AppCookieStickinessPolicies []*AppCookieStickinessPoliciesMemberItem `locationName:"AppCookieStickinessPolicies" locationNameList:"member" type:"list"`

	LBCookieStickinessPolicies []*LBCookieStickinessPoliciesMemberItem `locationName:"LBCookieStickinessPolicies" locationNameList:"member" type:"list"`
}

// String returns the string representation
func (s Policies) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s Policies) GoString() string {
	return s.String()
}

// SetAppCookieStickinessPolicies sets the AppCookieStickinessPolicies field's value.
func (s *Policies) SetAppCookieStickinessPolicies(v []*AppCookieStickinessPoliciesMemberItem) *Policies {
	s.AppCookieStickinessPolicies = v
	return s
}

// SetLBCookieStickinessPolicies sets the LBCookieStickinessPolicies field's value.
func (s *Policies) SetLBCookieStickinessPolicies(v []*LBCookieStickinessPoliciesMemberItem) *Policies {
	s.LBCookieStickinessPolicies = v
	return s
}

type PremiumSupportInfo struct {
	_ struct{} `type:"structure"`

	PremiumSupportSet []*PremiumSupportSetItem `locationName:"premiumSupportSet" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s PremiumSupportInfo) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s PremiumSupportInfo) GoString() string {
	return s.String()
}

// SetPremiumSupportSet sets the PremiumSupportSet field's value.
func (s *PremiumSupportInfo) SetPremiumSupportSet(v []*PremiumSupportSetItem) *PremiumSupportInfo {
	s.PremiumSupportSet = v
	return s
}

type PremiumSupportSetItem struct {
	_ struct{} `type:"structure"`

	Charge *int64 `locationName:"charge" type:"integer"`

	SupportName *string `locationName:"supportName" type:"string"`

	Type *string `locationName:"type" type:"string"`

	Unit *string `locationName:"unit" type:"string"`

	Value *int64 `locationName:"value" type:"integer"`
}

// String returns the string representation
func (s PremiumSupportSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s PremiumSupportSetItem) GoString() string {
	return s.String()
}

// SetCharge sets the Charge field's value.
func (s *PremiumSupportSetItem) SetCharge(v int64) *PremiumSupportSetItem {
	s.Charge = &v
	return s
}

// SetSupportName sets the SupportName field's value.
func (s *PremiumSupportSetItem) SetSupportName(v string) *PremiumSupportSetItem {
	s.SupportName = &v
	return s
}

// SetType sets the Type field's value.
func (s *PremiumSupportSetItem) SetType(v string) *PremiumSupportSetItem {
	s.Type = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *PremiumSupportSetItem) SetUnit(v string) *PremiumSupportSetItem {
	s.Unit = &v
	return s
}

// SetValue sets the Value field's value.
func (s *PremiumSupportSetItem) SetValue(v int64) *PremiumSupportSetItem {
	s.Value = &v
	return s
}

type PreviousState struct {
	_ struct{} `type:"structure"`

	Code *int64 `locationName:"code" type:"integer"`

	Name *string `locationName:"name" type:"string"`
}

// String returns the string representation
func (s PreviousState) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s PreviousState) GoString() string {
	return s.String()
}

// SetCode sets the Code field's value.
func (s *PreviousState) SetCode(v int64) *PreviousState {
	s.Code = &v
	return s
}

// SetName sets the Name field's value.
func (s *PreviousState) SetName(v string) *PreviousState {
	s.Name = &v
	return s
}

type PrivateIpAddressesSetItem struct {
	_ struct{} `type:"structure"`

	Association *Association `locationName:"association" type:"structure"`

	Primary *bool `locationName:"primary" type:"boolean"`

	PrivateDnsName *string `locationName:"privateDnsName" type:"string"`

	PrivateIpAddress *string `locationName:"privateIpAddress" type:"string"`
}

// String returns the string representation
func (s PrivateIpAddressesSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s PrivateIpAddressesSetItem) GoString() string {
	return s.String()
}

// SetAssociation sets the Association field's value.
func (s *PrivateIpAddressesSetItem) SetAssociation(v *Association) *PrivateIpAddressesSetItem {
	s.Association = v
	return s
}

// SetPrimary sets the Primary field's value.
func (s *PrivateIpAddressesSetItem) SetPrimary(v bool) *PrivateIpAddressesSetItem {
	s.Primary = &v
	return s
}

// SetPrivateDnsName sets the PrivateDnsName field's value.
func (s *PrivateIpAddressesSetItem) SetPrivateDnsName(v string) *PrivateIpAddressesSetItem {
	s.PrivateDnsName = &v
	return s
}

// SetPrivateIpAddress sets the PrivateIpAddress field's value.
func (s *PrivateIpAddressesSetItem) SetPrivateIpAddress(v string) *PrivateIpAddressesSetItem {
	s.PrivateIpAddress = &v
	return s
}

type PrivateLan struct {
	_ struct{} `type:"structure"`

	AccountingType *string `locationName:"accountingType" type:"string"`

	AvailabilityZone *string `locationName:"availabilityZone" type:"string"`

	Charge *int64 `locationName:"charge" type:"integer"`

	CidrBlock *string `locationName:"cidrBlock" type:"string"`

	CreatedTime *time.Time `locationName:"createdTime" type:"timestamp" timestampFormat:""`

	Description *string `locationName:"description" type:"string"`

	InstancesSet []*InstancesSetItem `locationName:"instancesSet" locationNameList:"item" type:"list"`

	PrivateLanId *string `locationName:"privateLanId" type:"string"`

	PrivateLanName *string `locationName:"privateLanName" type:"string"`

	RouterSet []*RouterSetItem `locationName:"routerSet" locationNameList:"item" type:"list"`

	State *string `locationName:"state" type:"string"`

	TagSet []*TagSetItem `locationName:"tagSet" locationNameList:"item" type:"list"`

	Type *string `locationName:"type" type:"string"`

	Unit *string `locationName:"unit" type:"string"`

	Value *int64 `locationName:"value" type:"integer"`

	VpnGatewaySet []*VpnGatewaySetItem `locationName:"vpnGatewaySet" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s PrivateLan) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s PrivateLan) GoString() string {
	return s.String()
}

// SetAccountingType sets the AccountingType field's value.
func (s *PrivateLan) SetAccountingType(v string) *PrivateLan {
	s.AccountingType = &v
	return s
}

// SetAvailabilityZone sets the AvailabilityZone field's value.
func (s *PrivateLan) SetAvailabilityZone(v string) *PrivateLan {
	s.AvailabilityZone = &v
	return s
}

// SetCharge sets the Charge field's value.
func (s *PrivateLan) SetCharge(v int64) *PrivateLan {
	s.Charge = &v
	return s
}

// SetCidrBlock sets the CidrBlock field's value.
func (s *PrivateLan) SetCidrBlock(v string) *PrivateLan {
	s.CidrBlock = &v
	return s
}

// SetCreatedTime sets the CreatedTime field's value.
func (s *PrivateLan) SetCreatedTime(v time.Time) *PrivateLan {
	s.CreatedTime = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *PrivateLan) SetDescription(v string) *PrivateLan {
	s.Description = &v
	return s
}

// SetInstancesSet sets the InstancesSet field's value.
func (s *PrivateLan) SetInstancesSet(v []*InstancesSetItem) *PrivateLan {
	s.InstancesSet = v
	return s
}

// SetPrivateLanId sets the PrivateLanId field's value.
func (s *PrivateLan) SetPrivateLanId(v string) *PrivateLan {
	s.PrivateLanId = &v
	return s
}

// SetPrivateLanName sets the PrivateLanName field's value.
func (s *PrivateLan) SetPrivateLanName(v string) *PrivateLan {
	s.PrivateLanName = &v
	return s
}

// SetRouterSet sets the RouterSet field's value.
func (s *PrivateLan) SetRouterSet(v []*RouterSetItem) *PrivateLan {
	s.RouterSet = v
	return s
}

// SetState sets the State field's value.
func (s *PrivateLan) SetState(v string) *PrivateLan {
	s.State = &v
	return s
}

// SetTagSet sets the TagSet field's value.
func (s *PrivateLan) SetTagSet(v []*TagSetItem) *PrivateLan {
	s.TagSet = v
	return s
}

// SetType sets the Type field's value.
func (s *PrivateLan) SetType(v string) *PrivateLan {
	s.Type = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *PrivateLan) SetUnit(v string) *PrivateLan {
	s.Unit = &v
	return s
}

// SetValue sets the Value field's value.
func (s *PrivateLan) SetValue(v int64) *PrivateLan {
	s.Value = &v
	return s
}

// SetVpnGatewaySet sets the VpnGatewaySet field's value.
func (s *PrivateLan) SetVpnGatewaySet(v []*VpnGatewaySetItem) *PrivateLan {
	s.VpnGatewaySet = v
	return s
}

type PrivateLanInfo struct {
	_ struct{} `type:"structure"`

	PrivateLan *PrivateLan `locationName:"privateLan" type:"structure"`
}

// String returns the string representation
func (s PrivateLanInfo) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s PrivateLanInfo) GoString() string {
	return s.String()
}

// SetPrivateLan sets the PrivateLan field's value.
func (s *PrivateLanInfo) SetPrivateLan(v *PrivateLan) *PrivateLanInfo {
	s.PrivateLan = v
	return s
}

type PrivateLanSetItem struct {
	_ struct{} `type:"structure"`

	AccountingType *string `locationName:"accountingType" type:"string"`

	AvailabilityZone *string `locationName:"availabilityZone" type:"string"`

	CidrBlock *string `locationName:"cidrBlock" type:"string"`

	CreatedTime *time.Time `locationName:"createdTime" type:"timestamp" timestampFormat:""`

	Description *string `locationName:"description" type:"string"`

	ElasticLoadBalancingSet []*ElasticLoadBalancingSetItem `locationName:"elasticLoadBalancingSet" locationNameList:"item" type:"list"`

	InstancesSet []*InstancesSetItem `locationName:"instancesSet" locationNameList:"item" type:"list"`

	NetworkId *string `locationName:"networkId" type:"string"`

	PrivateLanName *string `locationName:"privateLanName" type:"string"`

	RouterSet []*RouterSetItem `locationName:"routerSet" locationNameList:"item" type:"list"`

	SharingStatus *string `locationName:"sharingStatus" type:"string"`

	State *string `locationName:"state" type:"string"`

	TagSet []*TagSetItem `locationName:"tagSet" locationNameList:"item" type:"list"`

	VpnGatewaySet []*VpnGatewaySetItem `locationName:"vpnGatewaySet" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s PrivateLanSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s PrivateLanSetItem) GoString() string {
	return s.String()
}

// SetAccountingType sets the AccountingType field's value.
func (s *PrivateLanSetItem) SetAccountingType(v string) *PrivateLanSetItem {
	s.AccountingType = &v
	return s
}

// SetAvailabilityZone sets the AvailabilityZone field's value.
func (s *PrivateLanSetItem) SetAvailabilityZone(v string) *PrivateLanSetItem {
	s.AvailabilityZone = &v
	return s
}

// SetCidrBlock sets the CidrBlock field's value.
func (s *PrivateLanSetItem) SetCidrBlock(v string) *PrivateLanSetItem {
	s.CidrBlock = &v
	return s
}

// SetCreatedTime sets the CreatedTime field's value.
func (s *PrivateLanSetItem) SetCreatedTime(v time.Time) *PrivateLanSetItem {
	s.CreatedTime = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *PrivateLanSetItem) SetDescription(v string) *PrivateLanSetItem {
	s.Description = &v
	return s
}

// SetElasticLoadBalancingSet sets the ElasticLoadBalancingSet field's value.
func (s *PrivateLanSetItem) SetElasticLoadBalancingSet(v []*ElasticLoadBalancingSetItem) *PrivateLanSetItem {
	s.ElasticLoadBalancingSet = v
	return s
}

// SetInstancesSet sets the InstancesSet field's value.
func (s *PrivateLanSetItem) SetInstancesSet(v []*InstancesSetItem) *PrivateLanSetItem {
	s.InstancesSet = v
	return s
}

// SetNetworkId sets the NetworkId field's value.
func (s *PrivateLanSetItem) SetNetworkId(v string) *PrivateLanSetItem {
	s.NetworkId = &v
	return s
}

// SetPrivateLanName sets the PrivateLanName field's value.
func (s *PrivateLanSetItem) SetPrivateLanName(v string) *PrivateLanSetItem {
	s.PrivateLanName = &v
	return s
}

// SetRouterSet sets the RouterSet field's value.
func (s *PrivateLanSetItem) SetRouterSet(v []*RouterSetItem) *PrivateLanSetItem {
	s.RouterSet = v
	return s
}

// SetSharingStatus sets the SharingStatus field's value.
func (s *PrivateLanSetItem) SetSharingStatus(v string) *PrivateLanSetItem {
	s.SharingStatus = &v
	return s
}

// SetState sets the State field's value.
func (s *PrivateLanSetItem) SetState(v string) *PrivateLanSetItem {
	s.State = &v
	return s
}

// SetTagSet sets the TagSet field's value.
func (s *PrivateLanSetItem) SetTagSet(v []*TagSetItem) *PrivateLanSetItem {
	s.TagSet = v
	return s
}

// SetVpnGatewaySet sets the VpnGatewaySet field's value.
func (s *PrivateLanSetItem) SetVpnGatewaySet(v []*VpnGatewaySetItem) *PrivateLanSetItem {
	s.VpnGatewaySet = v
	return s
}

type PrivateNetworkInfo struct {
	_ struct{} `type:"structure"`

	PrivateNetworkMeasuredRate *PrivateNetworkMeasuredRate `locationName:"privateNetworkMeasuredRate" type:"structure"`

	PrivateNetworkMonthlyRate *PrivateNetworkMonthlyRate `locationName:"privateNetworkMonthlyRate" type:"structure"`
}

// String returns the string representation
func (s PrivateNetworkInfo) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s PrivateNetworkInfo) GoString() string {
	return s.String()
}

// SetPrivateNetworkMeasuredRate sets the PrivateNetworkMeasuredRate field's value.
func (s *PrivateNetworkInfo) SetPrivateNetworkMeasuredRate(v *PrivateNetworkMeasuredRate) *PrivateNetworkInfo {
	s.PrivateNetworkMeasuredRate = v
	return s
}

// SetPrivateNetworkMonthlyRate sets the PrivateNetworkMonthlyRate field's value.
func (s *PrivateNetworkInfo) SetPrivateNetworkMonthlyRate(v *PrivateNetworkMonthlyRate) *PrivateNetworkInfo {
	s.PrivateNetworkMonthlyRate = v
	return s
}

type PrivateNetworkMeasuredRate struct {
	_ struct{} `type:"structure"`

	Charge *int64 `locationName:"charge" type:"integer"`

	Type *string `locationName:"type" type:"string"`

	Unit *string `locationName:"unit" type:"string"`

	Value *int64 `locationName:"value" type:"integer"`
}

// String returns the string representation
func (s PrivateNetworkMeasuredRate) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s PrivateNetworkMeasuredRate) GoString() string {
	return s.String()
}

// SetCharge sets the Charge field's value.
func (s *PrivateNetworkMeasuredRate) SetCharge(v int64) *PrivateNetworkMeasuredRate {
	s.Charge = &v
	return s
}

// SetType sets the Type field's value.
func (s *PrivateNetworkMeasuredRate) SetType(v string) *PrivateNetworkMeasuredRate {
	s.Type = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *PrivateNetworkMeasuredRate) SetUnit(v string) *PrivateNetworkMeasuredRate {
	s.Unit = &v
	return s
}

// SetValue sets the Value field's value.
func (s *PrivateNetworkMeasuredRate) SetValue(v int64) *PrivateNetworkMeasuredRate {
	s.Value = &v
	return s
}

type PrivateNetworkMonthlyRate struct {
	_ struct{} `type:"structure"`

	Charge *int64 `locationName:"charge" type:"integer"`

	Type *string `locationName:"type" type:"string"`

	Unit *string `locationName:"unit" type:"string"`

	Value *int64 `locationName:"value" type:"integer"`
}

// String returns the string representation
func (s PrivateNetworkMonthlyRate) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s PrivateNetworkMonthlyRate) GoString() string {
	return s.String()
}

// SetCharge sets the Charge field's value.
func (s *PrivateNetworkMonthlyRate) SetCharge(v int64) *PrivateNetworkMonthlyRate {
	s.Charge = &v
	return s
}

// SetType sets the Type field's value.
func (s *PrivateNetworkMonthlyRate) SetType(v string) *PrivateNetworkMonthlyRate {
	s.Type = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *PrivateNetworkMonthlyRate) SetUnit(v string) *PrivateNetworkMonthlyRate {
	s.Unit = &v
	return s
}

// SetValue sets the Value field's value.
func (s *PrivateNetworkMonthlyRate) SetValue(v int64) *PrivateNetworkMonthlyRate {
	s.Value = &v
	return s
}

type ProductCodesSetItem struct {
	_ struct{} `type:"structure"`

	ProductCode *string `locationName:"productCode" type:"string"`
}

// String returns the string representation
func (s ProductCodesSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ProductCodesSetItem) GoString() string {
	return s.String()
}

// SetProductCode sets the ProductCode field's value.
func (s *ProductCodesSetItem) SetProductCode(v string) *ProductCodesSetItem {
	s.ProductCode = &v
	return s
}

type PropagatingVgwSetItem struct {
	_ struct{} `type:"structure"`

	GatewayId *string `locationName:"gatewayId" type:"string"`

	NiftyGatewayName *string `locationName:"niftyGatewayName" type:"string"`

	RouteTableAssociationId *string `locationName:"routeTableAssociationId" type:"string"`
}

// String returns the string representation
func (s PropagatingVgwSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s PropagatingVgwSetItem) GoString() string {
	return s.String()
}

// SetGatewayId sets the GatewayId field's value.
func (s *PropagatingVgwSetItem) SetGatewayId(v string) *PropagatingVgwSetItem {
	s.GatewayId = &v
	return s
}

// SetNiftyGatewayName sets the NiftyGatewayName field's value.
func (s *PropagatingVgwSetItem) SetNiftyGatewayName(v string) *PropagatingVgwSetItem {
	s.NiftyGatewayName = &v
	return s
}

// SetRouteTableAssociationId sets the RouteTableAssociationId field's value.
func (s *PropagatingVgwSetItem) SetRouteTableAssociationId(v string) *PropagatingVgwSetItem {
	s.RouteTableAssociationId = &v
	return s
}

type Ramdisk struct {
	_ struct{} `type:"structure"`

	Value *string `locationName:"value" type:"string"`
}

// String returns the string representation
func (s Ramdisk) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s Ramdisk) GoString() string {
	return s.String()
}

// SetValue sets the Value field's value.
func (s *Ramdisk) SetValue(v string) *Ramdisk {
	s.Value = &v
	return s
}

type RebootInstancesInput struct {
	_ struct{} `type:"structure"`

	Force *bool `locationName:"Force" type:"boolean"`

	InstanceId []*string `locationName:"InstanceId" type:"list"`

	NiftyIsBios *bool `locationName:"NiftyIsBios" type:"boolean"`

	Tenancy []*string `locationName:"Tenancy" type:"list"`

	UserData *string `locationName:"UserData" type:"string"`
}

// String returns the string representation
func (s RebootInstancesInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RebootInstancesInput) GoString() string {
	return s.String()
}

// SetForce sets the Force field's value.
func (s *RebootInstancesInput) SetForce(v bool) *RebootInstancesInput {
	s.Force = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *RebootInstancesInput) SetInstanceId(v []*string) *RebootInstancesInput {
	s.InstanceId = v
	return s
}

// SetNiftyIsBios sets the NiftyIsBios field's value.
func (s *RebootInstancesInput) SetNiftyIsBios(v bool) *RebootInstancesInput {
	s.NiftyIsBios = &v
	return s
}

// SetTenancy sets the Tenancy field's value.
func (s *RebootInstancesInput) SetTenancy(v []*string) *RebootInstancesInput {
	s.Tenancy = v
	return s
}

// SetUserData sets the UserData field's value.
func (s *RebootInstancesInput) SetUserData(v string) *RebootInstancesInput {
	s.UserData = &v
	return s
}

type RebootInstancesOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s RebootInstancesOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RebootInstancesOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *RebootInstancesOutput) SetRequestId(v string) *RebootInstancesOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *RebootInstancesOutput) SetReturn(v bool) *RebootInstancesOutput {
	s.Return = &v
	return s
}

type RegionInfoSetItem struct {
	_ struct{} `type:"structure"`

	IsDefault *bool `locationName:"isDefault" type:"boolean"`

	MessageSet []*MessageSetItem `locationName:"messageSet" locationNameList:"item" type:"list"`

	RegionEndpoint *string `locationName:"regionEndpoint" type:"string"`

	RegionName *string `locationName:"regionName" type:"string"`
}

// String returns the string representation
func (s RegionInfoSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RegionInfoSetItem) GoString() string {
	return s.String()
}

// SetIsDefault sets the IsDefault field's value.
func (s *RegionInfoSetItem) SetIsDefault(v bool) *RegionInfoSetItem {
	s.IsDefault = &v
	return s
}

// SetMessageSet sets the MessageSet field's value.
func (s *RegionInfoSetItem) SetMessageSet(v []*MessageSetItem) *RegionInfoSetItem {
	s.MessageSet = v
	return s
}

// SetRegionEndpoint sets the RegionEndpoint field's value.
func (s *RegionInfoSetItem) SetRegionEndpoint(v string) *RegionInfoSetItem {
	s.RegionEndpoint = &v
	return s
}

// SetRegionName sets the RegionName field's value.
func (s *RegionInfoSetItem) SetRegionName(v string) *RegionInfoSetItem {
	s.RegionName = &v
	return s
}

type RegisterCorporateInfoForCertificateInput struct {
	_ struct{} `type:"structure"`

	Agreement *bool `locationName:"Agreement" type:"boolean"`

	AlphabetName1 *string `locationName:"AlphabetName1" type:"string"`

	AlphabetName2 *string `locationName:"AlphabetName2" type:"string"`

	City *string `locationName:"City" type:"string"`

	CorpGrade *string `locationName:"CorpGrade" type:"string"`

	CorpName *string `locationName:"CorpName" type:"string"`

	DivisionName *string `locationName:"DivisionName" type:"string"`

	EmailAddress *string `locationName:"EmailAddress" type:"string"`

	KanaName1 *string `locationName:"KanaName1" type:"string"`

	KanaName2 *string `locationName:"KanaName2" type:"string"`

	Name1 *string `locationName:"Name1" type:"string"`

	Name2 *string `locationName:"Name2" type:"string"`

	PhoneNumber *string `locationName:"PhoneNumber" type:"string"`

	PostName *string `locationName:"PostName" type:"string"`

	Pref *string `locationName:"Pref" type:"string"`

	PresidentName1 *string `locationName:"PresidentName1" type:"string"`

	PresidentName2 *string `locationName:"PresidentName2" type:"string"`

	TdbCode *string `locationName:"TdbCode" type:"string"`

	Zip1 *string `locationName:"Zip1" type:"string"`

	Zip2 *string `locationName:"Zip2" type:"string"`
}

// String returns the string representation
func (s RegisterCorporateInfoForCertificateInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RegisterCorporateInfoForCertificateInput) GoString() string {
	return s.String()
}

// SetAgreement sets the Agreement field's value.
func (s *RegisterCorporateInfoForCertificateInput) SetAgreement(v bool) *RegisterCorporateInfoForCertificateInput {
	s.Agreement = &v
	return s
}

// SetAlphabetName1 sets the AlphabetName1 field's value.
func (s *RegisterCorporateInfoForCertificateInput) SetAlphabetName1(v string) *RegisterCorporateInfoForCertificateInput {
	s.AlphabetName1 = &v
	return s
}

// SetAlphabetName2 sets the AlphabetName2 field's value.
func (s *RegisterCorporateInfoForCertificateInput) SetAlphabetName2(v string) *RegisterCorporateInfoForCertificateInput {
	s.AlphabetName2 = &v
	return s
}

// SetCity sets the City field's value.
func (s *RegisterCorporateInfoForCertificateInput) SetCity(v string) *RegisterCorporateInfoForCertificateInput {
	s.City = &v
	return s
}

// SetCorpGrade sets the CorpGrade field's value.
func (s *RegisterCorporateInfoForCertificateInput) SetCorpGrade(v string) *RegisterCorporateInfoForCertificateInput {
	s.CorpGrade = &v
	return s
}

// SetCorpName sets the CorpName field's value.
func (s *RegisterCorporateInfoForCertificateInput) SetCorpName(v string) *RegisterCorporateInfoForCertificateInput {
	s.CorpName = &v
	return s
}

// SetDivisionName sets the DivisionName field's value.
func (s *RegisterCorporateInfoForCertificateInput) SetDivisionName(v string) *RegisterCorporateInfoForCertificateInput {
	s.DivisionName = &v
	return s
}

// SetEmailAddress sets the EmailAddress field's value.
func (s *RegisterCorporateInfoForCertificateInput) SetEmailAddress(v string) *RegisterCorporateInfoForCertificateInput {
	s.EmailAddress = &v
	return s
}

// SetKanaName1 sets the KanaName1 field's value.
func (s *RegisterCorporateInfoForCertificateInput) SetKanaName1(v string) *RegisterCorporateInfoForCertificateInput {
	s.KanaName1 = &v
	return s
}

// SetKanaName2 sets the KanaName2 field's value.
func (s *RegisterCorporateInfoForCertificateInput) SetKanaName2(v string) *RegisterCorporateInfoForCertificateInput {
	s.KanaName2 = &v
	return s
}

// SetName1 sets the Name1 field's value.
func (s *RegisterCorporateInfoForCertificateInput) SetName1(v string) *RegisterCorporateInfoForCertificateInput {
	s.Name1 = &v
	return s
}

// SetName2 sets the Name2 field's value.
func (s *RegisterCorporateInfoForCertificateInput) SetName2(v string) *RegisterCorporateInfoForCertificateInput {
	s.Name2 = &v
	return s
}

// SetPhoneNumber sets the PhoneNumber field's value.
func (s *RegisterCorporateInfoForCertificateInput) SetPhoneNumber(v string) *RegisterCorporateInfoForCertificateInput {
	s.PhoneNumber = &v
	return s
}

// SetPostName sets the PostName field's value.
func (s *RegisterCorporateInfoForCertificateInput) SetPostName(v string) *RegisterCorporateInfoForCertificateInput {
	s.PostName = &v
	return s
}

// SetPref sets the Pref field's value.
func (s *RegisterCorporateInfoForCertificateInput) SetPref(v string) *RegisterCorporateInfoForCertificateInput {
	s.Pref = &v
	return s
}

// SetPresidentName1 sets the PresidentName1 field's value.
func (s *RegisterCorporateInfoForCertificateInput) SetPresidentName1(v string) *RegisterCorporateInfoForCertificateInput {
	s.PresidentName1 = &v
	return s
}

// SetPresidentName2 sets the PresidentName2 field's value.
func (s *RegisterCorporateInfoForCertificateInput) SetPresidentName2(v string) *RegisterCorporateInfoForCertificateInput {
	s.PresidentName2 = &v
	return s
}

// SetTdbCode sets the TdbCode field's value.
func (s *RegisterCorporateInfoForCertificateInput) SetTdbCode(v string) *RegisterCorporateInfoForCertificateInput {
	s.TdbCode = &v
	return s
}

// SetZip1 sets the Zip1 field's value.
func (s *RegisterCorporateInfoForCertificateInput) SetZip1(v string) *RegisterCorporateInfoForCertificateInput {
	s.Zip1 = &v
	return s
}

// SetZip2 sets the Zip2 field's value.
func (s *RegisterCorporateInfoForCertificateInput) SetZip2(v string) *RegisterCorporateInfoForCertificateInput {
	s.Zip2 = &v
	return s
}

type RegisterCorporateInfoForCertificateOutput struct {
	_ struct{} `type:"structure"`

	City *string `locationName:"city" type:"string"`

	CorpGrade *string `locationName:"corpGrade" type:"string"`

	CorpName *string `locationName:"corpName" type:"string"`

	DivisionName *string `locationName:"divisionName" type:"string"`

	KanaName1 *string `locationName:"kanaName1" type:"string"`

	KanaName2 *string `locationName:"kanaName2" type:"string"`

	Name1 *string `locationName:"name1" type:"string"`

	Name2 *string `locationName:"name2" type:"string"`

	PostName *string `locationName:"postName" type:"string"`

	Pref *string `locationName:"pref" type:"string"`

	PresidentName1 *string `locationName:"presidentName1" type:"string"`

	PresidentName2 *string `locationName:"presidentName2" type:"string"`

	RequestId *string `locationName:"requestId" type:"string"`

	TdbCode *string `locationName:"tdbCode" type:"string"`

	Zip1 *string `locationName:"zip1" type:"string"`

	Zip2 *string `locationName:"zip2" type:"string"`
}

// String returns the string representation
func (s RegisterCorporateInfoForCertificateOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RegisterCorporateInfoForCertificateOutput) GoString() string {
	return s.String()
}

// SetCity sets the City field's value.
func (s *RegisterCorporateInfoForCertificateOutput) SetCity(v string) *RegisterCorporateInfoForCertificateOutput {
	s.City = &v
	return s
}

// SetCorpGrade sets the CorpGrade field's value.
func (s *RegisterCorporateInfoForCertificateOutput) SetCorpGrade(v string) *RegisterCorporateInfoForCertificateOutput {
	s.CorpGrade = &v
	return s
}

// SetCorpName sets the CorpName field's value.
func (s *RegisterCorporateInfoForCertificateOutput) SetCorpName(v string) *RegisterCorporateInfoForCertificateOutput {
	s.CorpName = &v
	return s
}

// SetDivisionName sets the DivisionName field's value.
func (s *RegisterCorporateInfoForCertificateOutput) SetDivisionName(v string) *RegisterCorporateInfoForCertificateOutput {
	s.DivisionName = &v
	return s
}

// SetKanaName1 sets the KanaName1 field's value.
func (s *RegisterCorporateInfoForCertificateOutput) SetKanaName1(v string) *RegisterCorporateInfoForCertificateOutput {
	s.KanaName1 = &v
	return s
}

// SetKanaName2 sets the KanaName2 field's value.
func (s *RegisterCorporateInfoForCertificateOutput) SetKanaName2(v string) *RegisterCorporateInfoForCertificateOutput {
	s.KanaName2 = &v
	return s
}

// SetName1 sets the Name1 field's value.
func (s *RegisterCorporateInfoForCertificateOutput) SetName1(v string) *RegisterCorporateInfoForCertificateOutput {
	s.Name1 = &v
	return s
}

// SetName2 sets the Name2 field's value.
func (s *RegisterCorporateInfoForCertificateOutput) SetName2(v string) *RegisterCorporateInfoForCertificateOutput {
	s.Name2 = &v
	return s
}

// SetPostName sets the PostName field's value.
func (s *RegisterCorporateInfoForCertificateOutput) SetPostName(v string) *RegisterCorporateInfoForCertificateOutput {
	s.PostName = &v
	return s
}

// SetPref sets the Pref field's value.
func (s *RegisterCorporateInfoForCertificateOutput) SetPref(v string) *RegisterCorporateInfoForCertificateOutput {
	s.Pref = &v
	return s
}

// SetPresidentName1 sets the PresidentName1 field's value.
func (s *RegisterCorporateInfoForCertificateOutput) SetPresidentName1(v string) *RegisterCorporateInfoForCertificateOutput {
	s.PresidentName1 = &v
	return s
}

// SetPresidentName2 sets the PresidentName2 field's value.
func (s *RegisterCorporateInfoForCertificateOutput) SetPresidentName2(v string) *RegisterCorporateInfoForCertificateOutput {
	s.PresidentName2 = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *RegisterCorporateInfoForCertificateOutput) SetRequestId(v string) *RegisterCorporateInfoForCertificateOutput {
	s.RequestId = &v
	return s
}

// SetTdbCode sets the TdbCode field's value.
func (s *RegisterCorporateInfoForCertificateOutput) SetTdbCode(v string) *RegisterCorporateInfoForCertificateOutput {
	s.TdbCode = &v
	return s
}

// SetZip1 sets the Zip1 field's value.
func (s *RegisterCorporateInfoForCertificateOutput) SetZip1(v string) *RegisterCorporateInfoForCertificateOutput {
	s.Zip1 = &v
	return s
}

// SetZip2 sets the Zip2 field's value.
func (s *RegisterCorporateInfoForCertificateOutput) SetZip2(v string) *RegisterCorporateInfoForCertificateOutput {
	s.Zip2 = &v
	return s
}

type RegisterInstancesWithLoadBalancerInput struct {
	_ struct{} `type:"structure"`

	InstancePort *int64 `locationName:"InstancePort" type:"integer"`

	Instances []*RequestInstancesStruct `locationName:"Instances" locationNameList:"member" type:"list"`

	LoadBalancerName *string `locationName:"LoadBalancerName" type:"string"`

	LoadBalancerPort *int64 `locationName:"LoadBalancerPort" type:"integer"`
}

// String returns the string representation
func (s RegisterInstancesWithLoadBalancerInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RegisterInstancesWithLoadBalancerInput) GoString() string {
	return s.String()
}

// SetInstancePort sets the InstancePort field's value.
func (s *RegisterInstancesWithLoadBalancerInput) SetInstancePort(v int64) *RegisterInstancesWithLoadBalancerInput {
	s.InstancePort = &v
	return s
}

// SetInstances sets the Instances field's value.
func (s *RegisterInstancesWithLoadBalancerInput) SetInstances(v []*RequestInstancesStruct) *RegisterInstancesWithLoadBalancerInput {
	s.Instances = v
	return s
}

// SetLoadBalancerName sets the LoadBalancerName field's value.
func (s *RegisterInstancesWithLoadBalancerInput) SetLoadBalancerName(v string) *RegisterInstancesWithLoadBalancerInput {
	s.LoadBalancerName = &v
	return s
}

// SetLoadBalancerPort sets the LoadBalancerPort field's value.
func (s *RegisterInstancesWithLoadBalancerInput) SetLoadBalancerPort(v int64) *RegisterInstancesWithLoadBalancerInput {
	s.LoadBalancerPort = &v
	return s
}

type RegisterInstancesWithLoadBalancerOutput struct {
	_ struct{} `type:"structure"`

	Instances []*InstancesMemberItem `locationName:"Instances" locationNameList:"member" type:"list"`

	RegisterInstancesWithLoadBalancerResult *RegisterInstancesWithLoadBalancerOutput `locationName:"RegisterInstancesWithLoadBalancerResult" type:"structure"`

	ResponseMetadata *ResponseMetadata `locationName:"ResponseMetadata" type:"structure"`
}

// String returns the string representation
func (s RegisterInstancesWithLoadBalancerOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RegisterInstancesWithLoadBalancerOutput) GoString() string {
	return s.String()
}

// SetInstances sets the Instances field's value.
func (s *RegisterInstancesWithLoadBalancerOutput) SetInstances(v []*InstancesMemberItem) *RegisterInstancesWithLoadBalancerOutput {
	s.Instances = v
	return s
}

// SetRegisterInstancesWithLoadBalancerResult sets the RegisterInstancesWithLoadBalancerResult field's value.
func (s *RegisterInstancesWithLoadBalancerOutput) SetRegisterInstancesWithLoadBalancerResult(v *RegisterInstancesWithLoadBalancerOutput) *RegisterInstancesWithLoadBalancerOutput {
	s.RegisterInstancesWithLoadBalancerResult = v
	return s
}

// SetResponseMetadata sets the ResponseMetadata field's value.
func (s *RegisterInstancesWithLoadBalancerOutput) SetResponseMetadata(v *ResponseMetadata) *RegisterInstancesWithLoadBalancerOutput {
	s.ResponseMetadata = v
	return s
}

type RegisterInstancesWithSecurityGroupInput struct {
	_ struct{} `type:"structure"`

	GroupName *string `locationName:"GroupName" type:"string"`

	InstanceId []*string `locationName:"InstanceId" type:"list"`
}

// String returns the string representation
func (s RegisterInstancesWithSecurityGroupInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RegisterInstancesWithSecurityGroupInput) GoString() string {
	return s.String()
}

// SetGroupName sets the GroupName field's value.
func (s *RegisterInstancesWithSecurityGroupInput) SetGroupName(v string) *RegisterInstancesWithSecurityGroupInput {
	s.GroupName = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *RegisterInstancesWithSecurityGroupInput) SetInstanceId(v []*string) *RegisterInstancesWithSecurityGroupInput {
	s.InstanceId = v
	return s
}

type RegisterInstancesWithSecurityGroupOutput struct {
	_ struct{} `type:"structure"`

	InstancesSet []*InstancesSetItem `locationName:"instancesSet" locationNameList:"item" type:"list"`

	RequestId *string `locationName:"requestId" type:"string"`
}

// String returns the string representation
func (s RegisterInstancesWithSecurityGroupOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RegisterInstancesWithSecurityGroupOutput) GoString() string {
	return s.String()
}

// SetInstancesSet sets the InstancesSet field's value.
func (s *RegisterInstancesWithSecurityGroupOutput) SetInstancesSet(v []*InstancesSetItem) *RegisterInstancesWithSecurityGroupOutput {
	s.InstancesSet = v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *RegisterInstancesWithSecurityGroupOutput) SetRequestId(v string) *RegisterInstancesWithSecurityGroupOutput {
	s.RequestId = &v
	return s
}

type RegisterPortWithLoadBalancerInput struct {
	_ struct{} `type:"structure"`

	Listeners []*RequestListenersStruct `locationName:"Listeners" locationNameList:"member" type:"list"`

	LoadBalancerName *string `locationName:"LoadBalancerName" type:"string"`
}

// String returns the string representation
func (s RegisterPortWithLoadBalancerInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RegisterPortWithLoadBalancerInput) GoString() string {
	return s.String()
}

// SetListeners sets the Listeners field's value.
func (s *RegisterPortWithLoadBalancerInput) SetListeners(v []*RequestListenersStruct) *RegisterPortWithLoadBalancerInput {
	s.Listeners = v
	return s
}

// SetLoadBalancerName sets the LoadBalancerName field's value.
func (s *RegisterPortWithLoadBalancerInput) SetLoadBalancerName(v string) *RegisterPortWithLoadBalancerInput {
	s.LoadBalancerName = &v
	return s
}

type RegisterPortWithLoadBalancerOutput struct {
	_ struct{} `type:"structure"`

	Listeners []*ListenersMemberItem `locationName:"Listeners" locationNameList:"member" type:"list"`

	RegisterPortWithLoadBalancerResult *RegisterPortWithLoadBalancerOutput `locationName:"RegisterPortWithLoadBalancerResult" type:"structure"`

	ResponseMetadata *ResponseMetadata `locationName:"ResponseMetadata" type:"structure"`
}

// String returns the string representation
func (s RegisterPortWithLoadBalancerOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RegisterPortWithLoadBalancerOutput) GoString() string {
	return s.String()
}

// SetListeners sets the Listeners field's value.
func (s *RegisterPortWithLoadBalancerOutput) SetListeners(v []*ListenersMemberItem) *RegisterPortWithLoadBalancerOutput {
	s.Listeners = v
	return s
}

// SetRegisterPortWithLoadBalancerResult sets the RegisterPortWithLoadBalancerResult field's value.
func (s *RegisterPortWithLoadBalancerOutput) SetRegisterPortWithLoadBalancerResult(v *RegisterPortWithLoadBalancerOutput) *RegisterPortWithLoadBalancerOutput {
	s.RegisterPortWithLoadBalancerResult = v
	return s
}

// SetResponseMetadata sets the ResponseMetadata field's value.
func (s *RegisterPortWithLoadBalancerOutput) SetResponseMetadata(v *ResponseMetadata) *RegisterPortWithLoadBalancerOutput {
	s.ResponseMetadata = v
	return s
}

type ReleaseAddressInput struct {
	_ struct{} `type:"structure"`

	PrivateIpAddress *string `locationName:"PrivateIpAddress" type:"string"`

	PublicIp *string `locationName:"PublicIp" type:"string"`
}

// String returns the string representation
func (s ReleaseAddressInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ReleaseAddressInput) GoString() string {
	return s.String()
}

// SetPrivateIpAddress sets the PrivateIpAddress field's value.
func (s *ReleaseAddressInput) SetPrivateIpAddress(v string) *ReleaseAddressInput {
	s.PrivateIpAddress = &v
	return s
}

// SetPublicIp sets the PublicIp field's value.
func (s *ReleaseAddressInput) SetPublicIp(v string) *ReleaseAddressInput {
	s.PublicIp = &v
	return s
}

type ReleaseAddressOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s ReleaseAddressOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ReleaseAddressOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *ReleaseAddressOutput) SetRequestId(v string) *ReleaseAddressOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *ReleaseAddressOutput) SetReturn(v bool) *ReleaseAddressOutput {
	s.Return = &v
	return s
}

type ReplaceRouteInput struct {
	_ struct{} `type:"structure"`

	DestinationCidrBlock *string `locationName:"DestinationCidrBlock" type:"string"`

	IpAddress *string `locationName:"IpAddress" type:"string"`

	NetworkId *string `locationName:"NetworkId" type:"string"`

	NetworkName *string `locationName:"NetworkName" type:"string"`

	RouteTableId *string `locationName:"RouteTableId" type:"string"`
}

// String returns the string representation
func (s ReplaceRouteInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ReplaceRouteInput) GoString() string {
	return s.String()
}

// SetDestinationCidrBlock sets the DestinationCidrBlock field's value.
func (s *ReplaceRouteInput) SetDestinationCidrBlock(v string) *ReplaceRouteInput {
	s.DestinationCidrBlock = &v
	return s
}

// SetIpAddress sets the IpAddress field's value.
func (s *ReplaceRouteInput) SetIpAddress(v string) *ReplaceRouteInput {
	s.IpAddress = &v
	return s
}

// SetNetworkId sets the NetworkId field's value.
func (s *ReplaceRouteInput) SetNetworkId(v string) *ReplaceRouteInput {
	s.NetworkId = &v
	return s
}

// SetNetworkName sets the NetworkName field's value.
func (s *ReplaceRouteInput) SetNetworkName(v string) *ReplaceRouteInput {
	s.NetworkName = &v
	return s
}

// SetRouteTableId sets the RouteTableId field's value.
func (s *ReplaceRouteInput) SetRouteTableId(v string) *ReplaceRouteInput {
	s.RouteTableId = &v
	return s
}

type ReplaceRouteOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s ReplaceRouteOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ReplaceRouteOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *ReplaceRouteOutput) SetRequestId(v string) *ReplaceRouteOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *ReplaceRouteOutput) SetReturn(v bool) *ReplaceRouteOutput {
	s.Return = &v
	return s
}

type ReplaceRouteTableAssociationInput struct {
	_ struct{} `type:"structure"`

	Agreement *bool `locationName:"Agreement" type:"boolean"`

	AssociationId *string `locationName:"AssociationId" type:"string"`

	RouteTableId *string `locationName:"RouteTableId" type:"string"`
}

// String returns the string representation
func (s ReplaceRouteTableAssociationInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ReplaceRouteTableAssociationInput) GoString() string {
	return s.String()
}

// SetAgreement sets the Agreement field's value.
func (s *ReplaceRouteTableAssociationInput) SetAgreement(v bool) *ReplaceRouteTableAssociationInput {
	s.Agreement = &v
	return s
}

// SetAssociationId sets the AssociationId field's value.
func (s *ReplaceRouteTableAssociationInput) SetAssociationId(v string) *ReplaceRouteTableAssociationInput {
	s.AssociationId = &v
	return s
}

// SetRouteTableId sets the RouteTableId field's value.
func (s *ReplaceRouteTableAssociationInput) SetRouteTableId(v string) *ReplaceRouteTableAssociationInput {
	s.RouteTableId = &v
	return s
}

type ReplaceRouteTableAssociationOutput struct {
	_ struct{} `type:"structure"`

	NewAssociationId *string `locationName:"newAssociationId" type:"string"`

	RequestId *string `locationName:"requestId" type:"string"`
}

// String returns the string representation
func (s ReplaceRouteTableAssociationOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ReplaceRouteTableAssociationOutput) GoString() string {
	return s.String()
}

// SetNewAssociationId sets the NewAssociationId field's value.
func (s *ReplaceRouteTableAssociationOutput) SetNewAssociationId(v string) *ReplaceRouteTableAssociationOutput {
	s.NewAssociationId = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *ReplaceRouteTableAssociationOutput) SetRequestId(v string) *ReplaceRouteTableAssociationOutput {
	s.RequestId = &v
	return s
}

type RequestAdditionalAttributesStruct struct {
	_ struct{} `type:"structure"`

	Key *string `locationName:"Key" type:"string"`

	Value *string `locationName:"Value" type:"string"`
}

// String returns the string representation
func (s RequestAdditionalAttributesStruct) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RequestAdditionalAttributesStruct) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *RequestAdditionalAttributesStruct) SetKey(v string) *RequestAdditionalAttributesStruct {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *RequestAdditionalAttributesStruct) SetValue(v string) *RequestAdditionalAttributesStruct {
	s.Value = &v
	return s
}

type RequestBypassInterfaceStruct struct {
	_ struct{} `type:"structure"`

	NetworkId *string `locationName:"NetworkId" type:"string"`

	NetworkName *string `locationName:"NetworkName" type:"string"`
}

// String returns the string representation
func (s RequestBypassInterfaceStruct) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RequestBypassInterfaceStruct) GoString() string {
	return s.String()
}

// SetNetworkId sets the NetworkId field's value.
func (s *RequestBypassInterfaceStruct) SetNetworkId(v string) *RequestBypassInterfaceStruct {
	s.NetworkId = &v
	return s
}

// SetNetworkName sets the NetworkName field's value.
func (s *RequestBypassInterfaceStruct) SetNetworkName(v string) *RequestBypassInterfaceStruct {
	s.NetworkName = &v
	return s
}

type RequestCertInfoStruct struct {
	_ struct{} `type:"structure"`

	LocationName *string `locationName:"LocationName" type:"string"`

	OrganizationName *string `locationName:"OrganizationName" type:"string"`

	OrganizationUnitName *string `locationName:"OrganizationUnitName" type:"string"`

	StateName *string `locationName:"StateName" type:"string"`
}

// String returns the string representation
func (s RequestCertInfoStruct) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RequestCertInfoStruct) GoString() string {
	return s.String()
}

// SetLocationName sets the LocationName field's value.
func (s *RequestCertInfoStruct) SetLocationName(v string) *RequestCertInfoStruct {
	s.LocationName = &v
	return s
}

// SetOrganizationName sets the OrganizationName field's value.
func (s *RequestCertInfoStruct) SetOrganizationName(v string) *RequestCertInfoStruct {
	s.OrganizationName = &v
	return s
}

// SetOrganizationUnitName sets the OrganizationUnitName field's value.
func (s *RequestCertInfoStruct) SetOrganizationUnitName(v string) *RequestCertInfoStruct {
	s.OrganizationUnitName = &v
	return s
}

// SetStateName sets the StateName field's value.
func (s *RequestCertInfoStruct) SetStateName(v string) *RequestCertInfoStruct {
	s.StateName = &v
	return s
}

type RequestCopyInstanceStruct struct {
	_ struct{} `type:"structure"`

	AccountingType *string `locationName:"AccountingType" type:"string"`

	InstanceName *string `locationName:"InstanceName" type:"string"`

	InstanceType *string `locationName:"InstanceType" type:"string"`

	IpType *string `locationName:"IpType" type:"string"`

	RequestLoadBalancers []*RequestLoadBalancersStruct `locationName:"LoadBalancers" type:"list"`

	RequestPlacementStruct *RequestPlacementStruct `locationName:"Placement" type:"structure"`

	RequestSecurityGroup []*string `locationName:"SecurityGroup" type:"list"`
}

// String returns the string representation
func (s RequestCopyInstanceStruct) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RequestCopyInstanceStruct) GoString() string {
	return s.String()
}

// SetAccountingType sets the AccountingType field's value.
func (s *RequestCopyInstanceStruct) SetAccountingType(v string) *RequestCopyInstanceStruct {
	s.AccountingType = &v
	return s
}

// SetInstanceName sets the InstanceName field's value.
func (s *RequestCopyInstanceStruct) SetInstanceName(v string) *RequestCopyInstanceStruct {
	s.InstanceName = &v
	return s
}

// SetInstanceType sets the InstanceType field's value.
func (s *RequestCopyInstanceStruct) SetInstanceType(v string) *RequestCopyInstanceStruct {
	s.InstanceType = &v
	return s
}

// SetIpType sets the IpType field's value.
func (s *RequestCopyInstanceStruct) SetIpType(v string) *RequestCopyInstanceStruct {
	s.IpType = &v
	return s
}

// SetRequestLoadBalancers sets the RequestLoadBalancers field's value.
func (s *RequestCopyInstanceStruct) SetRequestLoadBalancers(v []*RequestLoadBalancersStruct) *RequestCopyInstanceStruct {
	s.RequestLoadBalancers = v
	return s
}

// SetRequestPlacementStruct sets the RequestPlacementStruct field's value.
func (s *RequestCopyInstanceStruct) SetRequestPlacementStruct(v *RequestPlacementStruct) *RequestCopyInstanceStruct {
	s.RequestPlacementStruct = v
	return s
}

// SetRequestSecurityGroup sets the RequestSecurityGroup field's value.
func (s *RequestCopyInstanceStruct) SetRequestSecurityGroup(v []*string) *RequestCopyInstanceStruct {
	s.RequestSecurityGroup = v
	return s
}

type RequestDDayStruct struct {
	_ struct{} `type:"structure"`

	EndingDDay *string `locationName:"EndingDDay" type:"string"`

	StartingDDay *string `locationName:"StartingDDay" type:"string"`
}

// String returns the string representation
func (s RequestDDayStruct) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RequestDDayStruct) GoString() string {
	return s.String()
}

// SetEndingDDay sets the EndingDDay field's value.
func (s *RequestDDayStruct) SetEndingDDay(v string) *RequestDDayStruct {
	s.EndingDDay = &v
	return s
}

// SetStartingDDay sets the StartingDDay field's value.
func (s *RequestDDayStruct) SetStartingDDay(v string) *RequestDDayStruct {
	s.StartingDDay = &v
	return s
}

type RequestDayStruct struct {
	_ struct{} `type:"structure"`

	SetFriday *string `locationName:"SetFriday" type:"string"`

	SetMonday *string `locationName:"SetMonday" type:"string"`

	SetSaturday *string `locationName:"SetSaturday" type:"string"`

	SetSunday *string `locationName:"SetSunday" type:"string"`

	SetThursday *string `locationName:"SetThursday" type:"string"`

	SetTuesday *string `locationName:"SetTuesday" type:"string"`

	SetWednesday *string `locationName:"SetWednesday" type:"string"`
}

// String returns the string representation
func (s RequestDayStruct) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RequestDayStruct) GoString() string {
	return s.String()
}

// SetSetFriday sets the SetFriday field's value.
func (s *RequestDayStruct) SetSetFriday(v string) *RequestDayStruct {
	s.SetFriday = &v
	return s
}

// SetSetMonday sets the SetMonday field's value.
func (s *RequestDayStruct) SetSetMonday(v string) *RequestDayStruct {
	s.SetMonday = &v
	return s
}

// SetSetSaturday sets the SetSaturday field's value.
func (s *RequestDayStruct) SetSetSaturday(v string) *RequestDayStruct {
	s.SetSaturday = &v
	return s
}

// SetSetSunday sets the SetSunday field's value.
func (s *RequestDayStruct) SetSetSunday(v string) *RequestDayStruct {
	s.SetSunday = &v
	return s
}

// SetSetThursday sets the SetThursday field's value.
func (s *RequestDayStruct) SetSetThursday(v string) *RequestDayStruct {
	s.SetThursday = &v
	return s
}

// SetSetTuesday sets the SetTuesday field's value.
func (s *RequestDayStruct) SetSetTuesday(v string) *RequestDayStruct {
	s.SetTuesday = &v
	return s
}

// SetSetWednesday sets the SetWednesday field's value.
func (s *RequestDayStruct) SetSetWednesday(v string) *RequestDayStruct {
	s.SetWednesday = &v
	return s
}

type RequestDescriptionStruct struct {
	_ struct{} `type:"structure"`

	Value *string `locationName:"Value" type:"string"`
}

// String returns the string representation
func (s RequestDescriptionStruct) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RequestDescriptionStruct) GoString() string {
	return s.String()
}

// SetValue sets the Value field's value.
func (s *RequestDescriptionStruct) SetValue(v string) *RequestDescriptionStruct {
	s.Value = &v
	return s
}

type RequestDestinationStruct struct {
	_ struct{} `type:"structure"`

	Port *int64 `locationName:"Port" type:"integer"`
}

// String returns the string representation
func (s RequestDestinationStruct) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RequestDestinationStruct) GoString() string {
	return s.String()
}

// SetPort sets the Port field's value.
func (s *RequestDestinationStruct) SetPort(v int64) *RequestDestinationStruct {
	s.Port = &v
	return s
}

type RequestDhcpConfigurationStruct struct {
	_ struct{} `type:"structure"`

	Key *string `locationName:"Key" type:"string"`

	RequestValue []*string `locationName:"Value" type:"list"`
}

// String returns the string representation
func (s RequestDhcpConfigurationStruct) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RequestDhcpConfigurationStruct) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *RequestDhcpConfigurationStruct) SetKey(v string) *RequestDhcpConfigurationStruct {
	s.Key = &v
	return s
}

// SetRequestValue sets the RequestValue field's value.
func (s *RequestDhcpConfigurationStruct) SetRequestValue(v []*string) *RequestDhcpConfigurationStruct {
	s.RequestValue = v
	return s
}

type RequestElasticLoadBalancersStruct struct {
	_ struct{} `type:"structure"`

	RequestElasticLoadBalancerId []*string `locationName:"ElasticLoadBalancerId" type:"list"`

	RequestElasticLoadBalancerName []*string `locationName:"ElasticLoadBalancerName" type:"list"`

	RequestElasticLoadBalancerPort []*int64 `locationName:"ElasticLoadBalancerPort" type:"list"`

	RequestInstancePort []*int64 `locationName:"InstancePort" type:"list"`

	RequestProtocol []*string `locationName:"Protocol" type:"list"`
}

// String returns the string representation
func (s RequestElasticLoadBalancersStruct) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RequestElasticLoadBalancersStruct) GoString() string {
	return s.String()
}

// SetRequestElasticLoadBalancerId sets the RequestElasticLoadBalancerId field's value.
func (s *RequestElasticLoadBalancersStruct) SetRequestElasticLoadBalancerId(v []*string) *RequestElasticLoadBalancersStruct {
	s.RequestElasticLoadBalancerId = v
	return s
}

// SetRequestElasticLoadBalancerName sets the RequestElasticLoadBalancerName field's value.
func (s *RequestElasticLoadBalancersStruct) SetRequestElasticLoadBalancerName(v []*string) *RequestElasticLoadBalancersStruct {
	s.RequestElasticLoadBalancerName = v
	return s
}

// SetRequestElasticLoadBalancerPort sets the RequestElasticLoadBalancerPort field's value.
func (s *RequestElasticLoadBalancersStruct) SetRequestElasticLoadBalancerPort(v []*int64) *RequestElasticLoadBalancersStruct {
	s.RequestElasticLoadBalancerPort = v
	return s
}

// SetRequestInstancePort sets the RequestInstancePort field's value.
func (s *RequestElasticLoadBalancersStruct) SetRequestInstancePort(v []*int64) *RequestElasticLoadBalancersStruct {
	s.RequestInstancePort = v
	return s
}

// SetRequestProtocol sets the RequestProtocol field's value.
func (s *RequestElasticLoadBalancersStruct) SetRequestProtocol(v []*string) *RequestElasticLoadBalancersStruct {
	s.RequestProtocol = v
	return s
}

type RequestFilterStruct struct {
	_ struct{} `type:"structure"`

	Name *string `locationName:"Name" type:"string"`

	RequestValue []*string `locationName:"Value" type:"list"`
}

// String returns the string representation
func (s RequestFilterStruct) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RequestFilterStruct) GoString() string {
	return s.String()
}

// SetName sets the Name field's value.
func (s *RequestFilterStruct) SetName(v string) *RequestFilterStruct {
	s.Name = &v
	return s
}

// SetRequestValue sets the RequestValue field's value.
func (s *RequestFilterStruct) SetRequestValue(v []*string) *RequestFilterStruct {
	s.RequestValue = v
	return s
}

type RequestGroupsStruct struct {
	_ struct{} `type:"structure"`

	GroupName *string `locationName:"GroupName" type:"string"`
}

// String returns the string representation
func (s RequestGroupsStruct) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RequestGroupsStruct) GoString() string {
	return s.String()
}

// SetGroupName sets the GroupName field's value.
func (s *RequestGroupsStruct) SetGroupName(v string) *RequestGroupsStruct {
	s.GroupName = &v
	return s
}

type RequestHealthCheckStruct struct {
	_ struct{} `type:"structure"`

	Interval *int64 `locationName:"Interval" type:"integer"`

	Target *string `locationName:"Target" type:"string"`

	UnhealthyThreshold *int64 `locationName:"UnhealthyThreshold" type:"integer"`
}

// String returns the string representation
func (s RequestHealthCheckStruct) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RequestHealthCheckStruct) GoString() string {
	return s.String()
}

// SetInterval sets the Interval field's value.
func (s *RequestHealthCheckStruct) SetInterval(v int64) *RequestHealthCheckStruct {
	s.Interval = &v
	return s
}

// SetTarget sets the Target field's value.
func (s *RequestHealthCheckStruct) SetTarget(v string) *RequestHealthCheckStruct {
	s.Target = &v
	return s
}

// SetUnhealthyThreshold sets the UnhealthyThreshold field's value.
func (s *RequestHealthCheckStruct) SetUnhealthyThreshold(v int64) *RequestHealthCheckStruct {
	s.UnhealthyThreshold = &v
	return s
}

type RequestIPAddressesStruct struct {
	_ struct{} `type:"structure"`

	AddOnFilter *bool `locationName:"AddOnFilter" type:"boolean"`

	IPAddress *string `locationName:"IPAddress" type:"string"`
}

// String returns the string representation
func (s RequestIPAddressesStruct) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RequestIPAddressesStruct) GoString() string {
	return s.String()
}

// SetAddOnFilter sets the AddOnFilter field's value.
func (s *RequestIPAddressesStruct) SetAddOnFilter(v bool) *RequestIPAddressesStruct {
	s.AddOnFilter = &v
	return s
}

// SetIPAddress sets the IPAddress field's value.
func (s *RequestIPAddressesStruct) SetIPAddress(v string) *RequestIPAddressesStruct {
	s.IPAddress = &v
	return s
}

type RequestInboundInterfaceStruct struct {
	_ struct{} `type:"structure"`

	NetworkId *string `locationName:"NetworkId" type:"string"`

	NetworkName *string `locationName:"NetworkName" type:"string"`
}

// String returns the string representation
func (s RequestInboundInterfaceStruct) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RequestInboundInterfaceStruct) GoString() string {
	return s.String()
}

// SetNetworkId sets the NetworkId field's value.
func (s *RequestInboundInterfaceStruct) SetNetworkId(v string) *RequestInboundInterfaceStruct {
	s.NetworkId = &v
	return s
}

// SetNetworkName sets the NetworkName field's value.
func (s *RequestInboundInterfaceStruct) SetNetworkName(v string) *RequestInboundInterfaceStruct {
	s.NetworkName = &v
	return s
}

type RequestInstancesStruct struct {
	_ struct{} `type:"structure"`

	InstanceId *string `locationName:"InstanceId" type:"string"`

	InstanceUniqueId *string `locationName:"InstanceUniqueId" type:"string"`
}

// String returns the string representation
func (s RequestInstancesStruct) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RequestInstancesStruct) GoString() string {
	return s.String()
}

// SetInstanceId sets the InstanceId field's value.
func (s *RequestInstancesStruct) SetInstanceId(v string) *RequestInstancesStruct {
	s.InstanceId = &v
	return s
}

// SetInstanceUniqueId sets the InstanceUniqueId field's value.
func (s *RequestInstancesStruct) SetInstanceUniqueId(v string) *RequestInstancesStruct {
	s.InstanceUniqueId = &v
	return s
}

type RequestIpPermissionsStruct struct {
	_ struct{} `type:"structure"`

	Description *string `locationName:"Description" type:"string"`

	FromPort *int64 `locationName:"FromPort" type:"integer"`

	InOut *string `locationName:"InOut" type:"string"`

	IpProtocol *string `locationName:"IpProtocol" type:"string"`

	RequestGroups []*RequestGroupsStruct `locationName:"Groups" type:"list"`

	RequestIpRanges []*RequestIpRangesStruct `locationName:"IpRanges" type:"list"`

	ToPort *int64 `locationName:"ToPort" type:"integer"`
}

// String returns the string representation
func (s RequestIpPermissionsStruct) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RequestIpPermissionsStruct) GoString() string {
	return s.String()
}

// SetDescription sets the Description field's value.
func (s *RequestIpPermissionsStruct) SetDescription(v string) *RequestIpPermissionsStruct {
	s.Description = &v
	return s
}

// SetFromPort sets the FromPort field's value.
func (s *RequestIpPermissionsStruct) SetFromPort(v int64) *RequestIpPermissionsStruct {
	s.FromPort = &v
	return s
}

// SetInOut sets the InOut field's value.
func (s *RequestIpPermissionsStruct) SetInOut(v string) *RequestIpPermissionsStruct {
	s.InOut = &v
	return s
}

// SetIpProtocol sets the IpProtocol field's value.
func (s *RequestIpPermissionsStruct) SetIpProtocol(v string) *RequestIpPermissionsStruct {
	s.IpProtocol = &v
	return s
}

// SetRequestGroups sets the RequestGroups field's value.
func (s *RequestIpPermissionsStruct) SetRequestGroups(v []*RequestGroupsStruct) *RequestIpPermissionsStruct {
	s.RequestGroups = v
	return s
}

// SetRequestIpRanges sets the RequestIpRanges field's value.
func (s *RequestIpPermissionsStruct) SetRequestIpRanges(v []*RequestIpRangesStruct) *RequestIpPermissionsStruct {
	s.RequestIpRanges = v
	return s
}

// SetToPort sets the ToPort field's value.
func (s *RequestIpPermissionsStruct) SetToPort(v int64) *RequestIpPermissionsStruct {
	s.ToPort = &v
	return s
}

type RequestIpRangesStruct struct {
	_ struct{} `type:"structure"`

	CidrIp *string `locationName:"CidrIp" type:"string"`
}

// String returns the string representation
func (s RequestIpRangesStruct) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RequestIpRangesStruct) GoString() string {
	return s.String()
}

// SetCidrIp sets the CidrIp field's value.
func (s *RequestIpRangesStruct) SetCidrIp(v string) *RequestIpRangesStruct {
	s.CidrIp = &v
	return s
}

type RequestLicenseStruct struct {
	_ struct{} `type:"structure"`

	LicenseName *string `locationName:"LicenseName" type:"string"`

	LicenseNum *string `locationName:"LicenseNum" type:"string"`
}

// String returns the string representation
func (s RequestLicenseStruct) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RequestLicenseStruct) GoString() string {
	return s.String()
}

// SetLicenseName sets the LicenseName field's value.
func (s *RequestLicenseStruct) SetLicenseName(v string) *RequestLicenseStruct {
	s.LicenseName = &v
	return s
}

// SetLicenseNum sets the LicenseNum field's value.
func (s *RequestLicenseStruct) SetLicenseNum(v string) *RequestLicenseStruct {
	s.LicenseNum = &v
	return s
}

type RequestListenInterfaceStruct struct {
	_ struct{} `type:"structure"`

	NetworkId *string `locationName:"NetworkId" type:"string"`

	NetworkName *string `locationName:"NetworkName" type:"string"`
}

// String returns the string representation
func (s RequestListenInterfaceStruct) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RequestListenInterfaceStruct) GoString() string {
	return s.String()
}

// SetNetworkId sets the NetworkId field's value.
func (s *RequestListenInterfaceStruct) SetNetworkId(v string) *RequestListenInterfaceStruct {
	s.NetworkId = &v
	return s
}

// SetNetworkName sets the NetworkName field's value.
func (s *RequestListenInterfaceStruct) SetNetworkName(v string) *RequestListenInterfaceStruct {
	s.NetworkName = &v
	return s
}

type RequestListenerStruct struct {
	_ struct{} `type:"structure"`

	BalancingType *string `locationName:"BalancingType" type:"string"`

	InstancePort *int64 `locationName:"InstancePort" type:"integer"`

	LoadBalancerPort *int64 `locationName:"LoadBalancerPort" type:"integer"`

	Protocol *string `locationName:"Protocol" type:"string"`
}

// String returns the string representation
func (s RequestListenerStruct) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RequestListenerStruct) GoString() string {
	return s.String()
}

// SetBalancingType sets the BalancingType field's value.
func (s *RequestListenerStruct) SetBalancingType(v string) *RequestListenerStruct {
	s.BalancingType = &v
	return s
}

// SetInstancePort sets the InstancePort field's value.
func (s *RequestListenerStruct) SetInstancePort(v int64) *RequestListenerStruct {
	s.InstancePort = &v
	return s
}

// SetLoadBalancerPort sets the LoadBalancerPort field's value.
func (s *RequestListenerStruct) SetLoadBalancerPort(v int64) *RequestListenerStruct {
	s.LoadBalancerPort = &v
	return s
}

// SetProtocol sets the Protocol field's value.
func (s *RequestListenerStruct) SetProtocol(v string) *RequestListenerStruct {
	s.Protocol = &v
	return s
}

type RequestListenerUpdateStruct struct {
	_ struct{} `type:"structure"`

	InstancePort *int64 `locationName:"InstancePort" type:"integer"`

	LoadBalancerPort *int64 `locationName:"LoadBalancerPort" type:"integer"`

	RequestListenerStruct *RequestListenerStruct `locationName:"Listener" type:"structure"`
}

// String returns the string representation
func (s RequestListenerUpdateStruct) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RequestListenerUpdateStruct) GoString() string {
	return s.String()
}

// SetInstancePort sets the InstancePort field's value.
func (s *RequestListenerUpdateStruct) SetInstancePort(v int64) *RequestListenerUpdateStruct {
	s.InstancePort = &v
	return s
}

// SetLoadBalancerPort sets the LoadBalancerPort field's value.
func (s *RequestListenerUpdateStruct) SetLoadBalancerPort(v int64) *RequestListenerUpdateStruct {
	s.LoadBalancerPort = &v
	return s
}

// SetRequestListenerStruct sets the RequestListenerStruct field's value.
func (s *RequestListenerUpdateStruct) SetRequestListenerStruct(v *RequestListenerStruct) *RequestListenerUpdateStruct {
	s.RequestListenerStruct = v
	return s
}

type RequestListenersStruct struct {
	_ struct{} `type:"structure"`

	BalancingType *string `locationName:"BalancingType" type:"string"`

	Description *string `locationName:"Description" type:"string"`

	ElasticLoadBalancerPort *int64 `locationName:"ElasticLoadBalancerPort" type:"integer"`

	InstancePort *int64 `locationName:"InstancePort" type:"integer"`

	LoadBalancerPort *int64 `locationName:"LoadBalancerPort" type:"integer"`

	Protocol *string `locationName:"Protocol" type:"string"`

	RequestHealthCheckStruct *RequestHealthCheckStruct `locationName:"HealthCheck" type:"structure"`

	RequestInstances []*RequestInstancesStruct `locationName:"Instances" locationNameList:"member" type:"list"`

	RequestSessionStruct *RequestSessionStruct `locationName:"Session" type:"structure"`

	RequestSorryPageStruct *RequestSorryPageStruct `locationName:"SorryPage" type:"structure"`

	SSLCertificateId *string `locationName:"SSLCertificateId" type:"string"`
}

// String returns the string representation
func (s RequestListenersStruct) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RequestListenersStruct) GoString() string {
	return s.String()
}

// SetBalancingType sets the BalancingType field's value.
func (s *RequestListenersStruct) SetBalancingType(v string) *RequestListenersStruct {
	s.BalancingType = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *RequestListenersStruct) SetDescription(v string) *RequestListenersStruct {
	s.Description = &v
	return s
}

// SetElasticLoadBalancerPort sets the ElasticLoadBalancerPort field's value.
func (s *RequestListenersStruct) SetElasticLoadBalancerPort(v int64) *RequestListenersStruct {
	s.ElasticLoadBalancerPort = &v
	return s
}

// SetInstancePort sets the InstancePort field's value.
func (s *RequestListenersStruct) SetInstancePort(v int64) *RequestListenersStruct {
	s.InstancePort = &v
	return s
}

// SetLoadBalancerPort sets the LoadBalancerPort field's value.
func (s *RequestListenersStruct) SetLoadBalancerPort(v int64) *RequestListenersStruct {
	s.LoadBalancerPort = &v
	return s
}

// SetProtocol sets the Protocol field's value.
func (s *RequestListenersStruct) SetProtocol(v string) *RequestListenersStruct {
	s.Protocol = &v
	return s
}

// SetRequestHealthCheckStruct sets the RequestHealthCheckStruct field's value.
func (s *RequestListenersStruct) SetRequestHealthCheckStruct(v *RequestHealthCheckStruct) *RequestListenersStruct {
	s.RequestHealthCheckStruct = v
	return s
}

// SetRequestInstances sets the RequestInstances field's value.
func (s *RequestListenersStruct) SetRequestInstances(v []*RequestInstancesStruct) *RequestListenersStruct {
	s.RequestInstances = v
	return s
}

// SetRequestSessionStruct sets the RequestSessionStruct field's value.
func (s *RequestListenersStruct) SetRequestSessionStruct(v *RequestSessionStruct) *RequestListenersStruct {
	s.RequestSessionStruct = v
	return s
}

// SetRequestSorryPageStruct sets the RequestSorryPageStruct field's value.
func (s *RequestListenersStruct) SetRequestSorryPageStruct(v *RequestSorryPageStruct) *RequestListenersStruct {
	s.RequestSorryPageStruct = v
	return s
}

// SetSSLCertificateId sets the SSLCertificateId field's value.
func (s *RequestListenersStruct) SetSSLCertificateId(v string) *RequestListenersStruct {
	s.SSLCertificateId = &v
	return s
}

type RequestLoadBalancerAttributesStruct struct {
	_ struct{} `type:"structure"`

	RequestAdditionalAttributes []*RequestAdditionalAttributesStruct `locationName:"AdditionalAttributes" locationNameList:"member" type:"list"`

	RequestSessionStruct *RequestSessionStruct `locationName:"Session" type:"structure"`

	RequestSorryPageStruct *RequestSorryPageStruct `locationName:"SorryPage" type:"structure"`
}

// String returns the string representation
func (s RequestLoadBalancerAttributesStruct) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RequestLoadBalancerAttributesStruct) GoString() string {
	return s.String()
}

// SetRequestAdditionalAttributes sets the RequestAdditionalAttributes field's value.
func (s *RequestLoadBalancerAttributesStruct) SetRequestAdditionalAttributes(v []*RequestAdditionalAttributesStruct) *RequestLoadBalancerAttributesStruct {
	s.RequestAdditionalAttributes = v
	return s
}

// SetRequestSessionStruct sets the RequestSessionStruct field's value.
func (s *RequestLoadBalancerAttributesStruct) SetRequestSessionStruct(v *RequestSessionStruct) *RequestLoadBalancerAttributesStruct {
	s.RequestSessionStruct = v
	return s
}

// SetRequestSorryPageStruct sets the RequestSorryPageStruct field's value.
func (s *RequestLoadBalancerAttributesStruct) SetRequestSorryPageStruct(v *RequestSorryPageStruct) *RequestLoadBalancerAttributesStruct {
	s.RequestSorryPageStruct = v
	return s
}

type RequestLoadBalancerNamesStruct struct {
	_ struct{} `type:"structure"`

	InstancePort *int64 `locationName:"InstancePort" type:"integer"`

	LoadBalancerName *string `locationName:"LoadBalancerName" type:"string"`

	LoadBalancerPort *int64 `locationName:"LoadBalancerPort" type:"integer"`
}

// String returns the string representation
func (s RequestLoadBalancerNamesStruct) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RequestLoadBalancerNamesStruct) GoString() string {
	return s.String()
}

// SetInstancePort sets the InstancePort field's value.
func (s *RequestLoadBalancerNamesStruct) SetInstancePort(v int64) *RequestLoadBalancerNamesStruct {
	s.InstancePort = &v
	return s
}

// SetLoadBalancerName sets the LoadBalancerName field's value.
func (s *RequestLoadBalancerNamesStruct) SetLoadBalancerName(v string) *RequestLoadBalancerNamesStruct {
	s.LoadBalancerName = &v
	return s
}

// SetLoadBalancerPort sets the LoadBalancerPort field's value.
func (s *RequestLoadBalancerNamesStruct) SetLoadBalancerPort(v int64) *RequestLoadBalancerNamesStruct {
	s.LoadBalancerPort = &v
	return s
}

type RequestLoadBalancersStruct struct {
	_ struct{} `type:"structure"`

	InstancePort *int64 `locationName:"InstancePort" type:"integer"`

	LoadBalancerName *string `locationName:"LoadBalancerName" type:"string"`

	LoadBalancerPort *int64 `locationName:"LoadBalancerPort" type:"integer"`

	Name *string `locationName:"Name" type:"string"`
}

// String returns the string representation
func (s RequestLoadBalancersStruct) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RequestLoadBalancersStruct) GoString() string {
	return s.String()
}

// SetInstancePort sets the InstancePort field's value.
func (s *RequestLoadBalancersStruct) SetInstancePort(v int64) *RequestLoadBalancersStruct {
	s.InstancePort = &v
	return s
}

// SetLoadBalancerName sets the LoadBalancerName field's value.
func (s *RequestLoadBalancersStruct) SetLoadBalancerName(v string) *RequestLoadBalancersStruct {
	s.LoadBalancerName = &v
	return s
}

// SetLoadBalancerPort sets the LoadBalancerPort field's value.
func (s *RequestLoadBalancersStruct) SetLoadBalancerPort(v int64) *RequestLoadBalancersStruct {
	s.LoadBalancerPort = &v
	return s
}

// SetName sets the Name field's value.
func (s *RequestLoadBalancersStruct) SetName(v string) *RequestLoadBalancersStruct {
	s.Name = &v
	return s
}

type RequestMonthStruct struct {
	_ struct{} `type:"structure"`

	EndingMonth *string `locationName:"EndingMonth" type:"string"`

	StartingMonth *string `locationName:"StartingMonth" type:"string"`
}

// String returns the string representation
func (s RequestMonthStruct) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RequestMonthStruct) GoString() string {
	return s.String()
}

// SetEndingMonth sets the EndingMonth field's value.
func (s *RequestMonthStruct) SetEndingMonth(v string) *RequestMonthStruct {
	s.EndingMonth = &v
	return s
}

// SetStartingMonth sets the StartingMonth field's value.
func (s *RequestMonthStruct) SetStartingMonth(v string) *RequestMonthStruct {
	s.StartingMonth = &v
	return s
}

type RequestNetworkInterfaceStruct struct {
	_ struct{} `type:"structure"`

	DeviceIndex *int64 `locationName:"DeviceIndex" type:"integer"`

	Dhcp *bool `locationName:"Dhcp" type:"boolean"`

	DhcpConfigId *string `locationName:"DhcpConfigId" type:"string"`

	DhcpOptionsId *string `locationName:"DhcpOptionsId" type:"string"`

	IpAddress *string `locationName:"IpAddress" type:"string"`

	IsVipNetwork *bool `locationName:"IsVipNetwork" type:"boolean"`

	NetworkId *string `locationName:"NetworkId" type:"string"`

	NetworkName *string `locationName:"NetworkName" type:"string"`

	RequestSecurityGroupId []*string `locationName:"SecurityGroupId" type:"list"`
}

// String returns the string representation
func (s RequestNetworkInterfaceStruct) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RequestNetworkInterfaceStruct) GoString() string {
	return s.String()
}

// SetDeviceIndex sets the DeviceIndex field's value.
func (s *RequestNetworkInterfaceStruct) SetDeviceIndex(v int64) *RequestNetworkInterfaceStruct {
	s.DeviceIndex = &v
	return s
}

// SetDhcp sets the Dhcp field's value.
func (s *RequestNetworkInterfaceStruct) SetDhcp(v bool) *RequestNetworkInterfaceStruct {
	s.Dhcp = &v
	return s
}

// SetDhcpConfigId sets the DhcpConfigId field's value.
func (s *RequestNetworkInterfaceStruct) SetDhcpConfigId(v string) *RequestNetworkInterfaceStruct {
	s.DhcpConfigId = &v
	return s
}

// SetDhcpOptionsId sets the DhcpOptionsId field's value.
func (s *RequestNetworkInterfaceStruct) SetDhcpOptionsId(v string) *RequestNetworkInterfaceStruct {
	s.DhcpOptionsId = &v
	return s
}

// SetIpAddress sets the IpAddress field's value.
func (s *RequestNetworkInterfaceStruct) SetIpAddress(v string) *RequestNetworkInterfaceStruct {
	s.IpAddress = &v
	return s
}

// SetIsVipNetwork sets the IsVipNetwork field's value.
func (s *RequestNetworkInterfaceStruct) SetIsVipNetwork(v bool) *RequestNetworkInterfaceStruct {
	s.IsVipNetwork = &v
	return s
}

// SetNetworkId sets the NetworkId field's value.
func (s *RequestNetworkInterfaceStruct) SetNetworkId(v string) *RequestNetworkInterfaceStruct {
	s.NetworkId = &v
	return s
}

// SetNetworkName sets the NetworkName field's value.
func (s *RequestNetworkInterfaceStruct) SetNetworkName(v string) *RequestNetworkInterfaceStruct {
	s.NetworkName = &v
	return s
}

// SetRequestSecurityGroupId sets the RequestSecurityGroupId field's value.
func (s *RequestNetworkInterfaceStruct) SetRequestSecurityGroupId(v []*string) *RequestNetworkInterfaceStruct {
	s.RequestSecurityGroupId = v
	return s
}

type RequestNiftyIPsecConfigurationStruct struct {
	_ struct{} `type:"structure"`

	EncryptionAlgorithm *string `locationName:"EncryptionAlgorithm" type:"string"`

	HashAlgorithm *string `locationName:"HashAlgorithm" type:"string"`

	PreSharedKey *string `locationName:"PreSharedKey" type:"string"`
}

// String returns the string representation
func (s RequestNiftyIPsecConfigurationStruct) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RequestNiftyIPsecConfigurationStruct) GoString() string {
	return s.String()
}

// SetEncryptionAlgorithm sets the EncryptionAlgorithm field's value.
func (s *RequestNiftyIPsecConfigurationStruct) SetEncryptionAlgorithm(v string) *RequestNiftyIPsecConfigurationStruct {
	s.EncryptionAlgorithm = &v
	return s
}

// SetHashAlgorithm sets the HashAlgorithm field's value.
func (s *RequestNiftyIPsecConfigurationStruct) SetHashAlgorithm(v string) *RequestNiftyIPsecConfigurationStruct {
	s.HashAlgorithm = &v
	return s
}

// SetPreSharedKey sets the PreSharedKey field's value.
func (s *RequestNiftyIPsecConfigurationStruct) SetPreSharedKey(v string) *RequestNiftyIPsecConfigurationStruct {
	s.PreSharedKey = &v
	return s
}

type RequestNiftyIpsecConfigurationStruct struct {
	_ struct{} `type:"structure"`

	InternetKeyExchange *string `locationName:"InternetKeyExchange" type:"string"`
}

// String returns the string representation
func (s RequestNiftyIpsecConfigurationStruct) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RequestNiftyIpsecConfigurationStruct) GoString() string {
	return s.String()
}

// SetInternetKeyExchange sets the InternetKeyExchange field's value.
func (s *RequestNiftyIpsecConfigurationStruct) SetInternetKeyExchange(v string) *RequestNiftyIpsecConfigurationStruct {
	s.InternetKeyExchange = &v
	return s
}

type RequestNiftyNetworkStruct struct {
	_ struct{} `type:"structure"`

	IpAddress *string `locationName:"IpAddress" type:"string"`

	NetworkId *string `locationName:"NetworkId" type:"string"`

	NetworkName *string `locationName:"NetworkName" type:"string"`
}

// String returns the string representation
func (s RequestNiftyNetworkStruct) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RequestNiftyNetworkStruct) GoString() string {
	return s.String()
}

// SetIpAddress sets the IpAddress field's value.
func (s *RequestNiftyNetworkStruct) SetIpAddress(v string) *RequestNiftyNetworkStruct {
	s.IpAddress = &v
	return s
}

// SetNetworkId sets the NetworkId field's value.
func (s *RequestNiftyNetworkStruct) SetNetworkId(v string) *RequestNiftyNetworkStruct {
	s.NetworkId = &v
	return s
}

// SetNetworkName sets the NetworkName field's value.
func (s *RequestNiftyNetworkStruct) SetNetworkName(v string) *RequestNiftyNetworkStruct {
	s.NetworkName = &v
	return s
}

type RequestNiftyTunnelStruct struct {
	_ struct{} `type:"structure"`

	DestinationPort *string `locationName:"DestinationPort" type:"string"`

	Encapsulation *string `locationName:"Encapsulation" type:"string"`

	Mode *string `locationName:"Mode" type:"string"`

	PeerSessionId *string `locationName:"PeerSessionId" type:"string"`

	PeerTunnelId *string `locationName:"PeerTunnelId" type:"string"`

	SessionId *string `locationName:"SessionId" type:"string"`

	SourcePort *string `locationName:"SourcePort" type:"string"`

	TunnelId *string `locationName:"TunnelId" type:"string"`

	Type *string `locationName:"Type" type:"string"`
}

// String returns the string representation
func (s RequestNiftyTunnelStruct) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RequestNiftyTunnelStruct) GoString() string {
	return s.String()
}

// SetDestinationPort sets the DestinationPort field's value.
func (s *RequestNiftyTunnelStruct) SetDestinationPort(v string) *RequestNiftyTunnelStruct {
	s.DestinationPort = &v
	return s
}

// SetEncapsulation sets the Encapsulation field's value.
func (s *RequestNiftyTunnelStruct) SetEncapsulation(v string) *RequestNiftyTunnelStruct {
	s.Encapsulation = &v
	return s
}

// SetMode sets the Mode field's value.
func (s *RequestNiftyTunnelStruct) SetMode(v string) *RequestNiftyTunnelStruct {
	s.Mode = &v
	return s
}

// SetPeerSessionId sets the PeerSessionId field's value.
func (s *RequestNiftyTunnelStruct) SetPeerSessionId(v string) *RequestNiftyTunnelStruct {
	s.PeerSessionId = &v
	return s
}

// SetPeerTunnelId sets the PeerTunnelId field's value.
func (s *RequestNiftyTunnelStruct) SetPeerTunnelId(v string) *RequestNiftyTunnelStruct {
	s.PeerTunnelId = &v
	return s
}

// SetSessionId sets the SessionId field's value.
func (s *RequestNiftyTunnelStruct) SetSessionId(v string) *RequestNiftyTunnelStruct {
	s.SessionId = &v
	return s
}

// SetSourcePort sets the SourcePort field's value.
func (s *RequestNiftyTunnelStruct) SetSourcePort(v string) *RequestNiftyTunnelStruct {
	s.SourcePort = &v
	return s
}

// SetTunnelId sets the TunnelId field's value.
func (s *RequestNiftyTunnelStruct) SetTunnelId(v string) *RequestNiftyTunnelStruct {
	s.TunnelId = &v
	return s
}

// SetType sets the Type field's value.
func (s *RequestNiftyTunnelStruct) SetType(v string) *RequestNiftyTunnelStruct {
	s.Type = &v
	return s
}

type RequestOptionStruct struct {
	_ struct{} `type:"structure"`

	NameServer *string `locationName:"NameServer" type:"string"`
}

// String returns the string representation
func (s RequestOptionStruct) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RequestOptionStruct) GoString() string {
	return s.String()
}

// SetNameServer sets the NameServer field's value.
func (s *RequestOptionStruct) SetNameServer(v string) *RequestOptionStruct {
	s.NameServer = &v
	return s
}

type RequestOutboundInterfaceStruct struct {
	_ struct{} `type:"structure"`

	NetworkId *string `locationName:"NetworkId" type:"string"`

	NetworkName *string `locationName:"NetworkName" type:"string"`
}

// String returns the string representation
func (s RequestOutboundInterfaceStruct) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RequestOutboundInterfaceStruct) GoString() string {
	return s.String()
}

// SetNetworkId sets the NetworkId field's value.
func (s *RequestOutboundInterfaceStruct) SetNetworkId(v string) *RequestOutboundInterfaceStruct {
	s.NetworkId = &v
	return s
}

// SetNetworkName sets the NetworkName field's value.
func (s *RequestOutboundInterfaceStruct) SetNetworkName(v string) *RequestOutboundInterfaceStruct {
	s.NetworkName = &v
	return s
}

type RequestPlacementStruct struct {
	_ struct{} `type:"structure"`

	AvailabilityZone *string `locationName:"AvailabilityZone" type:"string"`

	RegionName *string `locationName:"RegionName" type:"string"`
}

// String returns the string representation
func (s RequestPlacementStruct) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RequestPlacementStruct) GoString() string {
	return s.String()
}

// SetAvailabilityZone sets the AvailabilityZone field's value.
func (s *RequestPlacementStruct) SetAvailabilityZone(v string) *RequestPlacementStruct {
	s.AvailabilityZone = &v
	return s
}

// SetRegionName sets the RegionName field's value.
func (s *RequestPlacementStruct) SetRegionName(v string) *RequestPlacementStruct {
	s.RegionName = &v
	return s
}

type RequestRangeStruct struct {
	_ struct{} `type:"structure"`

	All *bool `locationName:"All" type:"boolean"`

	EndNumber *int64 `locationName:"EndNumber" type:"integer"`

	StartNumber *int64 `locationName:"StartNumber" type:"integer"`
}

// String returns the string representation
func (s RequestRangeStruct) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RequestRangeStruct) GoString() string {
	return s.String()
}

// SetAll sets the All field's value.
func (s *RequestRangeStruct) SetAll(v bool) *RequestRangeStruct {
	s.All = &v
	return s
}

// SetEndNumber sets the EndNumber field's value.
func (s *RequestRangeStruct) SetEndNumber(v int64) *RequestRangeStruct {
	s.EndNumber = &v
	return s
}

// SetStartNumber sets the StartNumber field's value.
func (s *RequestRangeStruct) SetStartNumber(v int64) *RequestRangeStruct {
	s.StartNumber = &v
	return s
}

type RequestRouterSetStruct struct {
	_ struct{} `type:"structure"`

	RouterId *string `locationName:"RouterId" type:"string"`

	RouterName *string `locationName:"RouterName" type:"string"`
}

// String returns the string representation
func (s RequestRouterSetStruct) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RequestRouterSetStruct) GoString() string {
	return s.String()
}

// SetRouterId sets the RouterId field's value.
func (s *RequestRouterSetStruct) SetRouterId(v string) *RequestRouterSetStruct {
	s.RouterId = &v
	return s
}

// SetRouterName sets the RouterName field's value.
func (s *RequestRouterSetStruct) SetRouterName(v string) *RequestRouterSetStruct {
	s.RouterName = &v
	return s
}

type RequestRouterStruct struct {
	_ struct{} `type:"structure"`

	NiftyReboot *string `locationName:"NiftyReboot" type:"string"`

	RouterId *string `locationName:"RouterId" type:"string"`

	RouterName *string `locationName:"RouterName" type:"string"`
}

// String returns the string representation
func (s RequestRouterStruct) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RequestRouterStruct) GoString() string {
	return s.String()
}

// SetNiftyReboot sets the NiftyReboot field's value.
func (s *RequestRouterStruct) SetNiftyReboot(v string) *RequestRouterStruct {
	s.NiftyReboot = &v
	return s
}

// SetRouterId sets the RouterId field's value.
func (s *RequestRouterStruct) SetRouterId(v string) *RequestRouterStruct {
	s.RouterId = &v
	return s
}

// SetRouterName sets the RouterName field's value.
func (s *RequestRouterStruct) SetRouterName(v string) *RequestRouterStruct {
	s.RouterName = &v
	return s
}

type RequestRuleStruct struct {
	_ struct{} `type:"structure"`

	BreachDuration *int64 `locationName:"BreachDuration" type:"integer"`

	DataType *string `locationName:"DataType" type:"string"`

	FromDate *string `locationName:"FromDate" type:"string"`

	FunctionName *string `locationName:"FunctionName" type:"string"`

	RuleName *string `locationName:"RuleName" type:"string"`

	Threshold *float64 `locationName:"Threshold" type:"double"`

	ToDate *string `locationName:"ToDate" type:"string"`

	UpperLowerCondition *string `locationName:"UpperLowerCondition" type:"string"`
}

// String returns the string representation
func (s RequestRuleStruct) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RequestRuleStruct) GoString() string {
	return s.String()
}

// SetBreachDuration sets the BreachDuration field's value.
func (s *RequestRuleStruct) SetBreachDuration(v int64) *RequestRuleStruct {
	s.BreachDuration = &v
	return s
}

// SetDataType sets the DataType field's value.
func (s *RequestRuleStruct) SetDataType(v string) *RequestRuleStruct {
	s.DataType = &v
	return s
}

// SetFromDate sets the FromDate field's value.
func (s *RequestRuleStruct) SetFromDate(v string) *RequestRuleStruct {
	s.FromDate = &v
	return s
}

// SetFunctionName sets the FunctionName field's value.
func (s *RequestRuleStruct) SetFunctionName(v string) *RequestRuleStruct {
	s.FunctionName = &v
	return s
}

// SetRuleName sets the RuleName field's value.
func (s *RequestRuleStruct) SetRuleName(v string) *RequestRuleStruct {
	s.RuleName = &v
	return s
}

// SetThreshold sets the Threshold field's value.
func (s *RequestRuleStruct) SetThreshold(v float64) *RequestRuleStruct {
	s.Threshold = &v
	return s
}

// SetToDate sets the ToDate field's value.
func (s *RequestRuleStruct) SetToDate(v string) *RequestRuleStruct {
	s.ToDate = &v
	return s
}

// SetUpperLowerCondition sets the UpperLowerCondition field's value.
func (s *RequestRuleStruct) SetUpperLowerCondition(v string) *RequestRuleStruct {
	s.UpperLowerCondition = &v
	return s
}

type RequestScalingScheduleStruct struct {
	_ struct{} `type:"structure"`

	RequestDDayStruct *RequestDDayStruct `locationName:"DDay" type:"structure"`

	RequestDayStruct *RequestDayStruct `locationName:"Day" type:"structure"`

	RequestMonthStruct *RequestMonthStruct `locationName:"Month" type:"structure"`

	RequestTimeZoneStruct *RequestTimeZoneStruct `locationName:"TimeZone" type:"structure"`
}

// String returns the string representation
func (s RequestScalingScheduleStruct) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RequestScalingScheduleStruct) GoString() string {
	return s.String()
}

// SetRequestDDayStruct sets the RequestDDayStruct field's value.
func (s *RequestScalingScheduleStruct) SetRequestDDayStruct(v *RequestDDayStruct) *RequestScalingScheduleStruct {
	s.RequestDDayStruct = v
	return s
}

// SetRequestDayStruct sets the RequestDayStruct field's value.
func (s *RequestScalingScheduleStruct) SetRequestDayStruct(v *RequestDayStruct) *RequestScalingScheduleStruct {
	s.RequestDayStruct = v
	return s
}

// SetRequestMonthStruct sets the RequestMonthStruct field's value.
func (s *RequestScalingScheduleStruct) SetRequestMonthStruct(v *RequestMonthStruct) *RequestScalingScheduleStruct {
	s.RequestMonthStruct = v
	return s
}

// SetRequestTimeZoneStruct sets the RequestTimeZoneStruct field's value.
func (s *RequestScalingScheduleStruct) SetRequestTimeZoneStruct(v *RequestTimeZoneStruct) *RequestScalingScheduleStruct {
	s.RequestTimeZoneStruct = v
	return s
}

type RequestScalingTriggerStruct struct {
	_ struct{} `type:"structure"`

	BreachDuration *int64 `locationName:"BreachDuration" type:"integer"`

	Resource *string `locationName:"Resource" type:"string"`

	UpperThreshold *float64 `locationName:"UpperThreshold" type:"double"`
}

// String returns the string representation
func (s RequestScalingTriggerStruct) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RequestScalingTriggerStruct) GoString() string {
	return s.String()
}

// SetBreachDuration sets the BreachDuration field's value.
func (s *RequestScalingTriggerStruct) SetBreachDuration(v int64) *RequestScalingTriggerStruct {
	s.BreachDuration = &v
	return s
}

// SetResource sets the Resource field's value.
func (s *RequestScalingTriggerStruct) SetResource(v string) *RequestScalingTriggerStruct {
	s.Resource = &v
	return s
}

// SetUpperThreshold sets the UpperThreshold field's value.
func (s *RequestScalingTriggerStruct) SetUpperThreshold(v float64) *RequestScalingTriggerStruct {
	s.UpperThreshold = &v
	return s
}

type RequestSessionStickinessPolicyUpdateStruct struct {
	_ struct{} `type:"structure"`

	Enable *bool `locationName:"Enable" type:"boolean"`

	ExpirationPeriod *int64 `locationName:"ExpirationPeriod" type:"integer"`
}

// String returns the string representation
func (s RequestSessionStickinessPolicyUpdateStruct) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RequestSessionStickinessPolicyUpdateStruct) GoString() string {
	return s.String()
}

// SetEnable sets the Enable field's value.
func (s *RequestSessionStickinessPolicyUpdateStruct) SetEnable(v bool) *RequestSessionStickinessPolicyUpdateStruct {
	s.Enable = &v
	return s
}

// SetExpirationPeriod sets the ExpirationPeriod field's value.
func (s *RequestSessionStickinessPolicyUpdateStruct) SetExpirationPeriod(v int64) *RequestSessionStickinessPolicyUpdateStruct {
	s.ExpirationPeriod = &v
	return s
}

type RequestSessionStruct struct {
	_ struct{} `type:"structure"`

	RequestStickinessPolicyStruct *RequestStickinessPolicyStruct `locationName:"StickinessPolicy" type:"structure"`
}

// String returns the string representation
func (s RequestSessionStruct) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RequestSessionStruct) GoString() string {
	return s.String()
}

// SetRequestStickinessPolicyStruct sets the RequestStickinessPolicyStruct field's value.
func (s *RequestSessionStruct) SetRequestStickinessPolicyStruct(v *RequestStickinessPolicyStruct) *RequestSessionStruct {
	s.RequestStickinessPolicyStruct = v
	return s
}

type RequestSorryPageStruct struct {
	_ struct{} `type:"structure"`

	Enable *bool `locationName:"Enable" type:"boolean"`

	RedirectUrl *string `locationName:"RedirectUrl" type:"string"`
}

// String returns the string representation
func (s RequestSorryPageStruct) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RequestSorryPageStruct) GoString() string {
	return s.String()
}

// SetEnable sets the Enable field's value.
func (s *RequestSorryPageStruct) SetEnable(v bool) *RequestSorryPageStruct {
	s.Enable = &v
	return s
}

// SetRedirectUrl sets the RedirectUrl field's value.
func (s *RequestSorryPageStruct) SetRedirectUrl(v string) *RequestSorryPageStruct {
	s.RedirectUrl = &v
	return s
}

type RequestSorryPageUpdateStruct struct {
	_ struct{} `type:"structure"`

	Enable *bool `locationName:"Enable" type:"boolean"`

	StatusCode *int64 `locationName:"StatusCode" type:"integer"`
}

// String returns the string representation
func (s RequestSorryPageUpdateStruct) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RequestSorryPageUpdateStruct) GoString() string {
	return s.String()
}

// SetEnable sets the Enable field's value.
func (s *RequestSorryPageUpdateStruct) SetEnable(v bool) *RequestSorryPageUpdateStruct {
	s.Enable = &v
	return s
}

// SetStatusCode sets the StatusCode field's value.
func (s *RequestSorryPageUpdateStruct) SetStatusCode(v int64) *RequestSorryPageUpdateStruct {
	s.StatusCode = &v
	return s
}

type RequestSourceStruct struct {
	_ struct{} `type:"structure"`

	Address *string `locationName:"Address" type:"string"`

	Port *int64 `locationName:"Port" type:"integer"`
}

// String returns the string representation
func (s RequestSourceStruct) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RequestSourceStruct) GoString() string {
	return s.String()
}

// SetAddress sets the Address field's value.
func (s *RequestSourceStruct) SetAddress(v string) *RequestSourceStruct {
	s.Address = &v
	return s
}

// SetPort sets the Port field's value.
func (s *RequestSourceStruct) SetPort(v int64) *RequestSourceStruct {
	s.Port = &v
	return s
}

type RequestStickinessPolicyStruct struct {
	_ struct{} `type:"structure"`

	Enable *bool `locationName:"Enable" type:"boolean"`

	ExpirationPeriod *int64 `locationName:"ExpirationPeriod" type:"integer"`

	Method *string `locationName:"Method" type:"string"`
}

// String returns the string representation
func (s RequestStickinessPolicyStruct) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RequestStickinessPolicyStruct) GoString() string {
	return s.String()
}

// SetEnable sets the Enable field's value.
func (s *RequestStickinessPolicyStruct) SetEnable(v bool) *RequestStickinessPolicyStruct {
	s.Enable = &v
	return s
}

// SetExpirationPeriod sets the ExpirationPeriod field's value.
func (s *RequestStickinessPolicyStruct) SetExpirationPeriod(v int64) *RequestStickinessPolicyStruct {
	s.ExpirationPeriod = &v
	return s
}

// SetMethod sets the Method field's value.
func (s *RequestStickinessPolicyStruct) SetMethod(v string) *RequestStickinessPolicyStruct {
	s.Method = &v
	return s
}

type RequestTimeZoneStruct struct {
	_ struct{} `type:"structure"`

	EndingTimeZone *string `locationName:"EndingTimeZone" type:"string"`

	StartingTimeZone *string `locationName:"StartingTimeZone" type:"string"`
}

// String returns the string representation
func (s RequestTimeZoneStruct) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RequestTimeZoneStruct) GoString() string {
	return s.String()
}

// SetEndingTimeZone sets the EndingTimeZone field's value.
func (s *RequestTimeZoneStruct) SetEndingTimeZone(v string) *RequestTimeZoneStruct {
	s.EndingTimeZone = &v
	return s
}

// SetStartingTimeZone sets the StartingTimeZone field's value.
func (s *RequestTimeZoneStruct) SetStartingTimeZone(v string) *RequestTimeZoneStruct {
	s.StartingTimeZone = &v
	return s
}

type RequestTranslationStruct struct {
	_ struct{} `type:"structure"`

	Address *string `locationName:"Address" type:"string"`

	Port *int64 `locationName:"Port" type:"integer"`
}

// String returns the string representation
func (s RequestTranslationStruct) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RequestTranslationStruct) GoString() string {
	return s.String()
}

// SetAddress sets the Address field's value.
func (s *RequestTranslationStruct) SetAddress(v string) *RequestTranslationStruct {
	s.Address = &v
	return s
}

// SetPort sets the Port field's value.
func (s *RequestTranslationStruct) SetPort(v int64) *RequestTranslationStruct {
	s.Port = &v
	return s
}

type RequestUsersStruct struct {
	_ struct{} `type:"structure"`

	UserId *string `locationName:"UserId" type:"string"`
}

// String returns the string representation
func (s RequestUsersStruct) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RequestUsersStruct) GoString() string {
	return s.String()
}

// SetUserId sets the UserId field's value.
func (s *RequestUsersStruct) SetUserId(v string) *RequestUsersStruct {
	s.UserId = &v
	return s
}

type RequestVpnGatewaySetStruct struct {
	_ struct{} `type:"structure"`

	NiftyVpnGatewayName *string `locationName:"NiftyVpnGatewayName" type:"string"`

	VpnGatewayId *string `locationName:"VpnGatewayId" type:"string"`
}

// String returns the string representation
func (s RequestVpnGatewaySetStruct) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RequestVpnGatewaySetStruct) GoString() string {
	return s.String()
}

// SetNiftyVpnGatewayName sets the NiftyVpnGatewayName field's value.
func (s *RequestVpnGatewaySetStruct) SetNiftyVpnGatewayName(v string) *RequestVpnGatewaySetStruct {
	s.NiftyVpnGatewayName = &v
	return s
}

// SetVpnGatewayId sets the VpnGatewayId field's value.
func (s *RequestVpnGatewaySetStruct) SetVpnGatewayId(v string) *RequestVpnGatewaySetStruct {
	s.VpnGatewayId = &v
	return s
}

type RequestVpnGatewayStruct struct {
	_ struct{} `type:"structure"`

	NiftyReboot *string `locationName:"NiftyReboot" type:"string"`

	NiftyVpnGatewayName *string `locationName:"NiftyVpnGatewayName" type:"string"`

	VpnGatewayId *string `locationName:"VpnGatewayId" type:"string"`
}

// String returns the string representation
func (s RequestVpnGatewayStruct) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RequestVpnGatewayStruct) GoString() string {
	return s.String()
}

// SetNiftyReboot sets the NiftyReboot field's value.
func (s *RequestVpnGatewayStruct) SetNiftyReboot(v string) *RequestVpnGatewayStruct {
	s.NiftyReboot = &v
	return s
}

// SetNiftyVpnGatewayName sets the NiftyVpnGatewayName field's value.
func (s *RequestVpnGatewayStruct) SetNiftyVpnGatewayName(v string) *RequestVpnGatewayStruct {
	s.NiftyVpnGatewayName = &v
	return s
}

// SetVpnGatewayId sets the VpnGatewayId field's value.
func (s *RequestVpnGatewayStruct) SetVpnGatewayId(v string) *RequestVpnGatewayStruct {
	s.VpnGatewayId = &v
	return s
}

type ReservationSetItem struct {
	_ struct{} `type:"structure"`

	AlarmCondition *string `locationName:"alarmCondition" type:"string"`

	AlarmDateHistorySet []*AlarmDateHistorySetItem `locationName:"alarmDateHistorySet" locationNameList:"item" type:"list"`

	AlarmRulesActivitiesSet []*AlarmRulesActivitiesSetItem `locationName:"alarmRulesActivitiesSet" locationNameList:"item" type:"list"`

	AlarmState *string `locationName:"alarmState" type:"string"`

	AlarmTargetsSet []*AlarmTargetsSetItem `locationName:"alarmTargetsSet" locationNameList:"item" type:"list"`

	CreatedTime *time.Time `locationName:"createdTime" type:"timestamp" timestampFormat:""`

	Description *string `locationName:"description" type:"string"`

	EmailAddressSet []*EmailAddressSetItem `locationName:"emailAddressSet" locationNameList:"item" type:"list"`

	FunctionName *string `locationName:"functionName" type:"string"`

	GroupSet []*GroupSetItem `locationName:"groupSet" locationNameList:"item" type:"list"`

	InstancesSet []*InstancesSetItem `locationName:"instancesSet" locationNameList:"item" type:"list"`

	OwnerId *string `locationName:"ownerId" type:"string"`

	ReservationId *string `locationName:"reservationId" type:"string"`

	RuleName *string `locationName:"ruleName" type:"string"`

	RuleSet []*RuleSetItem `locationName:"ruleSet" locationNameList:"item" type:"list"`

	Zone *string `locationName:"zone" type:"string"`
}

// String returns the string representation
func (s ReservationSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ReservationSetItem) GoString() string {
	return s.String()
}

// SetAlarmCondition sets the AlarmCondition field's value.
func (s *ReservationSetItem) SetAlarmCondition(v string) *ReservationSetItem {
	s.AlarmCondition = &v
	return s
}

// SetAlarmDateHistorySet sets the AlarmDateHistorySet field's value.
func (s *ReservationSetItem) SetAlarmDateHistorySet(v []*AlarmDateHistorySetItem) *ReservationSetItem {
	s.AlarmDateHistorySet = v
	return s
}

// SetAlarmRulesActivitiesSet sets the AlarmRulesActivitiesSet field's value.
func (s *ReservationSetItem) SetAlarmRulesActivitiesSet(v []*AlarmRulesActivitiesSetItem) *ReservationSetItem {
	s.AlarmRulesActivitiesSet = v
	return s
}

// SetAlarmState sets the AlarmState field's value.
func (s *ReservationSetItem) SetAlarmState(v string) *ReservationSetItem {
	s.AlarmState = &v
	return s
}

// SetAlarmTargetsSet sets the AlarmTargetsSet field's value.
func (s *ReservationSetItem) SetAlarmTargetsSet(v []*AlarmTargetsSetItem) *ReservationSetItem {
	s.AlarmTargetsSet = v
	return s
}

// SetCreatedTime sets the CreatedTime field's value.
func (s *ReservationSetItem) SetCreatedTime(v time.Time) *ReservationSetItem {
	s.CreatedTime = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *ReservationSetItem) SetDescription(v string) *ReservationSetItem {
	s.Description = &v
	return s
}

// SetEmailAddressSet sets the EmailAddressSet field's value.
func (s *ReservationSetItem) SetEmailAddressSet(v []*EmailAddressSetItem) *ReservationSetItem {
	s.EmailAddressSet = v
	return s
}

// SetFunctionName sets the FunctionName field's value.
func (s *ReservationSetItem) SetFunctionName(v string) *ReservationSetItem {
	s.FunctionName = &v
	return s
}

// SetGroupSet sets the GroupSet field's value.
func (s *ReservationSetItem) SetGroupSet(v []*GroupSetItem) *ReservationSetItem {
	s.GroupSet = v
	return s
}

// SetInstancesSet sets the InstancesSet field's value.
func (s *ReservationSetItem) SetInstancesSet(v []*InstancesSetItem) *ReservationSetItem {
	s.InstancesSet = v
	return s
}

// SetOwnerId sets the OwnerId field's value.
func (s *ReservationSetItem) SetOwnerId(v string) *ReservationSetItem {
	s.OwnerId = &v
	return s
}

// SetReservationId sets the ReservationId field's value.
func (s *ReservationSetItem) SetReservationId(v string) *ReservationSetItem {
	s.ReservationId = &v
	return s
}

// SetRuleName sets the RuleName field's value.
func (s *ReservationSetItem) SetRuleName(v string) *ReservationSetItem {
	s.RuleName = &v
	return s
}

// SetRuleSet sets the RuleSet field's value.
func (s *ReservationSetItem) SetRuleSet(v []*RuleSetItem) *ReservationSetItem {
	s.RuleSet = v
	return s
}

// SetZone sets the Zone field's value.
func (s *ReservationSetItem) SetZone(v string) *ReservationSetItem {
	s.Zone = &v
	return s
}

type ResourceInfo struct {
	_ struct{} `type:"structure"`

	AddDiskCount *int64 `locationName:"addDiskCount" type:"integer"`

	AddDiskTotalSize *int64 `locationName:"addDiskTotalSize" type:"integer"`

	AutoScaleCount *int64 `locationName:"autoScaleCount" type:"integer"`

	CustomizeImageCount *int64 `locationName:"customizeImageCount" type:"integer"`

	DynamicIpCount *int64 `locationName:"dynamicIpCount" type:"integer"`

	ElasticIpItemSet []*ElasticIpItemSetItem `locationName:"elasticIpItemSet" locationNameList:"item" type:"list"`

	ElasticLoadBalancerCount *int64 `locationName:"elasticLoadBalancerCount" type:"integer"`

	InstanceItemSet []*InstanceItemSetItem `locationName:"instanceItemSet" locationNameList:"item" type:"list"`

	LoadBalancerCount *int64 `locationName:"loadBalancerCount" type:"integer"`

	MonitoringRuleCount *int64 `locationName:"monitoringRuleCount" type:"integer"`

	NetworkFlowAmount *int64 `locationName:"networkFlowAmount" type:"integer"`

	PremiumSupportSet []*PremiumSupportSetItem `locationName:"premiumSupportSet" locationNameList:"item" type:"list"`

	PrivateLanClassicCount *int64 `locationName:"privateLanClassicCount" type:"integer"`

	PrivateLanCount *int64 `locationName:"privateLanCount" type:"integer"`

	RouterItemSet []*RouterItemSetItem `locationName:"routerItemSet" locationNameList:"item" type:"list"`

	SecurityGroupCount *int64 `locationName:"securityGroupCount" type:"integer"`

	SslCertCount *int64 `locationName:"sslCertCount" type:"integer"`

	VpnGatewayItemSet []*VpnGatewayItemSetItem `locationName:"vpnGatewayItemSet" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s ResourceInfo) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ResourceInfo) GoString() string {
	return s.String()
}

// SetAddDiskCount sets the AddDiskCount field's value.
func (s *ResourceInfo) SetAddDiskCount(v int64) *ResourceInfo {
	s.AddDiskCount = &v
	return s
}

// SetAddDiskTotalSize sets the AddDiskTotalSize field's value.
func (s *ResourceInfo) SetAddDiskTotalSize(v int64) *ResourceInfo {
	s.AddDiskTotalSize = &v
	return s
}

// SetAutoScaleCount sets the AutoScaleCount field's value.
func (s *ResourceInfo) SetAutoScaleCount(v int64) *ResourceInfo {
	s.AutoScaleCount = &v
	return s
}

// SetCustomizeImageCount sets the CustomizeImageCount field's value.
func (s *ResourceInfo) SetCustomizeImageCount(v int64) *ResourceInfo {
	s.CustomizeImageCount = &v
	return s
}

// SetDynamicIpCount sets the DynamicIpCount field's value.
func (s *ResourceInfo) SetDynamicIpCount(v int64) *ResourceInfo {
	s.DynamicIpCount = &v
	return s
}

// SetElasticIpItemSet sets the ElasticIpItemSet field's value.
func (s *ResourceInfo) SetElasticIpItemSet(v []*ElasticIpItemSetItem) *ResourceInfo {
	s.ElasticIpItemSet = v
	return s
}

// SetElasticLoadBalancerCount sets the ElasticLoadBalancerCount field's value.
func (s *ResourceInfo) SetElasticLoadBalancerCount(v int64) *ResourceInfo {
	s.ElasticLoadBalancerCount = &v
	return s
}

// SetInstanceItemSet sets the InstanceItemSet field's value.
func (s *ResourceInfo) SetInstanceItemSet(v []*InstanceItemSetItem) *ResourceInfo {
	s.InstanceItemSet = v
	return s
}

// SetLoadBalancerCount sets the LoadBalancerCount field's value.
func (s *ResourceInfo) SetLoadBalancerCount(v int64) *ResourceInfo {
	s.LoadBalancerCount = &v
	return s
}

// SetMonitoringRuleCount sets the MonitoringRuleCount field's value.
func (s *ResourceInfo) SetMonitoringRuleCount(v int64) *ResourceInfo {
	s.MonitoringRuleCount = &v
	return s
}

// SetNetworkFlowAmount sets the NetworkFlowAmount field's value.
func (s *ResourceInfo) SetNetworkFlowAmount(v int64) *ResourceInfo {
	s.NetworkFlowAmount = &v
	return s
}

// SetPremiumSupportSet sets the PremiumSupportSet field's value.
func (s *ResourceInfo) SetPremiumSupportSet(v []*PremiumSupportSetItem) *ResourceInfo {
	s.PremiumSupportSet = v
	return s
}

// SetPrivateLanClassicCount sets the PrivateLanClassicCount field's value.
func (s *ResourceInfo) SetPrivateLanClassicCount(v int64) *ResourceInfo {
	s.PrivateLanClassicCount = &v
	return s
}

// SetPrivateLanCount sets the PrivateLanCount field's value.
func (s *ResourceInfo) SetPrivateLanCount(v int64) *ResourceInfo {
	s.PrivateLanCount = &v
	return s
}

// SetRouterItemSet sets the RouterItemSet field's value.
func (s *ResourceInfo) SetRouterItemSet(v []*RouterItemSetItem) *ResourceInfo {
	s.RouterItemSet = v
	return s
}

// SetSecurityGroupCount sets the SecurityGroupCount field's value.
func (s *ResourceInfo) SetSecurityGroupCount(v int64) *ResourceInfo {
	s.SecurityGroupCount = &v
	return s
}

// SetSslCertCount sets the SslCertCount field's value.
func (s *ResourceInfo) SetSslCertCount(v int64) *ResourceInfo {
	s.SslCertCount = &v
	return s
}

// SetVpnGatewayItemSet sets the VpnGatewayItemSet field's value.
func (s *ResourceInfo) SetVpnGatewayItemSet(v []*VpnGatewayItemSetItem) *ResourceInfo {
	s.VpnGatewayItemSet = v
	return s
}

type ResponseMetadata struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"RequestId" type:"string"`
}

// String returns the string representation
func (s ResponseMetadata) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ResponseMetadata) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *ResponseMetadata) SetRequestId(v string) *ResponseMetadata {
	s.RequestId = &v
	return s
}

type RevokeSecurityGroupIngressInput struct {
	_ struct{} `type:"structure"`

	GroupName *string `locationName:"GroupName" type:"string"`

	IpPermissions []*RequestIpPermissionsStruct `locationName:"IpPermissions" type:"list"`
}

// String returns the string representation
func (s RevokeSecurityGroupIngressInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RevokeSecurityGroupIngressInput) GoString() string {
	return s.String()
}

// SetGroupName sets the GroupName field's value.
func (s *RevokeSecurityGroupIngressInput) SetGroupName(v string) *RevokeSecurityGroupIngressInput {
	s.GroupName = &v
	return s
}

// SetIpPermissions sets the IpPermissions field's value.
func (s *RevokeSecurityGroupIngressInput) SetIpPermissions(v []*RequestIpPermissionsStruct) *RevokeSecurityGroupIngressInput {
	s.IpPermissions = v
	return s
}

type RevokeSecurityGroupIngressOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s RevokeSecurityGroupIngressOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RevokeSecurityGroupIngressOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *RevokeSecurityGroupIngressOutput) SetRequestId(v string) *RevokeSecurityGroupIngressOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *RevokeSecurityGroupIngressOutput) SetReturn(v bool) *RevokeSecurityGroupIngressOutput {
	s.Return = &v
	return s
}

type RootDeviceName struct {
	_ struct{} `type:"structure"`

	Value *string `locationName:"value" type:"string"`
}

// String returns the string representation
func (s RootDeviceName) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RootDeviceName) GoString() string {
	return s.String()
}

// SetValue sets the Value field's value.
func (s *RootDeviceName) SetValue(v string) *RootDeviceName {
	s.Value = &v
	return s
}

type RouteSetItem struct {
	_ struct{} `type:"structure"`

	DestinationCidrBlock *string `locationName:"destinationCidrBlock" type:"string"`

	GatewayId *string `locationName:"gatewayId" type:"string"`

	InstanceId *string `locationName:"instanceId" type:"string"`

	InstanceOwnerId *string `locationName:"instanceOwnerId" type:"string"`

	IpAddress *string `locationName:"ipAddress" type:"string"`

	NetworkId *string `locationName:"networkId" type:"string"`

	NetworkInterfaceId *string `locationName:"networkInterfaceId" type:"string"`

	NetworkName *string `locationName:"networkName" type:"string"`

	State *string `locationName:"state" type:"string"`
}

// String returns the string representation
func (s RouteSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RouteSetItem) GoString() string {
	return s.String()
}

// SetDestinationCidrBlock sets the DestinationCidrBlock field's value.
func (s *RouteSetItem) SetDestinationCidrBlock(v string) *RouteSetItem {
	s.DestinationCidrBlock = &v
	return s
}

// SetGatewayId sets the GatewayId field's value.
func (s *RouteSetItem) SetGatewayId(v string) *RouteSetItem {
	s.GatewayId = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *RouteSetItem) SetInstanceId(v string) *RouteSetItem {
	s.InstanceId = &v
	return s
}

// SetInstanceOwnerId sets the InstanceOwnerId field's value.
func (s *RouteSetItem) SetInstanceOwnerId(v string) *RouteSetItem {
	s.InstanceOwnerId = &v
	return s
}

// SetIpAddress sets the IpAddress field's value.
func (s *RouteSetItem) SetIpAddress(v string) *RouteSetItem {
	s.IpAddress = &v
	return s
}

// SetNetworkId sets the NetworkId field's value.
func (s *RouteSetItem) SetNetworkId(v string) *RouteSetItem {
	s.NetworkId = &v
	return s
}

// SetNetworkInterfaceId sets the NetworkInterfaceId field's value.
func (s *RouteSetItem) SetNetworkInterfaceId(v string) *RouteSetItem {
	s.NetworkInterfaceId = &v
	return s
}

// SetNetworkName sets the NetworkName field's value.
func (s *RouteSetItem) SetNetworkName(v string) *RouteSetItem {
	s.NetworkName = &v
	return s
}

// SetState sets the State field's value.
func (s *RouteSetItem) SetState(v string) *RouteSetItem {
	s.State = &v
	return s
}

type RouteTable struct {
	_ struct{} `type:"structure"`

	RouteTableId *string `locationName:"routeTableId" type:"string"`

	TagSet []*TagSetItem `locationName:"tagSet" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s RouteTable) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RouteTable) GoString() string {
	return s.String()
}

// SetRouteTableId sets the RouteTableId field's value.
func (s *RouteTable) SetRouteTableId(v string) *RouteTable {
	s.RouteTableId = &v
	return s
}

// SetTagSet sets the TagSet field's value.
func (s *RouteTable) SetTagSet(v []*TagSetItem) *RouteTable {
	s.TagSet = v
	return s
}

type RouteTableSetItem struct {
	_ struct{} `type:"structure"`

	AssociationSet []*AssociationSetItem `locationName:"associationSet" locationNameList:"item" type:"list"`

	PropagatingVgwSet []*PropagatingVgwSetItem `locationName:"propagatingVgwSet" locationNameList:"item" type:"list"`

	RouteSet []*RouteSetItem `locationName:"routeSet" locationNameList:"item" type:"list"`

	RouteTableId *string `locationName:"routeTableId" type:"string"`

	TagSet []*TagSetItem `locationName:"tagSet" locationNameList:"item" type:"list"`

	VpcId *string `locationName:"vpcId" type:"string"`
}

// String returns the string representation
func (s RouteTableSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RouteTableSetItem) GoString() string {
	return s.String()
}

// SetAssociationSet sets the AssociationSet field's value.
func (s *RouteTableSetItem) SetAssociationSet(v []*AssociationSetItem) *RouteTableSetItem {
	s.AssociationSet = v
	return s
}

// SetPropagatingVgwSet sets the PropagatingVgwSet field's value.
func (s *RouteTableSetItem) SetPropagatingVgwSet(v []*PropagatingVgwSetItem) *RouteTableSetItem {
	s.PropagatingVgwSet = v
	return s
}

// SetRouteSet sets the RouteSet field's value.
func (s *RouteTableSetItem) SetRouteSet(v []*RouteSetItem) *RouteTableSetItem {
	s.RouteSet = v
	return s
}

// SetRouteTableId sets the RouteTableId field's value.
func (s *RouteTableSetItem) SetRouteTableId(v string) *RouteTableSetItem {
	s.RouteTableId = &v
	return s
}

// SetTagSet sets the TagSet field's value.
func (s *RouteTableSetItem) SetTagSet(v []*TagSetItem) *RouteTableSetItem {
	s.TagSet = v
	return s
}

// SetVpcId sets the VpcId field's value.
func (s *RouteTableSetItem) SetVpcId(v string) *RouteTableSetItem {
	s.VpcId = &v
	return s
}

type Router struct {
	_ struct{} `type:"structure"`

	AccountingType *string `locationName:"accountingType" type:"string"`

	AvailabilityZone *string `locationName:"availabilityZone" type:"string"`

	BackupInformation *BackupInformation `locationName:"backupInformation" type:"structure"`

	CreatedTime *time.Time `locationName:"createdTime" type:"timestamp" timestampFormat:""`

	Description *string `locationName:"description" type:"string"`

	NatTableAssociationId *string `locationName:"natTableAssociationId" type:"string"`

	NatTableId *string `locationName:"natTableId" type:"string"`

	NetworkInterfaceSet []*NetworkInterfaceSetItem `locationName:"networkInterfaceSet" locationNameList:"item" type:"list"`

	NextMonthAccountingType *string `locationName:"nextMonthAccountingType" type:"string"`

	RouteTableAssociationId *string `locationName:"routeTableAssociationId" type:"string"`

	RouteTableId *string `locationName:"routeTableId" type:"string"`

	RouterId *string `locationName:"routerId" type:"string"`

	RouterName *string `locationName:"routerName" type:"string"`

	State *string `locationName:"state" type:"string"`

	TagSet []*TagSetItem `locationName:"tagSet" locationNameList:"item" type:"list"`

	Type *string `locationName:"type" type:"string"`

	VersionInformation *VersionInformation `locationName:"versionInformation" type:"structure"`
}

// String returns the string representation
func (s Router) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s Router) GoString() string {
	return s.String()
}

// SetAccountingType sets the AccountingType field's value.
func (s *Router) SetAccountingType(v string) *Router {
	s.AccountingType = &v
	return s
}

// SetAvailabilityZone sets the AvailabilityZone field's value.
func (s *Router) SetAvailabilityZone(v string) *Router {
	s.AvailabilityZone = &v
	return s
}

// SetBackupInformation sets the BackupInformation field's value.
func (s *Router) SetBackupInformation(v *BackupInformation) *Router {
	s.BackupInformation = v
	return s
}

// SetCreatedTime sets the CreatedTime field's value.
func (s *Router) SetCreatedTime(v time.Time) *Router {
	s.CreatedTime = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *Router) SetDescription(v string) *Router {
	s.Description = &v
	return s
}

// SetNatTableAssociationId sets the NatTableAssociationId field's value.
func (s *Router) SetNatTableAssociationId(v string) *Router {
	s.NatTableAssociationId = &v
	return s
}

// SetNatTableId sets the NatTableId field's value.
func (s *Router) SetNatTableId(v string) *Router {
	s.NatTableId = &v
	return s
}

// SetNetworkInterfaceSet sets the NetworkInterfaceSet field's value.
func (s *Router) SetNetworkInterfaceSet(v []*NetworkInterfaceSetItem) *Router {
	s.NetworkInterfaceSet = v
	return s
}

// SetNextMonthAccountingType sets the NextMonthAccountingType field's value.
func (s *Router) SetNextMonthAccountingType(v string) *Router {
	s.NextMonthAccountingType = &v
	return s
}

// SetRouteTableAssociationId sets the RouteTableAssociationId field's value.
func (s *Router) SetRouteTableAssociationId(v string) *Router {
	s.RouteTableAssociationId = &v
	return s
}

// SetRouteTableId sets the RouteTableId field's value.
func (s *Router) SetRouteTableId(v string) *Router {
	s.RouteTableId = &v
	return s
}

// SetRouterId sets the RouterId field's value.
func (s *Router) SetRouterId(v string) *Router {
	s.RouterId = &v
	return s
}

// SetRouterName sets the RouterName field's value.
func (s *Router) SetRouterName(v string) *Router {
	s.RouterName = &v
	return s
}

// SetState sets the State field's value.
func (s *Router) SetState(v string) *Router {
	s.State = &v
	return s
}

// SetTagSet sets the TagSet field's value.
func (s *Router) SetTagSet(v []*TagSetItem) *Router {
	s.TagSet = v
	return s
}

// SetType sets the Type field's value.
func (s *Router) SetType(v string) *Router {
	s.Type = &v
	return s
}

// SetVersionInformation sets the VersionInformation field's value.
func (s *Router) SetVersionInformation(v *VersionInformation) *Router {
	s.VersionInformation = v
	return s
}

type RouterInfo struct {
	_ struct{} `type:"structure"`

	RouterMeasuredRateSet []*RouterMeasuredRateSetItem `locationName:"routerMeasuredRateSet" locationNameList:"item" type:"list"`

	RouterMonthlyRateSet []*RouterMonthlyRateSetItem `locationName:"routerMonthlyRateSet" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s RouterInfo) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RouterInfo) GoString() string {
	return s.String()
}

// SetRouterMeasuredRateSet sets the RouterMeasuredRateSet field's value.
func (s *RouterInfo) SetRouterMeasuredRateSet(v []*RouterMeasuredRateSetItem) *RouterInfo {
	s.RouterMeasuredRateSet = v
	return s
}

// SetRouterMonthlyRateSet sets the RouterMonthlyRateSet field's value.
func (s *RouterInfo) SetRouterMonthlyRateSet(v []*RouterMonthlyRateSetItem) *RouterInfo {
	s.RouterMonthlyRateSet = v
	return s
}

type RouterItemSetItem struct {
	_ struct{} `type:"structure"`

	Count *int64 `locationName:"count" type:"integer"`

	Type *string `locationName:"type" type:"string"`
}

// String returns the string representation
func (s RouterItemSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RouterItemSetItem) GoString() string {
	return s.String()
}

// SetCount sets the Count field's value.
func (s *RouterItemSetItem) SetCount(v int64) *RouterItemSetItem {
	s.Count = &v
	return s
}

// SetType sets the Type field's value.
func (s *RouterItemSetItem) SetType(v string) *RouterItemSetItem {
	s.Type = &v
	return s
}

type RouterMeasuredRateSetItem struct {
	_ struct{} `type:"structure"`

	Charge *int64 `locationName:"charge" type:"integer"`

	Type *string `locationName:"type" type:"string"`

	Unit *string `locationName:"unit" type:"string"`

	Value *int64 `locationName:"value" type:"integer"`
}

// String returns the string representation
func (s RouterMeasuredRateSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RouterMeasuredRateSetItem) GoString() string {
	return s.String()
}

// SetCharge sets the Charge field's value.
func (s *RouterMeasuredRateSetItem) SetCharge(v int64) *RouterMeasuredRateSetItem {
	s.Charge = &v
	return s
}

// SetType sets the Type field's value.
func (s *RouterMeasuredRateSetItem) SetType(v string) *RouterMeasuredRateSetItem {
	s.Type = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *RouterMeasuredRateSetItem) SetUnit(v string) *RouterMeasuredRateSetItem {
	s.Unit = &v
	return s
}

// SetValue sets the Value field's value.
func (s *RouterMeasuredRateSetItem) SetValue(v int64) *RouterMeasuredRateSetItem {
	s.Value = &v
	return s
}

type RouterMonthlyRateSetItem struct {
	_ struct{} `type:"structure"`

	Charge *int64 `locationName:"charge" type:"integer"`

	Type *string `locationName:"type" type:"string"`

	Unit *string `locationName:"unit" type:"string"`

	Value *int64 `locationName:"value" type:"integer"`
}

// String returns the string representation
func (s RouterMonthlyRateSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RouterMonthlyRateSetItem) GoString() string {
	return s.String()
}

// SetCharge sets the Charge field's value.
func (s *RouterMonthlyRateSetItem) SetCharge(v int64) *RouterMonthlyRateSetItem {
	s.Charge = &v
	return s
}

// SetType sets the Type field's value.
func (s *RouterMonthlyRateSetItem) SetType(v string) *RouterMonthlyRateSetItem {
	s.Type = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *RouterMonthlyRateSetItem) SetUnit(v string) *RouterMonthlyRateSetItem {
	s.Unit = &v
	return s
}

// SetValue sets the Value field's value.
func (s *RouterMonthlyRateSetItem) SetValue(v int64) *RouterMonthlyRateSetItem {
	s.Value = &v
	return s
}

type RouterNetworkInterfaceSetItem struct {
	_ struct{} `type:"structure"`

	DeviceIndex *int64 `locationName:"deviceIndex" type:"integer"`

	IpAddress *string `locationName:"ipAddress" type:"string"`

	NetworkId *string `locationName:"networkId" type:"string"`

	RouterId *string `locationName:"routerId" type:"string"`

	RouterName *string `locationName:"routerName" type:"string"`
}

// String returns the string representation
func (s RouterNetworkInterfaceSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RouterNetworkInterfaceSetItem) GoString() string {
	return s.String()
}

// SetDeviceIndex sets the DeviceIndex field's value.
func (s *RouterNetworkInterfaceSetItem) SetDeviceIndex(v int64) *RouterNetworkInterfaceSetItem {
	s.DeviceIndex = &v
	return s
}

// SetIpAddress sets the IpAddress field's value.
func (s *RouterNetworkInterfaceSetItem) SetIpAddress(v string) *RouterNetworkInterfaceSetItem {
	s.IpAddress = &v
	return s
}

// SetNetworkId sets the NetworkId field's value.
func (s *RouterNetworkInterfaceSetItem) SetNetworkId(v string) *RouterNetworkInterfaceSetItem {
	s.NetworkId = &v
	return s
}

// SetRouterId sets the RouterId field's value.
func (s *RouterNetworkInterfaceSetItem) SetRouterId(v string) *RouterNetworkInterfaceSetItem {
	s.RouterId = &v
	return s
}

// SetRouterName sets the RouterName field's value.
func (s *RouterNetworkInterfaceSetItem) SetRouterName(v string) *RouterNetworkInterfaceSetItem {
	s.RouterName = &v
	return s
}

type RouterSetItem struct {
	_ struct{} `type:"structure"`

	AccountingType *string `locationName:"accountingType" type:"string"`

	AvailabilityZone *string `locationName:"availabilityZone" type:"string"`

	CreatedTime *time.Time `locationName:"createdTime" type:"timestamp" timestampFormat:""`

	Description *string `locationName:"description" type:"string"`

	DeviceIndex *int64 `locationName:"deviceIndex" type:"integer"`

	GroupSet []*GroupSetItem `locationName:"groupSet" locationNameList:"item" type:"list"`

	IpAddress *string `locationName:"ipAddress" type:"string"`

	NatTableAssociationId *string `locationName:"natTableAssociationId" type:"string"`

	NatTableId *string `locationName:"natTableId" type:"string"`

	NetworkInterfaceSet []*NetworkInterfaceSetItem `locationName:"networkInterfaceSet" locationNameList:"item" type:"list"`

	NextMonthAccountingType *string `locationName:"nextMonthAccountingType" type:"string"`

	RouteTableAssociationId *string `locationName:"routeTableAssociationId" type:"string"`

	RouteTableId *string `locationName:"routeTableId" type:"string"`

	RouterId *string `locationName:"routerId" type:"string"`

	RouterName *string `locationName:"routerName" type:"string"`

	State *string `locationName:"state" type:"string"`

	TagSet []*TagSetItem `locationName:"tagSet" locationNameList:"item" type:"list"`

	Type *string `locationName:"type" type:"string"`
}

// String returns the string representation
func (s RouterSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RouterSetItem) GoString() string {
	return s.String()
}

// SetAccountingType sets the AccountingType field's value.
func (s *RouterSetItem) SetAccountingType(v string) *RouterSetItem {
	s.AccountingType = &v
	return s
}

// SetAvailabilityZone sets the AvailabilityZone field's value.
func (s *RouterSetItem) SetAvailabilityZone(v string) *RouterSetItem {
	s.AvailabilityZone = &v
	return s
}

// SetCreatedTime sets the CreatedTime field's value.
func (s *RouterSetItem) SetCreatedTime(v time.Time) *RouterSetItem {
	s.CreatedTime = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *RouterSetItem) SetDescription(v string) *RouterSetItem {
	s.Description = &v
	return s
}

// SetDeviceIndex sets the DeviceIndex field's value.
func (s *RouterSetItem) SetDeviceIndex(v int64) *RouterSetItem {
	s.DeviceIndex = &v
	return s
}

// SetGroupSet sets the GroupSet field's value.
func (s *RouterSetItem) SetGroupSet(v []*GroupSetItem) *RouterSetItem {
	s.GroupSet = v
	return s
}

// SetIpAddress sets the IpAddress field's value.
func (s *RouterSetItem) SetIpAddress(v string) *RouterSetItem {
	s.IpAddress = &v
	return s
}

// SetNatTableAssociationId sets the NatTableAssociationId field's value.
func (s *RouterSetItem) SetNatTableAssociationId(v string) *RouterSetItem {
	s.NatTableAssociationId = &v
	return s
}

// SetNatTableId sets the NatTableId field's value.
func (s *RouterSetItem) SetNatTableId(v string) *RouterSetItem {
	s.NatTableId = &v
	return s
}

// SetNetworkInterfaceSet sets the NetworkInterfaceSet field's value.
func (s *RouterSetItem) SetNetworkInterfaceSet(v []*NetworkInterfaceSetItem) *RouterSetItem {
	s.NetworkInterfaceSet = v
	return s
}

// SetNextMonthAccountingType sets the NextMonthAccountingType field's value.
func (s *RouterSetItem) SetNextMonthAccountingType(v string) *RouterSetItem {
	s.NextMonthAccountingType = &v
	return s
}

// SetRouteTableAssociationId sets the RouteTableAssociationId field's value.
func (s *RouterSetItem) SetRouteTableAssociationId(v string) *RouterSetItem {
	s.RouteTableAssociationId = &v
	return s
}

// SetRouteTableId sets the RouteTableId field's value.
func (s *RouterSetItem) SetRouteTableId(v string) *RouterSetItem {
	s.RouteTableId = &v
	return s
}

// SetRouterId sets the RouterId field's value.
func (s *RouterSetItem) SetRouterId(v string) *RouterSetItem {
	s.RouterId = &v
	return s
}

// SetRouterName sets the RouterName field's value.
func (s *RouterSetItem) SetRouterName(v string) *RouterSetItem {
	s.RouterName = &v
	return s
}

// SetState sets the State field's value.
func (s *RouterSetItem) SetState(v string) *RouterSetItem {
	s.State = &v
	return s
}

// SetTagSet sets the TagSet field's value.
func (s *RouterSetItem) SetTagSet(v []*TagSetItem) *RouterSetItem {
	s.TagSet = v
	return s
}

// SetType sets the Type field's value.
func (s *RouterSetItem) SetType(v string) *RouterSetItem {
	s.Type = &v
	return s
}

type Routes struct {
	_ struct{} `type:"structure"`

	DestinationCidrBlock *string `locationName:"destinationCidrBlock" type:"string"`

	Source *string `locationName:"source" type:"string"`

	State *string `locationName:"state" type:"string"`
}

// String returns the string representation
func (s Routes) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s Routes) GoString() string {
	return s.String()
}

// SetDestinationCidrBlock sets the DestinationCidrBlock field's value.
func (s *Routes) SetDestinationCidrBlock(v string) *Routes {
	s.DestinationCidrBlock = &v
	return s
}

// SetSource sets the Source field's value.
func (s *Routes) SetSource(v string) *Routes {
	s.Source = &v
	return s
}

// SetState sets the State field's value.
func (s *Routes) SetState(v string) *Routes {
	s.State = &v
	return s
}

type RuleSetItem struct {
	_ struct{} `type:"structure"`

	BreachDuration *int64 `locationName:"breachDuration" type:"integer"`

	DataType *string `locationName:"dataType" type:"string"`

	Threshold *float64 `locationName:"threshold" type:"double"`

	UpperLowerCondition *string `locationName:"upperLowerCondition" type:"string"`
}

// String returns the string representation
func (s RuleSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RuleSetItem) GoString() string {
	return s.String()
}

// SetBreachDuration sets the BreachDuration field's value.
func (s *RuleSetItem) SetBreachDuration(v int64) *RuleSetItem {
	s.BreachDuration = &v
	return s
}

// SetDataType sets the DataType field's value.
func (s *RuleSetItem) SetDataType(v string) *RuleSetItem {
	s.DataType = &v
	return s
}

// SetThreshold sets the Threshold field's value.
func (s *RuleSetItem) SetThreshold(v float64) *RuleSetItem {
	s.Threshold = &v
	return s
}

// SetUpperLowerCondition sets the UpperLowerCondition field's value.
func (s *RuleSetItem) SetUpperLowerCondition(v string) *RuleSetItem {
	s.UpperLowerCondition = &v
	return s
}

type RunInstancesInput struct {
	_ struct{} `type:"structure"`

	AccountingType *string `locationName:"AccountingType" type:"string"`

	Admin *string `locationName:"Admin" type:"string"`

	Agreement *bool `locationName:"Agreement" type:"boolean"`

	Description *string `locationName:"Description" type:"string"`

	DisableApiTermination *bool `locationName:"DisableApiTermination" type:"boolean"`

	ImageId *string `locationName:"ImageId" type:"string"`

	InstanceId *string `locationName:"InstanceId" type:"string"`

	InstanceType *string `locationName:"InstanceType" type:"string"`

	IpType *string `locationName:"IpType" type:"string"`

	KeyName *string `locationName:"KeyName" type:"string"`

	License []*RequestLicenseStruct `locationName:"License" type:"list"`

	NetworkInterface []*RequestNetworkInterfaceStruct `locationName:"NetworkInterface" type:"list"`

	Password *string `locationName:"Password" type:"string"`

	Placement *RequestPlacementStruct `locationName:"Placement" type:"structure"`

	PublicIp *string `locationName:"PublicIp" type:"string"`

	SecurityGroup []*string `locationName:"SecurityGroup" type:"list"`

	UserData *string `locationName:"UserData" type:"string"`
}

// String returns the string representation
func (s RunInstancesInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RunInstancesInput) GoString() string {
	return s.String()
}

// SetAccountingType sets the AccountingType field's value.
func (s *RunInstancesInput) SetAccountingType(v string) *RunInstancesInput {
	s.AccountingType = &v
	return s
}

// SetAdmin sets the Admin field's value.
func (s *RunInstancesInput) SetAdmin(v string) *RunInstancesInput {
	s.Admin = &v
	return s
}

// SetAgreement sets the Agreement field's value.
func (s *RunInstancesInput) SetAgreement(v bool) *RunInstancesInput {
	s.Agreement = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *RunInstancesInput) SetDescription(v string) *RunInstancesInput {
	s.Description = &v
	return s
}

// SetDisableApiTermination sets the DisableApiTermination field's value.
func (s *RunInstancesInput) SetDisableApiTermination(v bool) *RunInstancesInput {
	s.DisableApiTermination = &v
	return s
}

// SetImageId sets the ImageId field's value.
func (s *RunInstancesInput) SetImageId(v string) *RunInstancesInput {
	s.ImageId = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *RunInstancesInput) SetInstanceId(v string) *RunInstancesInput {
	s.InstanceId = &v
	return s
}

// SetInstanceType sets the InstanceType field's value.
func (s *RunInstancesInput) SetInstanceType(v string) *RunInstancesInput {
	s.InstanceType = &v
	return s
}

// SetIpType sets the IpType field's value.
func (s *RunInstancesInput) SetIpType(v string) *RunInstancesInput {
	s.IpType = &v
	return s
}

// SetKeyName sets the KeyName field's value.
func (s *RunInstancesInput) SetKeyName(v string) *RunInstancesInput {
	s.KeyName = &v
	return s
}

// SetLicense sets the License field's value.
func (s *RunInstancesInput) SetLicense(v []*RequestLicenseStruct) *RunInstancesInput {
	s.License = v
	return s
}

// SetNetworkInterface sets the NetworkInterface field's value.
func (s *RunInstancesInput) SetNetworkInterface(v []*RequestNetworkInterfaceStruct) *RunInstancesInput {
	s.NetworkInterface = v
	return s
}

// SetPassword sets the Password field's value.
func (s *RunInstancesInput) SetPassword(v string) *RunInstancesInput {
	s.Password = &v
	return s
}

// SetPlacement sets the Placement field's value.
func (s *RunInstancesInput) SetPlacement(v *RequestPlacementStruct) *RunInstancesInput {
	s.Placement = v
	return s
}

// SetPublicIp sets the PublicIp field's value.
func (s *RunInstancesInput) SetPublicIp(v string) *RunInstancesInput {
	s.PublicIp = &v
	return s
}

// SetSecurityGroup sets the SecurityGroup field's value.
func (s *RunInstancesInput) SetSecurityGroup(v []*string) *RunInstancesInput {
	s.SecurityGroup = v
	return s
}

// SetUserData sets the UserData field's value.
func (s *RunInstancesInput) SetUserData(v string) *RunInstancesInput {
	s.UserData = &v
	return s
}

type RunInstancesOutput struct {
	_ struct{} `type:"structure"`

	GroupSet []*GroupSetItem `locationName:"groupSet" locationNameList:"item" type:"list"`

	InstancesSet []*InstancesSetItem `locationName:"instancesSet" locationNameList:"item" type:"list"`

	OwnerId *string `locationName:"ownerId" type:"string"`

	RequestId *string `locationName:"requestId" type:"string"`

	RequesterId *string `locationName:"requesterId" type:"string"`

	ReservationId *string `locationName:"reservationId" type:"string"`
}

// String returns the string representation
func (s RunInstancesOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RunInstancesOutput) GoString() string {
	return s.String()
}

// SetGroupSet sets the GroupSet field's value.
func (s *RunInstancesOutput) SetGroupSet(v []*GroupSetItem) *RunInstancesOutput {
	s.GroupSet = v
	return s
}

// SetInstancesSet sets the InstancesSet field's value.
func (s *RunInstancesOutput) SetInstancesSet(v []*InstancesSetItem) *RunInstancesOutput {
	s.InstancesSet = v
	return s
}

// SetOwnerId sets the OwnerId field's value.
func (s *RunInstancesOutput) SetOwnerId(v string) *RunInstancesOutput {
	s.OwnerId = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *RunInstancesOutput) SetRequestId(v string) *RunInstancesOutput {
	s.RequestId = &v
	return s
}

// SetRequesterId sets the RequesterId field's value.
func (s *RunInstancesOutput) SetRequesterId(v string) *RunInstancesOutput {
	s.RequesterId = &v
	return s
}

// SetReservationId sets the ReservationId field's value.
func (s *RunInstancesOutput) SetReservationId(v string) *RunInstancesOutput {
	s.ReservationId = &v
	return s
}

type RunningInstanceMeasuredRateSetItem struct {
	_ struct{} `type:"structure"`

	Charge *int64 `locationName:"charge" type:"integer"`

	Type *string `locationName:"type" type:"string"`

	Unit *string `locationName:"unit" type:"string"`

	Value *int64 `locationName:"value" type:"integer"`
}

// String returns the string representation
func (s RunningInstanceMeasuredRateSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RunningInstanceMeasuredRateSetItem) GoString() string {
	return s.String()
}

// SetCharge sets the Charge field's value.
func (s *RunningInstanceMeasuredRateSetItem) SetCharge(v int64) *RunningInstanceMeasuredRateSetItem {
	s.Charge = &v
	return s
}

// SetType sets the Type field's value.
func (s *RunningInstanceMeasuredRateSetItem) SetType(v string) *RunningInstanceMeasuredRateSetItem {
	s.Type = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *RunningInstanceMeasuredRateSetItem) SetUnit(v string) *RunningInstanceMeasuredRateSetItem {
	s.Unit = &v
	return s
}

// SetValue sets the Value field's value.
func (s *RunningInstanceMeasuredRateSetItem) SetValue(v int64) *RunningInstanceMeasuredRateSetItem {
	s.Value = &v
	return s
}

type RunningScaleOutInstanceSetItem struct {
	_ struct{} `type:"structure"`

	Charge *int64 `locationName:"charge" type:"integer"`

	Type *string `locationName:"type" type:"string"`

	Unit *string `locationName:"unit" type:"string"`

	Value *int64 `locationName:"value" type:"integer"`
}

// String returns the string representation
func (s RunningScaleOutInstanceSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RunningScaleOutInstanceSetItem) GoString() string {
	return s.String()
}

// SetCharge sets the Charge field's value.
func (s *RunningScaleOutInstanceSetItem) SetCharge(v int64) *RunningScaleOutInstanceSetItem {
	s.Charge = &v
	return s
}

// SetType sets the Type field's value.
func (s *RunningScaleOutInstanceSetItem) SetType(v string) *RunningScaleOutInstanceSetItem {
	s.Type = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *RunningScaleOutInstanceSetItem) SetUnit(v string) *RunningScaleOutInstanceSetItem {
	s.Unit = &v
	return s
}

// SetValue sets the Value field's value.
func (s *RunningScaleOutInstanceSetItem) SetValue(v int64) *RunningScaleOutInstanceSetItem {
	s.Value = &v
	return s
}

type RunningScaleOutOsSetItem struct {
	_ struct{} `type:"structure"`

	Charge *int64 `locationName:"charge" type:"integer"`

	Type *string `locationName:"type" type:"string"`

	Unit *string `locationName:"unit" type:"string"`

	Value *int64 `locationName:"value" type:"integer"`
}

// String returns the string representation
func (s RunningScaleOutOsSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RunningScaleOutOsSetItem) GoString() string {
	return s.String()
}

// SetCharge sets the Charge field's value.
func (s *RunningScaleOutOsSetItem) SetCharge(v int64) *RunningScaleOutOsSetItem {
	s.Charge = &v
	return s
}

// SetType sets the Type field's value.
func (s *RunningScaleOutOsSetItem) SetType(v string) *RunningScaleOutOsSetItem {
	s.Type = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *RunningScaleOutOsSetItem) SetUnit(v string) *RunningScaleOutOsSetItem {
	s.Unit = &v
	return s
}

// SetValue sets the Value field's value.
func (s *RunningScaleOutOsSetItem) SetValue(v int64) *RunningScaleOutOsSetItem {
	s.Value = &v
	return s
}

type ScheduleSetItem struct {
	_ struct{} `type:"structure"`

	DDay *DDay `locationName:"dDay" type:"structure"`

	Day *Day `locationName:"day" type:"structure"`

	Month *Month `locationName:"month" type:"structure"`

	TimeZone *TimeZone `locationName:"timeZone" type:"structure"`
}

// String returns the string representation
func (s ScheduleSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ScheduleSetItem) GoString() string {
	return s.String()
}

// SetDDay sets the DDay field's value.
func (s *ScheduleSetItem) SetDDay(v *DDay) *ScheduleSetItem {
	s.DDay = v
	return s
}

// SetDay sets the Day field's value.
func (s *ScheduleSetItem) SetDay(v *Day) *ScheduleSetItem {
	s.Day = v
	return s
}

// SetMonth sets the Month field's value.
func (s *ScheduleSetItem) SetMonth(v *Month) *ScheduleSetItem {
	s.Month = v
	return s
}

// SetTimeZone sets the TimeZone field's value.
func (s *ScheduleSetItem) SetTimeZone(v *TimeZone) *ScheduleSetItem {
	s.TimeZone = v
	return s
}

type SecureNetInfo struct {
	_ struct{} `type:"structure"`

	SecureNetMonthlyRate *SecureNetMonthlyRate `locationName:"secureNetMonthlyRate" type:"structure"`

	VpnConnectMeasuredRateSet []*VpnConnectMeasuredRateSetItem `locationName:"vpnConnectMeasuredRateSet" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s SecureNetInfo) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s SecureNetInfo) GoString() string {
	return s.String()
}

// SetSecureNetMonthlyRate sets the SecureNetMonthlyRate field's value.
func (s *SecureNetInfo) SetSecureNetMonthlyRate(v *SecureNetMonthlyRate) *SecureNetInfo {
	s.SecureNetMonthlyRate = v
	return s
}

// SetVpnConnectMeasuredRateSet sets the VpnConnectMeasuredRateSet field's value.
func (s *SecureNetInfo) SetVpnConnectMeasuredRateSet(v []*VpnConnectMeasuredRateSetItem) *SecureNetInfo {
	s.VpnConnectMeasuredRateSet = v
	return s
}

type SecureNetMonthlyRate struct {
	_ struct{} `type:"structure"`

	Charge *int64 `locationName:"charge" type:"integer"`

	Type *string `locationName:"type" type:"string"`

	Unit *string `locationName:"unit" type:"string"`

	Value *int64 `locationName:"value" type:"integer"`
}

// String returns the string representation
func (s SecureNetMonthlyRate) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s SecureNetMonthlyRate) GoString() string {
	return s.String()
}

// SetCharge sets the Charge field's value.
func (s *SecureNetMonthlyRate) SetCharge(v int64) *SecureNetMonthlyRate {
	s.Charge = &v
	return s
}

// SetType sets the Type field's value.
func (s *SecureNetMonthlyRate) SetType(v string) *SecureNetMonthlyRate {
	s.Type = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *SecureNetMonthlyRate) SetUnit(v string) *SecureNetMonthlyRate {
	s.Unit = &v
	return s
}

// SetValue sets the Value field's value.
func (s *SecureNetMonthlyRate) SetValue(v int64) *SecureNetMonthlyRate {
	s.Value = &v
	return s
}

type SecurityGroupApplyTime struct {
	_ struct{} `type:"structure"`

	Charge *int64 `locationName:"charge" type:"integer"`

	Type *string `locationName:"type" type:"string"`

	Unit *string `locationName:"unit" type:"string"`

	Value *int64 `locationName:"value" type:"integer"`
}

// String returns the string representation
func (s SecurityGroupApplyTime) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s SecurityGroupApplyTime) GoString() string {
	return s.String()
}

// SetCharge sets the Charge field's value.
func (s *SecurityGroupApplyTime) SetCharge(v int64) *SecurityGroupApplyTime {
	s.Charge = &v
	return s
}

// SetType sets the Type field's value.
func (s *SecurityGroupApplyTime) SetType(v string) *SecurityGroupApplyTime {
	s.Type = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *SecurityGroupApplyTime) SetUnit(v string) *SecurityGroupApplyTime {
	s.Unit = &v
	return s
}

// SetValue sets the Value field's value.
func (s *SecurityGroupApplyTime) SetValue(v int64) *SecurityGroupApplyTime {
	s.Value = &v
	return s
}

type SecurityGroupInfo struct {
	_ struct{} `type:"structure"`

	OptionSet []*OptionSetItem `locationName:"optionSet" locationNameList:"item" type:"list"`

	SecurityGroupApplyTime *SecurityGroupApplyTime `locationName:"securityGroupApplyTime" type:"structure"`
}

// String returns the string representation
func (s SecurityGroupInfo) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s SecurityGroupInfo) GoString() string {
	return s.String()
}

// SetOptionSet sets the OptionSet field's value.
func (s *SecurityGroupInfo) SetOptionSet(v []*OptionSetItem) *SecurityGroupInfo {
	s.OptionSet = v
	return s
}

// SetSecurityGroupApplyTime sets the SecurityGroupApplyTime field's value.
func (s *SecurityGroupInfo) SetSecurityGroupApplyTime(v *SecurityGroupApplyTime) *SecurityGroupInfo {
	s.SecurityGroupApplyTime = v
	return s
}

type SecurityGroupInfoSetItem struct {
	_ struct{} `type:"structure"`

	AvailabilityZone *string `locationName:"availabilityZone" type:"string"`

	Description *string `locationName:"description" type:"string"`

	GroupDescription *string `locationName:"groupDescription" type:"string"`

	GroupLogFilterBroadcast *bool `locationName:"groupLogFilterBroadcast" type:"boolean"`

	GroupLogFilterNetBios *bool `locationName:"groupLogFilterNetBios" type:"boolean"`

	GroupLogLimit *int64 `locationName:"groupLogLimit" type:"integer"`

	GroupName *string `locationName:"groupName" type:"string"`

	GroupRuleLimit *int64 `locationName:"groupRuleLimit" type:"integer"`

	GroupStatus *string `locationName:"groupStatus" type:"string"`

	InstanceUniqueIdsSet []*InstanceUniqueIdsSetItem `locationName:"instanceUniqueIdsSet" locationNameList:"item" type:"list"`

	InstancesNetworkInterfaceSet []*InstancesNetworkInterfaceSetItem `locationName:"instancesNetworkInterfaceSet" locationNameList:"item" type:"list"`

	InstancesSet []*InstancesSetItem `locationName:"instancesSet" locationNameList:"item" type:"list"`

	IpPermissions []*IpPermissionsSetItem `locationName:"ipPermissions" locationNameList:"item" type:"list"`

	OwnerId *string `locationName:"ownerId" type:"string"`

	RouterNetworkInterfaceSet []*RouterNetworkInterfaceSetItem `locationName:"routerNetworkInterfaceSet" locationNameList:"item" type:"list"`

	RouterSet []*RouterSetItem `locationName:"routerSet" locationNameList:"item" type:"list"`

	VpnGatewayNetworkInterfaceSet []*VpnGatewayNetworkInterfaceSetItem `locationName:"vpnGatewayNetworkInterfaceSet" locationNameList:"item" type:"list"`

	VpnGatewaySet []*VpnGatewaySetItem `locationName:"vpnGatewaySet" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s SecurityGroupInfoSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s SecurityGroupInfoSetItem) GoString() string {
	return s.String()
}

// SetAvailabilityZone sets the AvailabilityZone field's value.
func (s *SecurityGroupInfoSetItem) SetAvailabilityZone(v string) *SecurityGroupInfoSetItem {
	s.AvailabilityZone = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *SecurityGroupInfoSetItem) SetDescription(v string) *SecurityGroupInfoSetItem {
	s.Description = &v
	return s
}

// SetGroupDescription sets the GroupDescription field's value.
func (s *SecurityGroupInfoSetItem) SetGroupDescription(v string) *SecurityGroupInfoSetItem {
	s.GroupDescription = &v
	return s
}

// SetGroupLogFilterBroadcast sets the GroupLogFilterBroadcast field's value.
func (s *SecurityGroupInfoSetItem) SetGroupLogFilterBroadcast(v bool) *SecurityGroupInfoSetItem {
	s.GroupLogFilterBroadcast = &v
	return s
}

// SetGroupLogFilterNetBios sets the GroupLogFilterNetBios field's value.
func (s *SecurityGroupInfoSetItem) SetGroupLogFilterNetBios(v bool) *SecurityGroupInfoSetItem {
	s.GroupLogFilterNetBios = &v
	return s
}

// SetGroupLogLimit sets the GroupLogLimit field's value.
func (s *SecurityGroupInfoSetItem) SetGroupLogLimit(v int64) *SecurityGroupInfoSetItem {
	s.GroupLogLimit = &v
	return s
}

// SetGroupName sets the GroupName field's value.
func (s *SecurityGroupInfoSetItem) SetGroupName(v string) *SecurityGroupInfoSetItem {
	s.GroupName = &v
	return s
}

// SetGroupRuleLimit sets the GroupRuleLimit field's value.
func (s *SecurityGroupInfoSetItem) SetGroupRuleLimit(v int64) *SecurityGroupInfoSetItem {
	s.GroupRuleLimit = &v
	return s
}

// SetGroupStatus sets the GroupStatus field's value.
func (s *SecurityGroupInfoSetItem) SetGroupStatus(v string) *SecurityGroupInfoSetItem {
	s.GroupStatus = &v
	return s
}

// SetInstanceUniqueIdsSet sets the InstanceUniqueIdsSet field's value.
func (s *SecurityGroupInfoSetItem) SetInstanceUniqueIdsSet(v []*InstanceUniqueIdsSetItem) *SecurityGroupInfoSetItem {
	s.InstanceUniqueIdsSet = v
	return s
}

// SetInstancesNetworkInterfaceSet sets the InstancesNetworkInterfaceSet field's value.
func (s *SecurityGroupInfoSetItem) SetInstancesNetworkInterfaceSet(v []*InstancesNetworkInterfaceSetItem) *SecurityGroupInfoSetItem {
	s.InstancesNetworkInterfaceSet = v
	return s
}

// SetInstancesSet sets the InstancesSet field's value.
func (s *SecurityGroupInfoSetItem) SetInstancesSet(v []*InstancesSetItem) *SecurityGroupInfoSetItem {
	s.InstancesSet = v
	return s
}

// SetIpPermissions sets the IpPermissions field's value.
func (s *SecurityGroupInfoSetItem) SetIpPermissions(v []*IpPermissionsSetItem) *SecurityGroupInfoSetItem {
	s.IpPermissions = v
	return s
}

// SetOwnerId sets the OwnerId field's value.
func (s *SecurityGroupInfoSetItem) SetOwnerId(v string) *SecurityGroupInfoSetItem {
	s.OwnerId = &v
	return s
}

// SetRouterNetworkInterfaceSet sets the RouterNetworkInterfaceSet field's value.
func (s *SecurityGroupInfoSetItem) SetRouterNetworkInterfaceSet(v []*RouterNetworkInterfaceSetItem) *SecurityGroupInfoSetItem {
	s.RouterNetworkInterfaceSet = v
	return s
}

// SetRouterSet sets the RouterSet field's value.
func (s *SecurityGroupInfoSetItem) SetRouterSet(v []*RouterSetItem) *SecurityGroupInfoSetItem {
	s.RouterSet = v
	return s
}

// SetVpnGatewayNetworkInterfaceSet sets the VpnGatewayNetworkInterfaceSet field's value.
func (s *SecurityGroupInfoSetItem) SetVpnGatewayNetworkInterfaceSet(v []*VpnGatewayNetworkInterfaceSetItem) *SecurityGroupInfoSetItem {
	s.VpnGatewayNetworkInterfaceSet = v
	return s
}

// SetVpnGatewaySet sets the VpnGatewaySet field's value.
func (s *SecurityGroupInfoSetItem) SetVpnGatewaySet(v []*VpnGatewaySetItem) *SecurityGroupInfoSetItem {
	s.VpnGatewaySet = v
	return s
}

type SeparateInstanceRulesInfoSetItem struct {
	_ struct{} `type:"structure"`

	AvailabilityZone *string `locationName:"availabilityZone" type:"string"`

	InstancesSet []*InstancesSetItem `locationName:"instancesSet" locationNameList:"item" type:"list"`

	SeparateInstanceRuleDescription *string `locationName:"separateInstanceRuleDescription" type:"string"`

	SeparateInstanceRuleName *string `locationName:"separateInstanceRuleName" type:"string"`

	SeparateInstanceRuleStatus *string `locationName:"separateInstanceRuleStatus" type:"string"`
}

// String returns the string representation
func (s SeparateInstanceRulesInfoSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s SeparateInstanceRulesInfoSetItem) GoString() string {
	return s.String()
}

// SetAvailabilityZone sets the AvailabilityZone field's value.
func (s *SeparateInstanceRulesInfoSetItem) SetAvailabilityZone(v string) *SeparateInstanceRulesInfoSetItem {
	s.AvailabilityZone = &v
	return s
}

// SetInstancesSet sets the InstancesSet field's value.
func (s *SeparateInstanceRulesInfoSetItem) SetInstancesSet(v []*InstancesSetItem) *SeparateInstanceRulesInfoSetItem {
	s.InstancesSet = v
	return s
}

// SetSeparateInstanceRuleDescription sets the SeparateInstanceRuleDescription field's value.
func (s *SeparateInstanceRulesInfoSetItem) SetSeparateInstanceRuleDescription(v string) *SeparateInstanceRulesInfoSetItem {
	s.SeparateInstanceRuleDescription = &v
	return s
}

// SetSeparateInstanceRuleName sets the SeparateInstanceRuleName field's value.
func (s *SeparateInstanceRulesInfoSetItem) SetSeparateInstanceRuleName(v string) *SeparateInstanceRulesInfoSetItem {
	s.SeparateInstanceRuleName = &v
	return s
}

// SetSeparateInstanceRuleStatus sets the SeparateInstanceRuleStatus field's value.
func (s *SeparateInstanceRulesInfoSetItem) SetSeparateInstanceRuleStatus(v string) *SeparateInstanceRulesInfoSetItem {
	s.SeparateInstanceRuleStatus = &v
	return s
}

type ServiceStatusSetItem struct {
	_ struct{} `type:"structure"`

	ControlPanelStatus *string `locationName:"controlPanelStatus" type:"string"`

	Date *string `locationName:"date" type:"string"`

	DiskStatus *string `locationName:"diskStatus" type:"string"`

	InstanceStatus *string `locationName:"instanceStatus" type:"string"`

	NetworkStatus *string `locationName:"networkStatus" type:"string"`

	StorageStatus *string `locationName:"storageStatus" type:"string"`
}

// String returns the string representation
func (s ServiceStatusSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ServiceStatusSetItem) GoString() string {
	return s.String()
}

// SetControlPanelStatus sets the ControlPanelStatus field's value.
func (s *ServiceStatusSetItem) SetControlPanelStatus(v string) *ServiceStatusSetItem {
	s.ControlPanelStatus = &v
	return s
}

// SetDate sets the Date field's value.
func (s *ServiceStatusSetItem) SetDate(v string) *ServiceStatusSetItem {
	s.Date = &v
	return s
}

// SetDiskStatus sets the DiskStatus field's value.
func (s *ServiceStatusSetItem) SetDiskStatus(v string) *ServiceStatusSetItem {
	s.DiskStatus = &v
	return s
}

// SetInstanceStatus sets the InstanceStatus field's value.
func (s *ServiceStatusSetItem) SetInstanceStatus(v string) *ServiceStatusSetItem {
	s.InstanceStatus = &v
	return s
}

// SetNetworkStatus sets the NetworkStatus field's value.
func (s *ServiceStatusSetItem) SetNetworkStatus(v string) *ServiceStatusSetItem {
	s.NetworkStatus = &v
	return s
}

// SetStorageStatus sets the StorageStatus field's value.
func (s *ServiceStatusSetItem) SetStorageStatus(v string) *ServiceStatusSetItem {
	s.StorageStatus = &v
	return s
}

type SessionStickinessPolicy struct {
	_ struct{} `type:"structure"`

	Enabled *bool `locationName:"Enabled" type:"boolean"`

	ExpirationPeriod *int64 `locationName:"ExpirationPeriod" type:"integer"`

	Method *int64 `locationName:"Method" type:"integer"`
}

// String returns the string representation
func (s SessionStickinessPolicy) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s SessionStickinessPolicy) GoString() string {
	return s.String()
}

// SetEnabled sets the Enabled field's value.
func (s *SessionStickinessPolicy) SetEnabled(v bool) *SessionStickinessPolicy {
	s.Enabled = &v
	return s
}

// SetExpirationPeriod sets the ExpirationPeriod field's value.
func (s *SessionStickinessPolicy) SetExpirationPeriod(v int64) *SessionStickinessPolicy {
	s.ExpirationPeriod = &v
	return s
}

// SetMethod sets the Method field's value.
func (s *SessionStickinessPolicy) SetMethod(v int64) *SessionStickinessPolicy {
	s.Method = &v
	return s
}

type SetFilterForLoadBalancerInput struct {
	_ struct{} `type:"structure"`

	FilterType *string `locationName:"FilterType" type:"string"`

	IPAddresses []*RequestIPAddressesStruct `locationName:"IPAddresses" locationNameList:"member" type:"list"`

	InstancePort *int64 `locationName:"InstancePort" type:"integer"`

	LoadBalancerName *string `locationName:"LoadBalancerName" type:"string"`

	LoadBalancerPort *int64 `locationName:"LoadBalancerPort" type:"integer"`
}

// String returns the string representation
func (s SetFilterForLoadBalancerInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s SetFilterForLoadBalancerInput) GoString() string {
	return s.String()
}

// SetFilterType sets the FilterType field's value.
func (s *SetFilterForLoadBalancerInput) SetFilterType(v string) *SetFilterForLoadBalancerInput {
	s.FilterType = &v
	return s
}

// SetIPAddresses sets the IPAddresses field's value.
func (s *SetFilterForLoadBalancerInput) SetIPAddresses(v []*RequestIPAddressesStruct) *SetFilterForLoadBalancerInput {
	s.IPAddresses = v
	return s
}

// SetInstancePort sets the InstancePort field's value.
func (s *SetFilterForLoadBalancerInput) SetInstancePort(v int64) *SetFilterForLoadBalancerInput {
	s.InstancePort = &v
	return s
}

// SetLoadBalancerName sets the LoadBalancerName field's value.
func (s *SetFilterForLoadBalancerInput) SetLoadBalancerName(v string) *SetFilterForLoadBalancerInput {
	s.LoadBalancerName = &v
	return s
}

// SetLoadBalancerPort sets the LoadBalancerPort field's value.
func (s *SetFilterForLoadBalancerInput) SetLoadBalancerPort(v int64) *SetFilterForLoadBalancerInput {
	s.LoadBalancerPort = &v
	return s
}

type SetFilterForLoadBalancerOutput struct {
	_ struct{} `type:"structure"`

	Filter *Filter `locationName:"Filter" type:"structure"`

	ResponseMetadata *ResponseMetadata `locationName:"ResponseMetadata" type:"structure"`

	SetFilterForLoadBalancerResult *SetFilterForLoadBalancerOutput `locationName:"SetFilterForLoadBalancerResult" type:"structure"`
}

// String returns the string representation
func (s SetFilterForLoadBalancerOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s SetFilterForLoadBalancerOutput) GoString() string {
	return s.String()
}

// SetFilter sets the Filter field's value.
func (s *SetFilterForLoadBalancerOutput) SetFilter(v *Filter) *SetFilterForLoadBalancerOutput {
	s.Filter = v
	return s
}

// SetResponseMetadata sets the ResponseMetadata field's value.
func (s *SetFilterForLoadBalancerOutput) SetResponseMetadata(v *ResponseMetadata) *SetFilterForLoadBalancerOutput {
	s.ResponseMetadata = v
	return s
}

// SetSetFilterForLoadBalancerResult sets the SetFilterForLoadBalancerResult field's value.
func (s *SetFilterForLoadBalancerOutput) SetSetFilterForLoadBalancerResult(v *SetFilterForLoadBalancerOutput) *SetFilterForLoadBalancerOutput {
	s.SetFilterForLoadBalancerResult = v
	return s
}

type Snapshot struct {
	_ struct{} `type:"structure"`

	Charge *int64 `locationName:"charge" type:"integer"`

	Type *string `locationName:"type" type:"string"`

	Unit *string `locationName:"unit" type:"string"`

	Value *int64 `locationName:"value" type:"integer"`
}

// String returns the string representation
func (s Snapshot) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s Snapshot) GoString() string {
	return s.String()
}

// SetCharge sets the Charge field's value.
func (s *Snapshot) SetCharge(v int64) *Snapshot {
	s.Charge = &v
	return s
}

// SetType sets the Type field's value.
func (s *Snapshot) SetType(v string) *Snapshot {
	s.Type = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *Snapshot) SetUnit(v string) *Snapshot {
	s.Unit = &v
	return s
}

// SetValue sets the Value field's value.
func (s *Snapshot) SetValue(v int64) *Snapshot {
	s.Value = &v
	return s
}

type SnapshotInfo struct {
	_ struct{} `type:"structure"`

	Snapshot *Snapshot `locationName:"snapshot" type:"structure"`
}

// String returns the string representation
func (s SnapshotInfo) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s SnapshotInfo) GoString() string {
	return s.String()
}

// SetSnapshot sets the Snapshot field's value.
func (s *SnapshotInfo) SetSnapshot(v *Snapshot) *SnapshotInfo {
	s.Snapshot = v
	return s
}

type SnapshotInfoSetItem struct {
	_ struct{} `type:"structure"`

	CreatedTime *string `locationName:"createdTime" type:"string"`

	ExpiredTime *string `locationName:"expiredTime" type:"string"`

	InstanceId *string `locationName:"instanceId" type:"string"`

	InstanceSnapshotId *string `locationName:"instanceSnapshotId" type:"string"`

	Memo *string `locationName:"memo" type:"string"`

	PowerStatus *string `locationName:"powerStatus" type:"string"`

	SnapshotName *string `locationName:"snapshotName" type:"string"`

	Status *string `locationName:"status" type:"string"`

	UpdatedTime *string `locationName:"updatedTime" type:"string"`
}

// String returns the string representation
func (s SnapshotInfoSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s SnapshotInfoSetItem) GoString() string {
	return s.String()
}

// SetCreatedTime sets the CreatedTime field's value.
func (s *SnapshotInfoSetItem) SetCreatedTime(v string) *SnapshotInfoSetItem {
	s.CreatedTime = &v
	return s
}

// SetExpiredTime sets the ExpiredTime field's value.
func (s *SnapshotInfoSetItem) SetExpiredTime(v string) *SnapshotInfoSetItem {
	s.ExpiredTime = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *SnapshotInfoSetItem) SetInstanceId(v string) *SnapshotInfoSetItem {
	s.InstanceId = &v
	return s
}

// SetInstanceSnapshotId sets the InstanceSnapshotId field's value.
func (s *SnapshotInfoSetItem) SetInstanceSnapshotId(v string) *SnapshotInfoSetItem {
	s.InstanceSnapshotId = &v
	return s
}

// SetMemo sets the Memo field's value.
func (s *SnapshotInfoSetItem) SetMemo(v string) *SnapshotInfoSetItem {
	s.Memo = &v
	return s
}

// SetPowerStatus sets the PowerStatus field's value.
func (s *SnapshotInfoSetItem) SetPowerStatus(v string) *SnapshotInfoSetItem {
	s.PowerStatus = &v
	return s
}

// SetSnapshotName sets the SnapshotName field's value.
func (s *SnapshotInfoSetItem) SetSnapshotName(v string) *SnapshotInfoSetItem {
	s.SnapshotName = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *SnapshotInfoSetItem) SetStatus(v string) *SnapshotInfoSetItem {
	s.Status = &v
	return s
}

// SetUpdatedTime sets the UpdatedTime field's value.
func (s *SnapshotInfoSetItem) SetUpdatedTime(v string) *SnapshotInfoSetItem {
	s.UpdatedTime = &v
	return s
}

type SorryPage struct {
	_ struct{} `type:"structure"`

	Enabled *bool `locationName:"Enabled" type:"boolean"`

	RedirectUrl *string `locationName:"RedirectUrl" type:"string"`

	StatusCode *int64 `locationName:"StatusCode" type:"integer"`
}

// String returns the string representation
func (s SorryPage) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s SorryPage) GoString() string {
	return s.String()
}

// SetEnabled sets the Enabled field's value.
func (s *SorryPage) SetEnabled(v bool) *SorryPage {
	s.Enabled = &v
	return s
}

// SetRedirectUrl sets the RedirectUrl field's value.
func (s *SorryPage) SetRedirectUrl(v string) *SorryPage {
	s.RedirectUrl = &v
	return s
}

// SetStatusCode sets the StatusCode field's value.
func (s *SorryPage) SetStatusCode(v int64) *SorryPage {
	s.StatusCode = &v
	return s
}

type Source struct {
	_ struct{} `type:"structure"`

	Address *string `locationName:"address" type:"string"`

	Port *int64 `locationName:"port" type:"integer"`
}

// String returns the string representation
func (s Source) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s Source) GoString() string {
	return s.String()
}

// SetAddress sets the Address field's value.
func (s *Source) SetAddress(v string) *Source {
	s.Address = &v
	return s
}

// SetPort sets the Port field's value.
func (s *Source) SetPort(v int64) *Source {
	s.Port = &v
	return s
}

type SslCertInfo struct {
	_ struct{} `type:"structure"`

	CreateSslCertSet []*CreateSslCertSetItem `locationName:"createSslCertSet" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s SslCertInfo) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s SslCertInfo) GoString() string {
	return s.String()
}

// SetCreateSslCertSet sets the CreateSslCertSet field's value.
func (s *SslCertInfo) SetCreateSslCertSet(v []*CreateSslCertSetItem) *SslCertInfo {
	s.CreateSslCertSet = v
	return s
}

type StartInstancesInput struct {
	_ struct{} `type:"structure"`

	AccountingType []*string `locationName:"AccountingType" type:"list"`

	InstanceId []*string `locationName:"InstanceId" type:"list"`

	InstanceType []*string `locationName:"InstanceType" type:"list"`

	NiftyIsBios *bool `locationName:"NiftyIsBios" type:"boolean"`

	Tenancy []*string `locationName:"Tenancy" type:"list"`

	UserData *string `locationName:"UserData" type:"string"`
}

// String returns the string representation
func (s StartInstancesInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s StartInstancesInput) GoString() string {
	return s.String()
}

// SetAccountingType sets the AccountingType field's value.
func (s *StartInstancesInput) SetAccountingType(v []*string) *StartInstancesInput {
	s.AccountingType = v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *StartInstancesInput) SetInstanceId(v []*string) *StartInstancesInput {
	s.InstanceId = v
	return s
}

// SetInstanceType sets the InstanceType field's value.
func (s *StartInstancesInput) SetInstanceType(v []*string) *StartInstancesInput {
	s.InstanceType = v
	return s
}

// SetNiftyIsBios sets the NiftyIsBios field's value.
func (s *StartInstancesInput) SetNiftyIsBios(v bool) *StartInstancesInput {
	s.NiftyIsBios = &v
	return s
}

// SetTenancy sets the Tenancy field's value.
func (s *StartInstancesInput) SetTenancy(v []*string) *StartInstancesInput {
	s.Tenancy = v
	return s
}

// SetUserData sets the UserData field's value.
func (s *StartInstancesInput) SetUserData(v string) *StartInstancesInput {
	s.UserData = &v
	return s
}

type StartInstancesOutput struct {
	_ struct{} `type:"structure"`

	InstancesSet []*InstancesSetItem `locationName:"instancesSet" locationNameList:"item" type:"list"`

	RequestId *string `locationName:"requestId" type:"string"`
}

// String returns the string representation
func (s StartInstancesOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s StartInstancesOutput) GoString() string {
	return s.String()
}

// SetInstancesSet sets the InstancesSet field's value.
func (s *StartInstancesOutput) SetInstancesSet(v []*InstancesSetItem) *StartInstancesOutput {
	s.InstancesSet = v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *StartInstancesOutput) SetRequestId(v string) *StartInstancesOutput {
	s.RequestId = &v
	return s
}

type StateReason struct {
	_ struct{} `type:"structure"`

	Code *int64 `locationName:"code" type:"integer"`

	Message *string `locationName:"message" type:"string"`
}

// String returns the string representation
func (s StateReason) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s StateReason) GoString() string {
	return s.String()
}

// SetCode sets the Code field's value.
func (s *StateReason) SetCode(v int64) *StateReason {
	s.Code = &v
	return s
}

// SetMessage sets the Message field's value.
func (s *StateReason) SetMessage(v string) *StateReason {
	s.Message = &v
	return s
}

type StaticMappingsSetItem struct {
	_ struct{} `type:"structure"`

	Description *string `locationName:"description" type:"string"`

	IpAddress *string `locationName:"ipAddress" type:"string"`

	MacAddress *string `locationName:"macAddress" type:"string"`
}

// String returns the string representation
func (s StaticMappingsSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s StaticMappingsSetItem) GoString() string {
	return s.String()
}

// SetDescription sets the Description field's value.
func (s *StaticMappingsSetItem) SetDescription(v string) *StaticMappingsSetItem {
	s.Description = &v
	return s
}

// SetIpAddress sets the IpAddress field's value.
func (s *StaticMappingsSetItem) SetIpAddress(v string) *StaticMappingsSetItem {
	s.IpAddress = &v
	return s
}

// SetMacAddress sets the MacAddress field's value.
func (s *StaticMappingsSetItem) SetMacAddress(v string) *StaticMappingsSetItem {
	s.MacAddress = &v
	return s
}

type StopInstancesInput struct {
	_ struct{} `type:"structure"`

	Force *bool `locationName:"Force" type:"boolean"`

	InstanceId []*string `locationName:"InstanceId" type:"list"`

	Tenancy []*string `locationName:"Tenancy" type:"list"`
}

// String returns the string representation
func (s StopInstancesInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s StopInstancesInput) GoString() string {
	return s.String()
}

// SetForce sets the Force field's value.
func (s *StopInstancesInput) SetForce(v bool) *StopInstancesInput {
	s.Force = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *StopInstancesInput) SetInstanceId(v []*string) *StopInstancesInput {
	s.InstanceId = v
	return s
}

// SetTenancy sets the Tenancy field's value.
func (s *StopInstancesInput) SetTenancy(v []*string) *StopInstancesInput {
	s.Tenancy = v
	return s
}

type StopInstancesOutput struct {
	_ struct{} `type:"structure"`

	InstancesSet []*InstancesSetItem `locationName:"instancesSet" locationNameList:"item" type:"list"`

	RequestId *string `locationName:"requestId" type:"string"`
}

// String returns the string representation
func (s StopInstancesOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s StopInstancesOutput) GoString() string {
	return s.String()
}

// SetInstancesSet sets the InstancesSet field's value.
func (s *StopInstancesOutput) SetInstancesSet(v []*InstancesSetItem) *StopInstancesOutput {
	s.InstancesSet = v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *StopInstancesOutput) SetRequestId(v string) *StopInstancesOutput {
	s.RequestId = &v
	return s
}

type StoppedInstanceMeasuredRateSetItem struct {
	_ struct{} `type:"structure"`

	Charge *int64 `locationName:"charge" type:"integer"`

	Type *string `locationName:"type" type:"string"`

	Unit *string `locationName:"unit" type:"string"`

	Value *int64 `locationName:"value" type:"integer"`
}

// String returns the string representation
func (s StoppedInstanceMeasuredRateSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s StoppedInstanceMeasuredRateSetItem) GoString() string {
	return s.String()
}

// SetCharge sets the Charge field's value.
func (s *StoppedInstanceMeasuredRateSetItem) SetCharge(v int64) *StoppedInstanceMeasuredRateSetItem {
	s.Charge = &v
	return s
}

// SetType sets the Type field's value.
func (s *StoppedInstanceMeasuredRateSetItem) SetType(v string) *StoppedInstanceMeasuredRateSetItem {
	s.Type = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *StoppedInstanceMeasuredRateSetItem) SetUnit(v string) *StoppedInstanceMeasuredRateSetItem {
	s.Unit = &v
	return s
}

// SetValue sets the Value field's value.
func (s *StoppedInstanceMeasuredRateSetItem) SetValue(v int64) *StoppedInstanceMeasuredRateSetItem {
	s.Value = &v
	return s
}

type StoppedScaleOutInstanceSetItem struct {
	_ struct{} `type:"structure"`

	Charge *int64 `locationName:"charge" type:"integer"`

	Type *string `locationName:"type" type:"string"`

	Unit *string `locationName:"unit" type:"string"`

	Value *int64 `locationName:"value" type:"integer"`
}

// String returns the string representation
func (s StoppedScaleOutInstanceSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s StoppedScaleOutInstanceSetItem) GoString() string {
	return s.String()
}

// SetCharge sets the Charge field's value.
func (s *StoppedScaleOutInstanceSetItem) SetCharge(v int64) *StoppedScaleOutInstanceSetItem {
	s.Charge = &v
	return s
}

// SetType sets the Type field's value.
func (s *StoppedScaleOutInstanceSetItem) SetType(v string) *StoppedScaleOutInstanceSetItem {
	s.Type = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *StoppedScaleOutInstanceSetItem) SetUnit(v string) *StoppedScaleOutInstanceSetItem {
	s.Unit = &v
	return s
}

// SetValue sets the Value field's value.
func (s *StoppedScaleOutInstanceSetItem) SetValue(v int64) *StoppedScaleOutInstanceSetItem {
	s.Value = &v
	return s
}

type StoppedScaleOutOsSetItem struct {
	_ struct{} `type:"structure"`

	Charge *int64 `locationName:"charge" type:"integer"`

	Type *string `locationName:"type" type:"string"`

	Unit *string `locationName:"unit" type:"string"`

	Value *int64 `locationName:"value" type:"integer"`
}

// String returns the string representation
func (s StoppedScaleOutOsSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s StoppedScaleOutOsSetItem) GoString() string {
	return s.String()
}

// SetCharge sets the Charge field's value.
func (s *StoppedScaleOutOsSetItem) SetCharge(v int64) *StoppedScaleOutOsSetItem {
	s.Charge = &v
	return s
}

// SetType sets the Type field's value.
func (s *StoppedScaleOutOsSetItem) SetType(v string) *StoppedScaleOutOsSetItem {
	s.Type = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *StoppedScaleOutOsSetItem) SetUnit(v string) *StoppedScaleOutOsSetItem {
	s.Unit = &v
	return s
}

// SetValue sets the Value field's value.
func (s *StoppedScaleOutOsSetItem) SetValue(v int64) *StoppedScaleOutOsSetItem {
	s.Value = &v
	return s
}

type StorageInfo struct {
	_ struct{} `type:"structure"`

	StorageMeasuredRate *StorageMeasuredRate `locationName:"storageMeasuredRate" type:"structure"`

	StorageMonthlyRate *StorageMonthlyRate `locationName:"storageMonthlyRate" type:"structure"`
}

// String returns the string representation
func (s StorageInfo) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s StorageInfo) GoString() string {
	return s.String()
}

// SetStorageMeasuredRate sets the StorageMeasuredRate field's value.
func (s *StorageInfo) SetStorageMeasuredRate(v *StorageMeasuredRate) *StorageInfo {
	s.StorageMeasuredRate = v
	return s
}

// SetStorageMonthlyRate sets the StorageMonthlyRate field's value.
func (s *StorageInfo) SetStorageMonthlyRate(v *StorageMonthlyRate) *StorageInfo {
	s.StorageMonthlyRate = v
	return s
}

type StorageMeasuredRate struct {
	_ struct{} `type:"structure"`

	Charge *int64 `locationName:"charge" type:"integer"`

	Type *string `locationName:"type" type:"string"`

	Unit *string `locationName:"unit" type:"string"`

	Value *int64 `locationName:"value" type:"integer"`
}

// String returns the string representation
func (s StorageMeasuredRate) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s StorageMeasuredRate) GoString() string {
	return s.String()
}

// SetCharge sets the Charge field's value.
func (s *StorageMeasuredRate) SetCharge(v int64) *StorageMeasuredRate {
	s.Charge = &v
	return s
}

// SetType sets the Type field's value.
func (s *StorageMeasuredRate) SetType(v string) *StorageMeasuredRate {
	s.Type = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *StorageMeasuredRate) SetUnit(v string) *StorageMeasuredRate {
	s.Unit = &v
	return s
}

// SetValue sets the Value field's value.
func (s *StorageMeasuredRate) SetValue(v int64) *StorageMeasuredRate {
	s.Value = &v
	return s
}

type StorageMonthlyRate struct {
	_ struct{} `type:"structure"`

	Charge *int64 `locationName:"charge" type:"integer"`

	Type *string `locationName:"type" type:"string"`

	Unit *string `locationName:"unit" type:"string"`

	Value *int64 `locationName:"value" type:"integer"`
}

// String returns the string representation
func (s StorageMonthlyRate) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s StorageMonthlyRate) GoString() string {
	return s.String()
}

// SetCharge sets the Charge field's value.
func (s *StorageMonthlyRate) SetCharge(v int64) *StorageMonthlyRate {
	s.Charge = &v
	return s
}

// SetType sets the Type field's value.
func (s *StorageMonthlyRate) SetType(v string) *StorageMonthlyRate {
	s.Type = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *StorageMonthlyRate) SetUnit(v string) *StorageMonthlyRate {
	s.Unit = &v
	return s
}

// SetValue sets the Value field's value.
func (s *StorageMonthlyRate) SetValue(v int64) *StorageMonthlyRate {
	s.Value = &v
	return s
}

type TagSetItem struct {
	_ struct{} `type:"structure"`

	Key *string `locationName:"key" type:"string"`

	Value *string `locationName:"value" type:"string"`
}

// String returns the string representation
func (s TagSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s TagSetItem) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagSetItem) SetKey(v string) *TagSetItem {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *TagSetItem) SetValue(v string) *TagSetItem {
	s.Value = &v
	return s
}

type TerminateInstancesInput struct {
	_ struct{} `type:"structure"`

	InstanceId []*string `locationName:"InstanceId" type:"list"`
}

// String returns the string representation
func (s TerminateInstancesInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s TerminateInstancesInput) GoString() string {
	return s.String()
}

// SetInstanceId sets the InstanceId field's value.
func (s *TerminateInstancesInput) SetInstanceId(v []*string) *TerminateInstancesInput {
	s.InstanceId = v
	return s
}

type TerminateInstancesOutput struct {
	_ struct{} `type:"structure"`

	InstancesSet []*InstancesSetItem `locationName:"instancesSet" locationNameList:"item" type:"list"`

	RequestId *string `locationName:"requestId" type:"string"`
}

// String returns the string representation
func (s TerminateInstancesOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s TerminateInstancesOutput) GoString() string {
	return s.String()
}

// SetInstancesSet sets the InstancesSet field's value.
func (s *TerminateInstancesOutput) SetInstancesSet(v []*InstancesSetItem) *TerminateInstancesOutput {
	s.InstancesSet = v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *TerminateInstancesOutput) SetRequestId(v string) *TerminateInstancesOutput {
	s.RequestId = &v
	return s
}

type TimeZone struct {
	_ struct{} `type:"structure"`

	EndingTimeZone *string `locationName:"endingTimeZone" type:"string"`

	StartingTimeZone *string `locationName:"startingTimeZone" type:"string"`
}

// String returns the string representation
func (s TimeZone) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s TimeZone) GoString() string {
	return s.String()
}

// SetEndingTimeZone sets the EndingTimeZone field's value.
func (s *TimeZone) SetEndingTimeZone(v string) *TimeZone {
	s.EndingTimeZone = &v
	return s
}

// SetStartingTimeZone sets the StartingTimeZone field's value.
func (s *TimeZone) SetStartingTimeZone(v string) *TimeZone {
	s.StartingTimeZone = &v
	return s
}

type Translation struct {
	_ struct{} `type:"structure"`

	Address *string `locationName:"address" type:"string"`

	Port *int64 `locationName:"port" type:"integer"`
}

// String returns the string representation
func (s Translation) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s Translation) GoString() string {
	return s.String()
}

// SetAddress sets the Address field's value.
func (s *Translation) SetAddress(v string) *Translation {
	s.Address = &v
	return s
}

// SetPort sets the Port field's value.
func (s *Translation) SetPort(v int64) *Translation {
	s.Port = &v
	return s
}

type TriggerSetItem struct {
	_ struct{} `type:"structure"`

	BreachDuration *int64 `locationName:"breachDuration" type:"integer"`

	Resource *string `locationName:"resource" type:"string"`

	UpperThreshold *float64 `locationName:"upperThreshold" type:"double"`
}

// String returns the string representation
func (s TriggerSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s TriggerSetItem) GoString() string {
	return s.String()
}

// SetBreachDuration sets the BreachDuration field's value.
func (s *TriggerSetItem) SetBreachDuration(v int64) *TriggerSetItem {
	s.BreachDuration = &v
	return s
}

// SetResource sets the Resource field's value.
func (s *TriggerSetItem) SetResource(v string) *TriggerSetItem {
	s.Resource = &v
	return s
}

// SetUpperThreshold sets the UpperThreshold field's value.
func (s *TriggerSetItem) SetUpperThreshold(v float64) *TriggerSetItem {
	s.UpperThreshold = &v
	return s
}

type UpdateLoadBalancerInput struct {
	_ struct{} `type:"structure"`

	AccountingTypeUpdate *int64 `locationName:"AccountingTypeUpdate" type:"integer"`

	ListenerUpdate *RequestListenerUpdateStruct `locationName:"ListenerUpdate" type:"structure"`

	LoadBalancerName *string `locationName:"LoadBalancerName" type:"string"`

	NetworkVolumeUpdate *int64 `locationName:"NetworkVolumeUpdate" type:"integer"`
}

// String returns the string representation
func (s UpdateLoadBalancerInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateLoadBalancerInput) GoString() string {
	return s.String()
}

// SetAccountingTypeUpdate sets the AccountingTypeUpdate field's value.
func (s *UpdateLoadBalancerInput) SetAccountingTypeUpdate(v int64) *UpdateLoadBalancerInput {
	s.AccountingTypeUpdate = &v
	return s
}

// SetListenerUpdate sets the ListenerUpdate field's value.
func (s *UpdateLoadBalancerInput) SetListenerUpdate(v *RequestListenerUpdateStruct) *UpdateLoadBalancerInput {
	s.ListenerUpdate = v
	return s
}

// SetLoadBalancerName sets the LoadBalancerName field's value.
func (s *UpdateLoadBalancerInput) SetLoadBalancerName(v string) *UpdateLoadBalancerInput {
	s.LoadBalancerName = &v
	return s
}

// SetNetworkVolumeUpdate sets the NetworkVolumeUpdate field's value.
func (s *UpdateLoadBalancerInput) SetNetworkVolumeUpdate(v int64) *UpdateLoadBalancerInput {
	s.NetworkVolumeUpdate = &v
	return s
}

type UpdateLoadBalancerOptionInput struct {
	_ struct{} `type:"structure"`

	InstancePort *int64 `locationName:"InstancePort" type:"integer"`

	LoadBalancerName *string `locationName:"LoadBalancerName" type:"string"`

	LoadBalancerPort *int64 `locationName:"LoadBalancerPort" type:"integer"`

	SessionStickinessPolicyUpdate *RequestSessionStickinessPolicyUpdateStruct `locationName:"SessionStickinessPolicyUpdate" type:"structure"`

	SorryPageUpdate *RequestSorryPageUpdateStruct `locationName:"SorryPageUpdate" type:"structure"`
}

// String returns the string representation
func (s UpdateLoadBalancerOptionInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateLoadBalancerOptionInput) GoString() string {
	return s.String()
}

// SetInstancePort sets the InstancePort field's value.
func (s *UpdateLoadBalancerOptionInput) SetInstancePort(v int64) *UpdateLoadBalancerOptionInput {
	s.InstancePort = &v
	return s
}

// SetLoadBalancerName sets the LoadBalancerName field's value.
func (s *UpdateLoadBalancerOptionInput) SetLoadBalancerName(v string) *UpdateLoadBalancerOptionInput {
	s.LoadBalancerName = &v
	return s
}

// SetLoadBalancerPort sets the LoadBalancerPort field's value.
func (s *UpdateLoadBalancerOptionInput) SetLoadBalancerPort(v int64) *UpdateLoadBalancerOptionInput {
	s.LoadBalancerPort = &v
	return s
}

// SetSessionStickinessPolicyUpdate sets the SessionStickinessPolicyUpdate field's value.
func (s *UpdateLoadBalancerOptionInput) SetSessionStickinessPolicyUpdate(v *RequestSessionStickinessPolicyUpdateStruct) *UpdateLoadBalancerOptionInput {
	s.SessionStickinessPolicyUpdate = v
	return s
}

// SetSorryPageUpdate sets the SorryPageUpdate field's value.
func (s *UpdateLoadBalancerOptionInput) SetSorryPageUpdate(v *RequestSorryPageUpdateStruct) *UpdateLoadBalancerOptionInput {
	s.SorryPageUpdate = v
	return s
}

type UpdateLoadBalancerOptionOutput struct {
	_ struct{} `type:"structure"`

	ResponseMetadata *ResponseMetadata `locationName:"ResponseMetadata" type:"structure"`
}

// String returns the string representation
func (s UpdateLoadBalancerOptionOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateLoadBalancerOptionOutput) GoString() string {
	return s.String()
}

// SetResponseMetadata sets the ResponseMetadata field's value.
func (s *UpdateLoadBalancerOptionOutput) SetResponseMetadata(v *ResponseMetadata) *UpdateLoadBalancerOptionOutput {
	s.ResponseMetadata = v
	return s
}

type UpdateLoadBalancerOutput struct {
	_ struct{} `type:"structure"`

	ResponseMetadata *ResponseMetadata `locationName:"ResponseMetadata" type:"structure"`
}

// String returns the string representation
func (s UpdateLoadBalancerOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateLoadBalancerOutput) GoString() string {
	return s.String()
}

// SetResponseMetadata sets the ResponseMetadata field's value.
func (s *UpdateLoadBalancerOutput) SetResponseMetadata(v *ResponseMetadata) *UpdateLoadBalancerOutput {
	s.ResponseMetadata = v
	return s
}

type UpdateSecurityGroupInput struct {
	_ struct{} `type:"structure"`

	GroupDescriptionUpdate *string `locationName:"GroupDescriptionUpdate" type:"string"`

	GroupLogLimitUpdate *int64 `locationName:"GroupLogLimitUpdate" type:"integer"`

	GroupName *string `locationName:"GroupName" type:"string"`

	GroupNameUpdate *string `locationName:"GroupNameUpdate" type:"string"`
}

// String returns the string representation
func (s UpdateSecurityGroupInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateSecurityGroupInput) GoString() string {
	return s.String()
}

// SetGroupDescriptionUpdate sets the GroupDescriptionUpdate field's value.
func (s *UpdateSecurityGroupInput) SetGroupDescriptionUpdate(v string) *UpdateSecurityGroupInput {
	s.GroupDescriptionUpdate = &v
	return s
}

// SetGroupLogLimitUpdate sets the GroupLogLimitUpdate field's value.
func (s *UpdateSecurityGroupInput) SetGroupLogLimitUpdate(v int64) *UpdateSecurityGroupInput {
	s.GroupLogLimitUpdate = &v
	return s
}

// SetGroupName sets the GroupName field's value.
func (s *UpdateSecurityGroupInput) SetGroupName(v string) *UpdateSecurityGroupInput {
	s.GroupName = &v
	return s
}

// SetGroupNameUpdate sets the GroupNameUpdate field's value.
func (s *UpdateSecurityGroupInput) SetGroupNameUpdate(v string) *UpdateSecurityGroupInput {
	s.GroupNameUpdate = &v
	return s
}

type UpdateSecurityGroupOptionInput struct {
	_ struct{} `type:"structure"`

	SecurityGroupLimitUpdate *int64 `locationName:"SecurityGroupLimitUpdate" type:"integer"`
}

// String returns the string representation
func (s UpdateSecurityGroupOptionInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateSecurityGroupOptionInput) GoString() string {
	return s.String()
}

// SetSecurityGroupLimitUpdate sets the SecurityGroupLimitUpdate field's value.
func (s *UpdateSecurityGroupOptionInput) SetSecurityGroupLimitUpdate(v int64) *UpdateSecurityGroupOptionInput {
	s.SecurityGroupLimitUpdate = &v
	return s
}

type UpdateSecurityGroupOptionOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s UpdateSecurityGroupOptionOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateSecurityGroupOptionOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *UpdateSecurityGroupOptionOutput) SetRequestId(v string) *UpdateSecurityGroupOptionOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *UpdateSecurityGroupOptionOutput) SetReturn(v bool) *UpdateSecurityGroupOptionOutput {
	s.Return = &v
	return s
}

type UpdateSecurityGroupOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s UpdateSecurityGroupOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateSecurityGroupOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *UpdateSecurityGroupOutput) SetRequestId(v string) *UpdateSecurityGroupOutput {
	s.RequestId = &v
	return s
}

// SetReturn sets the Return field's value.
func (s *UpdateSecurityGroupOutput) SetReturn(v bool) *UpdateSecurityGroupOutput {
	s.Return = &v
	return s
}

type UploadSslCertificateInput struct {
	_ struct{} `type:"structure"`

	CA *string `locationName:"CA" type:"string"`

	Certificate *string `locationName:"Certificate" type:"string"`

	Key *string `locationName:"Key" type:"string"`
}

// String returns the string representation
func (s UploadSslCertificateInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s UploadSslCertificateInput) GoString() string {
	return s.String()
}

// SetCA sets the CA field's value.
func (s *UploadSslCertificateInput) SetCA(v string) *UploadSslCertificateInput {
	s.CA = &v
	return s
}

// SetCertificate sets the Certificate field's value.
func (s *UploadSslCertificateInput) SetCertificate(v string) *UploadSslCertificateInput {
	s.Certificate = &v
	return s
}

// SetKey sets the Key field's value.
func (s *UploadSslCertificateInput) SetKey(v string) *UploadSslCertificateInput {
	s.Key = &v
	return s
}

type UploadSslCertificateOutput struct {
	_ struct{} `type:"structure"`

	Fqdn *string `locationName:"fqdn" type:"string"`

	FqdnId *string `locationName:"fqdnId" type:"string"`

	KeyFingerPrint *string `locationName:"keyFingerPrint" type:"string"`

	RequestId *string `locationName:"requestId" type:"string"`
}

// String returns the string representation
func (s UploadSslCertificateOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s UploadSslCertificateOutput) GoString() string {
	return s.String()
}

// SetFqdn sets the Fqdn field's value.
func (s *UploadSslCertificateOutput) SetFqdn(v string) *UploadSslCertificateOutput {
	s.Fqdn = &v
	return s
}

// SetFqdnId sets the FqdnId field's value.
func (s *UploadSslCertificateOutput) SetFqdnId(v string) *UploadSslCertificateOutput {
	s.FqdnId = &v
	return s
}

// SetKeyFingerPrint sets the KeyFingerPrint field's value.
func (s *UploadSslCertificateOutput) SetKeyFingerPrint(v string) *UploadSslCertificateOutput {
	s.KeyFingerPrint = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *UploadSslCertificateOutput) SetRequestId(v string) *UploadSslCertificateOutput {
	s.RequestId = &v
	return s
}

type UploadState struct {
	_ struct{} `type:"structure"`

	Value *string `locationName:"value" type:"string"`
}

// String returns the string representation
func (s UploadState) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s UploadState) GoString() string {
	return s.String()
}

// SetValue sets the Value field's value.
func (s *UploadState) SetValue(v string) *UploadState {
	s.Value = &v
	return s
}

type UploadsSetItem struct {
	_ struct{} `type:"structure"`

	ConversionTaskId *int64 `locationName:"conversionTaskId" type:"integer"`

	ExpirationTime *string `locationName:"expirationTime" type:"string"`

	ImportInstance *ImportInstance `locationName:"importInstance" type:"structure"`
}

// String returns the string representation
func (s UploadsSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s UploadsSetItem) GoString() string {
	return s.String()
}

// SetConversionTaskId sets the ConversionTaskId field's value.
func (s *UploadsSetItem) SetConversionTaskId(v int64) *UploadsSetItem {
	s.ConversionTaskId = &v
	return s
}

// SetExpirationTime sets the ExpirationTime field's value.
func (s *UploadsSetItem) SetExpirationTime(v string) *UploadsSetItem {
	s.ExpirationTime = &v
	return s
}

// SetImportInstance sets the ImportInstance field's value.
func (s *UploadsSetItem) SetImportInstance(v *ImportInstance) *UploadsSetItem {
	s.ImportInstance = v
	return s
}

type UserActivitiesSetItem struct {
	_ struct{} `type:"structure"`

	CategoryName *string `locationName:"categoryName" type:"string"`

	DateTime *time.Time `locationName:"dateTime" type:"timestamp" timestampFormat:""`

	IpAddress *string `locationName:"ipAddress" type:"string"`

	Operation *string `locationName:"operation" type:"string"`

	Operator *string `locationName:"operator" type:"string"`

	Result *bool `locationName:"result" type:"boolean"`
}

// String returns the string representation
func (s UserActivitiesSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s UserActivitiesSetItem) GoString() string {
	return s.String()
}

// SetCategoryName sets the CategoryName field's value.
func (s *UserActivitiesSetItem) SetCategoryName(v string) *UserActivitiesSetItem {
	s.CategoryName = &v
	return s
}

// SetDateTime sets the DateTime field's value.
func (s *UserActivitiesSetItem) SetDateTime(v time.Time) *UserActivitiesSetItem {
	s.DateTime = &v
	return s
}

// SetIpAddress sets the IpAddress field's value.
func (s *UserActivitiesSetItem) SetIpAddress(v string) *UserActivitiesSetItem {
	s.IpAddress = &v
	return s
}

// SetOperation sets the Operation field's value.
func (s *UserActivitiesSetItem) SetOperation(v string) *UserActivitiesSetItem {
	s.Operation = &v
	return s
}

// SetOperator sets the Operator field's value.
func (s *UserActivitiesSetItem) SetOperator(v string) *UserActivitiesSetItem {
	s.Operator = &v
	return s
}

// SetResult sets the Result field's value.
func (s *UserActivitiesSetItem) SetResult(v bool) *UserActivitiesSetItem {
	s.Result = &v
	return s
}

type UserData struct {
	_ struct{} `type:"structure"`

	Value *string `locationName:"value" type:"string"`
}

// String returns the string representation
func (s UserData) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s UserData) GoString() string {
	return s.String()
}

// SetValue sets the Value field's value.
func (s *UserData) SetValue(v string) *UserData {
	s.Value = &v
	return s
}

type UsersMemberItem struct {
	_ struct{} `type:"structure"`

	UserId *string `locationName:"UserId" type:"string"`
}

// String returns the string representation
func (s UsersMemberItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s UsersMemberItem) GoString() string {
	return s.String()
}

// SetUserId sets the UserId field's value.
func (s *UsersMemberItem) SetUserId(v string) *UsersMemberItem {
	s.UserId = &v
	return s
}

type ValueSetItem struct {
	_ struct{} `type:"structure"`

	Value *string `locationName:"value" type:"string"`
}

// String returns the string representation
func (s ValueSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ValueSetItem) GoString() string {
	return s.String()
}

// SetValue sets the Value field's value.
func (s *ValueSetItem) SetValue(v string) *ValueSetItem {
	s.Value = &v
	return s
}

type VersionInformation struct {
	_ struct{} `type:"structure"`

	IsLatest *bool `locationName:"isLatest" type:"boolean"`

	Version *string `locationName:"version" type:"string"`
}

// String returns the string representation
func (s VersionInformation) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s VersionInformation) GoString() string {
	return s.String()
}

// SetIsLatest sets the IsLatest field's value.
func (s *VersionInformation) SetIsLatest(v bool) *VersionInformation {
	s.IsLatest = &v
	return s
}

// SetVersion sets the Version field's value.
func (s *VersionInformation) SetVersion(v string) *VersionInformation {
	s.Version = &v
	return s
}

type VgwTelemetrySetItem struct {
	_ struct{} `type:"structure"`

	AcceptedRouteCount *int64 `locationName:"acceptedRouteCount" type:"integer"`

	LastStatusChange *time.Time `locationName:"lastStatusChange" type:"timestamp" timestampFormat:""`

	OutsideIpAddress *string `locationName:"outsideIpAddress" type:"string"`

	Status *string `locationName:"status" type:"string"`

	StatusMessage *string `locationName:"statusMessage" type:"string"`
}

// String returns the string representation
func (s VgwTelemetrySetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s VgwTelemetrySetItem) GoString() string {
	return s.String()
}

// SetAcceptedRouteCount sets the AcceptedRouteCount field's value.
func (s *VgwTelemetrySetItem) SetAcceptedRouteCount(v int64) *VgwTelemetrySetItem {
	s.AcceptedRouteCount = &v
	return s
}

// SetLastStatusChange sets the LastStatusChange field's value.
func (s *VgwTelemetrySetItem) SetLastStatusChange(v time.Time) *VgwTelemetrySetItem {
	s.LastStatusChange = &v
	return s
}

// SetOutsideIpAddress sets the OutsideIpAddress field's value.
func (s *VgwTelemetrySetItem) SetOutsideIpAddress(v string) *VgwTelemetrySetItem {
	s.OutsideIpAddress = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *VgwTelemetrySetItem) SetStatus(v string) *VgwTelemetrySetItem {
	s.Status = &v
	return s
}

// SetStatusMessage sets the StatusMessage field's value.
func (s *VgwTelemetrySetItem) SetStatusMessage(v string) *VgwTelemetrySetItem {
	s.StatusMessage = &v
	return s
}

type VipMeasuredRateSetItem struct {
	_ struct{} `type:"structure"`

	Charge *int64 `locationName:"charge" type:"integer"`

	Type *string `locationName:"type" type:"string"`

	Unit *string `locationName:"unit" type:"string"`

	Value *int64 `locationName:"value" type:"integer"`
}

// String returns the string representation
func (s VipMeasuredRateSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s VipMeasuredRateSetItem) GoString() string {
	return s.String()
}

// SetCharge sets the Charge field's value.
func (s *VipMeasuredRateSetItem) SetCharge(v int64) *VipMeasuredRateSetItem {
	s.Charge = &v
	return s
}

// SetType sets the Type field's value.
func (s *VipMeasuredRateSetItem) SetType(v string) *VipMeasuredRateSetItem {
	s.Type = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *VipMeasuredRateSetItem) SetUnit(v string) *VipMeasuredRateSetItem {
	s.Unit = &v
	return s
}

// SetValue sets the Value field's value.
func (s *VipMeasuredRateSetItem) SetValue(v int64) *VipMeasuredRateSetItem {
	s.Value = &v
	return s
}

type VipSetItem struct {
	_ struct{} `type:"structure"`

	Charge *int64 `locationName:"charge" type:"integer"`

	Type *string `locationName:"type" type:"string"`

	Unit *string `locationName:"unit" type:"string"`

	Value *int64 `locationName:"value" type:"integer"`
}

// String returns the string representation
func (s VipSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s VipSetItem) GoString() string {
	return s.String()
}

// SetCharge sets the Charge field's value.
func (s *VipSetItem) SetCharge(v int64) *VipSetItem {
	s.Charge = &v
	return s
}

// SetType sets the Type field's value.
func (s *VipSetItem) SetType(v string) *VipSetItem {
	s.Type = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *VipSetItem) SetUnit(v string) *VipSetItem {
	s.Unit = &v
	return s
}

// SetValue sets the Value field's value.
func (s *VipSetItem) SetValue(v int64) *VipSetItem {
	s.Value = &v
	return s
}

type Volume struct {
	_ struct{} `type:"structure"`

	Id *string `locationName:"id" type:"string"`

	Size *int64 `locationName:"size" type:"integer"`
}

// String returns the string representation
func (s Volume) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s Volume) GoString() string {
	return s.String()
}

// SetId sets the Id field's value.
func (s *Volume) SetId(v string) *Volume {
	s.Id = &v
	return s
}

// SetSize sets the Size field's value.
func (s *Volume) SetSize(v int64) *Volume {
	s.Size = &v
	return s
}

type VolumeInfo struct {
	_ struct{} `type:"structure"`

	ImportInstanceDiskMeasuredRate *ImportInstanceDiskMeasuredRate `locationName:"importInstanceDiskMeasuredRate" type:"structure"`

	ImportInstanceDiskMonthlyRate *ImportInstanceDiskMonthlyRate `locationName:"importInstanceDiskMonthlyRate" type:"structure"`

	VolumeMeasuredRateSet []*VolumeMeasuredRateSetItem `locationName:"volumeMeasuredRateSet" locationNameList:"item" type:"list"`

	VolumeSet []*VolumeSetItem `locationName:"volumeSet" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s VolumeInfo) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s VolumeInfo) GoString() string {
	return s.String()
}

// SetImportInstanceDiskMeasuredRate sets the ImportInstanceDiskMeasuredRate field's value.
func (s *VolumeInfo) SetImportInstanceDiskMeasuredRate(v *ImportInstanceDiskMeasuredRate) *VolumeInfo {
	s.ImportInstanceDiskMeasuredRate = v
	return s
}

// SetImportInstanceDiskMonthlyRate sets the ImportInstanceDiskMonthlyRate field's value.
func (s *VolumeInfo) SetImportInstanceDiskMonthlyRate(v *ImportInstanceDiskMonthlyRate) *VolumeInfo {
	s.ImportInstanceDiskMonthlyRate = v
	return s
}

// SetVolumeMeasuredRateSet sets the VolumeMeasuredRateSet field's value.
func (s *VolumeInfo) SetVolumeMeasuredRateSet(v []*VolumeMeasuredRateSetItem) *VolumeInfo {
	s.VolumeMeasuredRateSet = v
	return s
}

// SetVolumeSet sets the VolumeSet field's value.
func (s *VolumeInfo) SetVolumeSet(v []*VolumeSetItem) *VolumeInfo {
	s.VolumeSet = v
	return s
}

type VolumeMeasuredRateSetItem struct {
	_ struct{} `type:"structure"`

	Charge *int64 `locationName:"charge" type:"integer"`

	Type *string `locationName:"type" type:"string"`

	Unit *string `locationName:"unit" type:"string"`

	Value *int64 `locationName:"value" type:"integer"`
}

// String returns the string representation
func (s VolumeMeasuredRateSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s VolumeMeasuredRateSetItem) GoString() string {
	return s.String()
}

// SetCharge sets the Charge field's value.
func (s *VolumeMeasuredRateSetItem) SetCharge(v int64) *VolumeMeasuredRateSetItem {
	s.Charge = &v
	return s
}

// SetType sets the Type field's value.
func (s *VolumeMeasuredRateSetItem) SetType(v string) *VolumeMeasuredRateSetItem {
	s.Type = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *VolumeMeasuredRateSetItem) SetUnit(v string) *VolumeMeasuredRateSetItem {
	s.Unit = &v
	return s
}

// SetValue sets the Value field's value.
func (s *VolumeMeasuredRateSetItem) SetValue(v int64) *VolumeMeasuredRateSetItem {
	s.Value = &v
	return s
}

type VolumeSetItem struct {
	_ struct{} `type:"structure"`

	AccountingType *string `locationName:"accountingType" type:"string"`

	AttachmentSet []*AttachmentSetItem `locationName:"attachmentSet" locationNameList:"item" type:"list"`

	AvailabilityZone *string `locationName:"availabilityZone" type:"string"`

	Charge *int64 `locationName:"charge" type:"integer"`

	CreateTime *time.Time `locationName:"createTime" type:"timestamp" timestampFormat:""`

	DiskType *string `locationName:"diskType" type:"string"`

	NextMonthAccountingType *string `locationName:"nextMonthAccountingType" type:"string"`

	Size *string `locationName:"size" type:"string"`

	SnapshotId *string `locationName:"snapshotId" type:"string"`

	Status *string `locationName:"status" type:"string"`

	Type *string `locationName:"type" type:"string"`

	Unit *string `locationName:"unit" type:"string"`

	Value *int64 `locationName:"value" type:"integer"`

	VolumeId *string `locationName:"volumeId" type:"string"`
}

// String returns the string representation
func (s VolumeSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s VolumeSetItem) GoString() string {
	return s.String()
}

// SetAccountingType sets the AccountingType field's value.
func (s *VolumeSetItem) SetAccountingType(v string) *VolumeSetItem {
	s.AccountingType = &v
	return s
}

// SetAttachmentSet sets the AttachmentSet field's value.
func (s *VolumeSetItem) SetAttachmentSet(v []*AttachmentSetItem) *VolumeSetItem {
	s.AttachmentSet = v
	return s
}

// SetAvailabilityZone sets the AvailabilityZone field's value.
func (s *VolumeSetItem) SetAvailabilityZone(v string) *VolumeSetItem {
	s.AvailabilityZone = &v
	return s
}

// SetCharge sets the Charge field's value.
func (s *VolumeSetItem) SetCharge(v int64) *VolumeSetItem {
	s.Charge = &v
	return s
}

// SetCreateTime sets the CreateTime field's value.
func (s *VolumeSetItem) SetCreateTime(v time.Time) *VolumeSetItem {
	s.CreateTime = &v
	return s
}

// SetDiskType sets the DiskType field's value.
func (s *VolumeSetItem) SetDiskType(v string) *VolumeSetItem {
	s.DiskType = &v
	return s
}

// SetNextMonthAccountingType sets the NextMonthAccountingType field's value.
func (s *VolumeSetItem) SetNextMonthAccountingType(v string) *VolumeSetItem {
	s.NextMonthAccountingType = &v
	return s
}

// SetSize sets the Size field's value.
func (s *VolumeSetItem) SetSize(v string) *VolumeSetItem {
	s.Size = &v
	return s
}

// SetSnapshotId sets the SnapshotId field's value.
func (s *VolumeSetItem) SetSnapshotId(v string) *VolumeSetItem {
	s.SnapshotId = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *VolumeSetItem) SetStatus(v string) *VolumeSetItem {
	s.Status = &v
	return s
}

// SetType sets the Type field's value.
func (s *VolumeSetItem) SetType(v string) *VolumeSetItem {
	s.Type = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *VolumeSetItem) SetUnit(v string) *VolumeSetItem {
	s.Unit = &v
	return s
}

// SetValue sets the Value field's value.
func (s *VolumeSetItem) SetValue(v int64) *VolumeSetItem {
	s.Value = &v
	return s
}

// SetVolumeId sets the VolumeId field's value.
func (s *VolumeSetItem) SetVolumeId(v string) *VolumeSetItem {
	s.VolumeId = &v
	return s
}

type VolumesSetItem struct {
	_ struct{} `type:"structure"`

	AvailabilityZone *string `locationName:"availabilityZone" type:"string"`

	BytesConverted *int64 `locationName:"bytesConverted" type:"integer"`

	Description *string `locationName:"description" type:"string"`

	Image *Image `locationName:"image" type:"structure"`

	Status *string `locationName:"status" type:"string"`

	StatusMessage *string `locationName:"statusMessage" type:"string"`

	Volume *Volume `locationName:"volume" type:"structure"`
}

// String returns the string representation
func (s VolumesSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s VolumesSetItem) GoString() string {
	return s.String()
}

// SetAvailabilityZone sets the AvailabilityZone field's value.
func (s *VolumesSetItem) SetAvailabilityZone(v string) *VolumesSetItem {
	s.AvailabilityZone = &v
	return s
}

// SetBytesConverted sets the BytesConverted field's value.
func (s *VolumesSetItem) SetBytesConverted(v int64) *VolumesSetItem {
	s.BytesConverted = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *VolumesSetItem) SetDescription(v string) *VolumesSetItem {
	s.Description = &v
	return s
}

// SetImage sets the Image field's value.
func (s *VolumesSetItem) SetImage(v *Image) *VolumesSetItem {
	s.Image = v
	return s
}

// SetStatus sets the Status field's value.
func (s *VolumesSetItem) SetStatus(v string) *VolumesSetItem {
	s.Status = &v
	return s
}

// SetStatusMessage sets the StatusMessage field's value.
func (s *VolumesSetItem) SetStatusMessage(v string) *VolumesSetItem {
	s.StatusMessage = &v
	return s
}

// SetVolume sets the Volume field's value.
func (s *VolumesSetItem) SetVolume(v *Volume) *VolumesSetItem {
	s.Volume = v
	return s
}

type VpnConnectMeasuredRateSetItem struct {
	_ struct{} `type:"structure"`

	Charge *int64 `locationName:"charge" type:"integer"`

	Type *string `locationName:"type" type:"string"`

	Unit *string `locationName:"unit" type:"string"`

	Value *int64 `locationName:"value" type:"integer"`
}

// String returns the string representation
func (s VpnConnectMeasuredRateSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s VpnConnectMeasuredRateSetItem) GoString() string {
	return s.String()
}

// SetCharge sets the Charge field's value.
func (s *VpnConnectMeasuredRateSetItem) SetCharge(v int64) *VpnConnectMeasuredRateSetItem {
	s.Charge = &v
	return s
}

// SetType sets the Type field's value.
func (s *VpnConnectMeasuredRateSetItem) SetType(v string) *VpnConnectMeasuredRateSetItem {
	s.Type = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *VpnConnectMeasuredRateSetItem) SetUnit(v string) *VpnConnectMeasuredRateSetItem {
	s.Unit = &v
	return s
}

// SetValue sets the Value field's value.
func (s *VpnConnectMeasuredRateSetItem) SetValue(v int64) *VpnConnectMeasuredRateSetItem {
	s.Value = &v
	return s
}

type VpnConnection struct {
	_ struct{} `type:"structure"`

	CreatedTime *time.Time `locationName:"createdTime" type:"timestamp" timestampFormat:""`

	CustomerGatewayConfiguration *string `locationName:"customerGatewayConfiguration" type:"string"`

	CustomerGatewayId *string `locationName:"customerGatewayId" type:"string"`

	NiftyCustomerGatewayName *string `locationName:"niftyCustomerGatewayName" type:"string"`

	NiftyIpsecConfiguration *NiftyIpsecConfiguration `locationName:"niftyIpsecConfiguration" type:"structure"`

	NiftyTunnel *NiftyTunnel `locationName:"niftyTunnel" type:"structure"`

	NiftyVpnConnectionDescription *string `locationName:"niftyVpnConnectionDescription" type:"string"`

	NiftyVpnGatewayName *string `locationName:"niftyVpnGatewayName" type:"string"`

	Options *Options `locationName:"options" type:"structure"`

	Routes *Routes `locationName:"routes" type:"structure"`

	State *string `locationName:"state" type:"string"`

	TagSet []*TagSetItem `locationName:"tagSet" locationNameList:"item" type:"list"`

	Type *string `locationName:"type" type:"string"`

	VgwTelemetry []*VgwTelemetrySetItem `locationName:"vgwTelemetry" locationNameList:"item" type:"list"`

	VpnConnectionId *string `locationName:"vpnConnectionId" type:"string"`

	VpnGatewayId *string `locationName:"vpnGatewayId" type:"string"`
}

// String returns the string representation
func (s VpnConnection) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s VpnConnection) GoString() string {
	return s.String()
}

// SetCreatedTime sets the CreatedTime field's value.
func (s *VpnConnection) SetCreatedTime(v time.Time) *VpnConnection {
	s.CreatedTime = &v
	return s
}

// SetCustomerGatewayConfiguration sets the CustomerGatewayConfiguration field's value.
func (s *VpnConnection) SetCustomerGatewayConfiguration(v string) *VpnConnection {
	s.CustomerGatewayConfiguration = &v
	return s
}

// SetCustomerGatewayId sets the CustomerGatewayId field's value.
func (s *VpnConnection) SetCustomerGatewayId(v string) *VpnConnection {
	s.CustomerGatewayId = &v
	return s
}

// SetNiftyCustomerGatewayName sets the NiftyCustomerGatewayName field's value.
func (s *VpnConnection) SetNiftyCustomerGatewayName(v string) *VpnConnection {
	s.NiftyCustomerGatewayName = &v
	return s
}

// SetNiftyIpsecConfiguration sets the NiftyIpsecConfiguration field's value.
func (s *VpnConnection) SetNiftyIpsecConfiguration(v *NiftyIpsecConfiguration) *VpnConnection {
	s.NiftyIpsecConfiguration = v
	return s
}

// SetNiftyTunnel sets the NiftyTunnel field's value.
func (s *VpnConnection) SetNiftyTunnel(v *NiftyTunnel) *VpnConnection {
	s.NiftyTunnel = v
	return s
}

// SetNiftyVpnConnectionDescription sets the NiftyVpnConnectionDescription field's value.
func (s *VpnConnection) SetNiftyVpnConnectionDescription(v string) *VpnConnection {
	s.NiftyVpnConnectionDescription = &v
	return s
}

// SetNiftyVpnGatewayName sets the NiftyVpnGatewayName field's value.
func (s *VpnConnection) SetNiftyVpnGatewayName(v string) *VpnConnection {
	s.NiftyVpnGatewayName = &v
	return s
}

// SetOptions sets the Options field's value.
func (s *VpnConnection) SetOptions(v *Options) *VpnConnection {
	s.Options = v
	return s
}

// SetRoutes sets the Routes field's value.
func (s *VpnConnection) SetRoutes(v *Routes) *VpnConnection {
	s.Routes = v
	return s
}

// SetState sets the State field's value.
func (s *VpnConnection) SetState(v string) *VpnConnection {
	s.State = &v
	return s
}

// SetTagSet sets the TagSet field's value.
func (s *VpnConnection) SetTagSet(v []*TagSetItem) *VpnConnection {
	s.TagSet = v
	return s
}

// SetType sets the Type field's value.
func (s *VpnConnection) SetType(v string) *VpnConnection {
	s.Type = &v
	return s
}

// SetVgwTelemetry sets the VgwTelemetry field's value.
func (s *VpnConnection) SetVgwTelemetry(v []*VgwTelemetrySetItem) *VpnConnection {
	s.VgwTelemetry = v
	return s
}

// SetVpnConnectionId sets the VpnConnectionId field's value.
func (s *VpnConnection) SetVpnConnectionId(v string) *VpnConnection {
	s.VpnConnectionId = &v
	return s
}

// SetVpnGatewayId sets the VpnGatewayId field's value.
func (s *VpnConnection) SetVpnGatewayId(v string) *VpnConnection {
	s.VpnGatewayId = &v
	return s
}

type VpnConnectionSetItem struct {
	_ struct{} `type:"structure"`

	CreatedTime *time.Time `locationName:"createdTime" type:"timestamp" timestampFormat:""`

	CustomerGatewayConfiguration *string `locationName:"customerGatewayConfiguration" type:"string"`

	CustomerGatewayId *string `locationName:"customerGatewayId" type:"string"`

	NiftyCustomerGatewayName *string `locationName:"niftyCustomerGatewayName" type:"string"`

	NiftyIpsecConfiguration *NiftyIpsecConfiguration `locationName:"niftyIpsecConfiguration" type:"structure"`

	NiftyTunnel *NiftyTunnel `locationName:"niftyTunnel" type:"structure"`

	NiftyVpnConnectionDescription *string `locationName:"niftyVpnConnectionDescription" type:"string"`

	NiftyVpnGatewayName *string `locationName:"niftyVpnGatewayName" type:"string"`

	Options *Options `locationName:"options" type:"structure"`

	Routes *Routes `locationName:"routes" type:"structure"`

	State *string `locationName:"state" type:"string"`

	TagSet []*TagSetItem `locationName:"tagSet" locationNameList:"item" type:"list"`

	Type *string `locationName:"type" type:"string"`

	VgwTelemetry []*VgwTelemetrySetItem `locationName:"vgwTelemetry" locationNameList:"item" type:"list"`

	VpnConnectionId *string `locationName:"vpnConnectionId" type:"string"`

	VpnGatewayId *string `locationName:"vpnGatewayId" type:"string"`
}

// String returns the string representation
func (s VpnConnectionSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s VpnConnectionSetItem) GoString() string {
	return s.String()
}

// SetCreatedTime sets the CreatedTime field's value.
func (s *VpnConnectionSetItem) SetCreatedTime(v time.Time) *VpnConnectionSetItem {
	s.CreatedTime = &v
	return s
}

// SetCustomerGatewayConfiguration sets the CustomerGatewayConfiguration field's value.
func (s *VpnConnectionSetItem) SetCustomerGatewayConfiguration(v string) *VpnConnectionSetItem {
	s.CustomerGatewayConfiguration = &v
	return s
}

// SetCustomerGatewayId sets the CustomerGatewayId field's value.
func (s *VpnConnectionSetItem) SetCustomerGatewayId(v string) *VpnConnectionSetItem {
	s.CustomerGatewayId = &v
	return s
}

// SetNiftyCustomerGatewayName sets the NiftyCustomerGatewayName field's value.
func (s *VpnConnectionSetItem) SetNiftyCustomerGatewayName(v string) *VpnConnectionSetItem {
	s.NiftyCustomerGatewayName = &v
	return s
}

// SetNiftyIpsecConfiguration sets the NiftyIpsecConfiguration field's value.
func (s *VpnConnectionSetItem) SetNiftyIpsecConfiguration(v *NiftyIpsecConfiguration) *VpnConnectionSetItem {
	s.NiftyIpsecConfiguration = v
	return s
}

// SetNiftyTunnel sets the NiftyTunnel field's value.
func (s *VpnConnectionSetItem) SetNiftyTunnel(v *NiftyTunnel) *VpnConnectionSetItem {
	s.NiftyTunnel = v
	return s
}

// SetNiftyVpnConnectionDescription sets the NiftyVpnConnectionDescription field's value.
func (s *VpnConnectionSetItem) SetNiftyVpnConnectionDescription(v string) *VpnConnectionSetItem {
	s.NiftyVpnConnectionDescription = &v
	return s
}

// SetNiftyVpnGatewayName sets the NiftyVpnGatewayName field's value.
func (s *VpnConnectionSetItem) SetNiftyVpnGatewayName(v string) *VpnConnectionSetItem {
	s.NiftyVpnGatewayName = &v
	return s
}

// SetOptions sets the Options field's value.
func (s *VpnConnectionSetItem) SetOptions(v *Options) *VpnConnectionSetItem {
	s.Options = v
	return s
}

// SetRoutes sets the Routes field's value.
func (s *VpnConnectionSetItem) SetRoutes(v *Routes) *VpnConnectionSetItem {
	s.Routes = v
	return s
}

// SetState sets the State field's value.
func (s *VpnConnectionSetItem) SetState(v string) *VpnConnectionSetItem {
	s.State = &v
	return s
}

// SetTagSet sets the TagSet field's value.
func (s *VpnConnectionSetItem) SetTagSet(v []*TagSetItem) *VpnConnectionSetItem {
	s.TagSet = v
	return s
}

// SetType sets the Type field's value.
func (s *VpnConnectionSetItem) SetType(v string) *VpnConnectionSetItem {
	s.Type = &v
	return s
}

// SetVgwTelemetry sets the VgwTelemetry field's value.
func (s *VpnConnectionSetItem) SetVgwTelemetry(v []*VgwTelemetrySetItem) *VpnConnectionSetItem {
	s.VgwTelemetry = v
	return s
}

// SetVpnConnectionId sets the VpnConnectionId field's value.
func (s *VpnConnectionSetItem) SetVpnConnectionId(v string) *VpnConnectionSetItem {
	s.VpnConnectionId = &v
	return s
}

// SetVpnGatewayId sets the VpnGatewayId field's value.
func (s *VpnConnectionSetItem) SetVpnGatewayId(v string) *VpnConnectionSetItem {
	s.VpnGatewayId = &v
	return s
}

type VpnGateway struct {
	_ struct{} `type:"structure"`

	AccountingType *string `locationName:"accountingType" type:"string"`

	Attachments []*AttachmentsSetItem `locationName:"attachments" locationNameList:"item" type:"list"`

	AvailabilityZone *string `locationName:"availabilityZone" type:"string"`

	CreatedTime *time.Time `locationName:"createdTime" type:"timestamp" timestampFormat:""`

	GroupSet []*GroupSetItem `locationName:"groupSet" locationNameList:"item" type:"list"`

	NetworkInterfaceSet []*NetworkInterfaceSetItem `locationName:"networkInterfaceSet" locationNameList:"item" type:"list"`

	NextMonthAccountingType *string `locationName:"nextMonthAccountingType" type:"string"`

	NiftyRedundancy *bool `locationName:"niftyRedundancy" type:"boolean"`

	NiftyVpnGatewayDescription *string `locationName:"niftyVpnGatewayDescription" type:"string"`

	NiftyVpnGatewayName *string `locationName:"niftyVpnGatewayName" type:"string"`

	NiftyVpnGatewayType *string `locationName:"niftyVpnGatewayType" type:"string"`

	State *string `locationName:"state" type:"string"`

	TagSet []*TagSetItem `locationName:"tagSet" locationNameList:"item" type:"list"`

	Type *string `locationName:"type" type:"string"`

	VpnGatewayId *string `locationName:"vpnGatewayId" type:"string"`
}

// String returns the string representation
func (s VpnGateway) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s VpnGateway) GoString() string {
	return s.String()
}

// SetAccountingType sets the AccountingType field's value.
func (s *VpnGateway) SetAccountingType(v string) *VpnGateway {
	s.AccountingType = &v
	return s
}

// SetAttachments sets the Attachments field's value.
func (s *VpnGateway) SetAttachments(v []*AttachmentsSetItem) *VpnGateway {
	s.Attachments = v
	return s
}

// SetAvailabilityZone sets the AvailabilityZone field's value.
func (s *VpnGateway) SetAvailabilityZone(v string) *VpnGateway {
	s.AvailabilityZone = &v
	return s
}

// SetCreatedTime sets the CreatedTime field's value.
func (s *VpnGateway) SetCreatedTime(v time.Time) *VpnGateway {
	s.CreatedTime = &v
	return s
}

// SetGroupSet sets the GroupSet field's value.
func (s *VpnGateway) SetGroupSet(v []*GroupSetItem) *VpnGateway {
	s.GroupSet = v
	return s
}

// SetNetworkInterfaceSet sets the NetworkInterfaceSet field's value.
func (s *VpnGateway) SetNetworkInterfaceSet(v []*NetworkInterfaceSetItem) *VpnGateway {
	s.NetworkInterfaceSet = v
	return s
}

// SetNextMonthAccountingType sets the NextMonthAccountingType field's value.
func (s *VpnGateway) SetNextMonthAccountingType(v string) *VpnGateway {
	s.NextMonthAccountingType = &v
	return s
}

// SetNiftyRedundancy sets the NiftyRedundancy field's value.
func (s *VpnGateway) SetNiftyRedundancy(v bool) *VpnGateway {
	s.NiftyRedundancy = &v
	return s
}

// SetNiftyVpnGatewayDescription sets the NiftyVpnGatewayDescription field's value.
func (s *VpnGateway) SetNiftyVpnGatewayDescription(v string) *VpnGateway {
	s.NiftyVpnGatewayDescription = &v
	return s
}

// SetNiftyVpnGatewayName sets the NiftyVpnGatewayName field's value.
func (s *VpnGateway) SetNiftyVpnGatewayName(v string) *VpnGateway {
	s.NiftyVpnGatewayName = &v
	return s
}

// SetNiftyVpnGatewayType sets the NiftyVpnGatewayType field's value.
func (s *VpnGateway) SetNiftyVpnGatewayType(v string) *VpnGateway {
	s.NiftyVpnGatewayType = &v
	return s
}

// SetState sets the State field's value.
func (s *VpnGateway) SetState(v string) *VpnGateway {
	s.State = &v
	return s
}

// SetTagSet sets the TagSet field's value.
func (s *VpnGateway) SetTagSet(v []*TagSetItem) *VpnGateway {
	s.TagSet = v
	return s
}

// SetType sets the Type field's value.
func (s *VpnGateway) SetType(v string) *VpnGateway {
	s.Type = &v
	return s
}

// SetVpnGatewayId sets the VpnGatewayId field's value.
func (s *VpnGateway) SetVpnGatewayId(v string) *VpnGateway {
	s.VpnGatewayId = &v
	return s
}

type VpnGatewayInfo struct {
	_ struct{} `type:"structure"`

	VpnGatewayMeasuredRateSet []*VpnGatewayMeasuredRateSetItem `locationName:"vpnGatewayMeasuredRateSet" locationNameList:"item" type:"list"`

	VpnGatewayMonthlyRateSet []*VpnGatewayMonthlyRateSetItem `locationName:"vpnGatewayMonthlyRateSet" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s VpnGatewayInfo) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s VpnGatewayInfo) GoString() string {
	return s.String()
}

// SetVpnGatewayMeasuredRateSet sets the VpnGatewayMeasuredRateSet field's value.
func (s *VpnGatewayInfo) SetVpnGatewayMeasuredRateSet(v []*VpnGatewayMeasuredRateSetItem) *VpnGatewayInfo {
	s.VpnGatewayMeasuredRateSet = v
	return s
}

// SetVpnGatewayMonthlyRateSet sets the VpnGatewayMonthlyRateSet field's value.
func (s *VpnGatewayInfo) SetVpnGatewayMonthlyRateSet(v []*VpnGatewayMonthlyRateSetItem) *VpnGatewayInfo {
	s.VpnGatewayMonthlyRateSet = v
	return s
}

type VpnGatewayItemSetItem struct {
	_ struct{} `type:"structure"`

	Count *int64 `locationName:"count" type:"integer"`

	Type *string `locationName:"type" type:"string"`
}

// String returns the string representation
func (s VpnGatewayItemSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s VpnGatewayItemSetItem) GoString() string {
	return s.String()
}

// SetCount sets the Count field's value.
func (s *VpnGatewayItemSetItem) SetCount(v int64) *VpnGatewayItemSetItem {
	s.Count = &v
	return s
}

// SetType sets the Type field's value.
func (s *VpnGatewayItemSetItem) SetType(v string) *VpnGatewayItemSetItem {
	s.Type = &v
	return s
}

type VpnGatewayMeasuredRateSetItem struct {
	_ struct{} `type:"structure"`

	Charge *int64 `locationName:"charge" type:"integer"`

	Type *string `locationName:"type" type:"string"`

	Unit *string `locationName:"unit" type:"string"`

	Value *int64 `locationName:"value" type:"integer"`
}

// String returns the string representation
func (s VpnGatewayMeasuredRateSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s VpnGatewayMeasuredRateSetItem) GoString() string {
	return s.String()
}

// SetCharge sets the Charge field's value.
func (s *VpnGatewayMeasuredRateSetItem) SetCharge(v int64) *VpnGatewayMeasuredRateSetItem {
	s.Charge = &v
	return s
}

// SetType sets the Type field's value.
func (s *VpnGatewayMeasuredRateSetItem) SetType(v string) *VpnGatewayMeasuredRateSetItem {
	s.Type = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *VpnGatewayMeasuredRateSetItem) SetUnit(v string) *VpnGatewayMeasuredRateSetItem {
	s.Unit = &v
	return s
}

// SetValue sets the Value field's value.
func (s *VpnGatewayMeasuredRateSetItem) SetValue(v int64) *VpnGatewayMeasuredRateSetItem {
	s.Value = &v
	return s
}

type VpnGatewayMonthlyRateSetItem struct {
	_ struct{} `type:"structure"`

	Charge *int64 `locationName:"charge" type:"integer"`

	Type *string `locationName:"type" type:"string"`

	Unit *string `locationName:"unit" type:"string"`

	Value *int64 `locationName:"value" type:"integer"`
}

// String returns the string representation
func (s VpnGatewayMonthlyRateSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s VpnGatewayMonthlyRateSetItem) GoString() string {
	return s.String()
}

// SetCharge sets the Charge field's value.
func (s *VpnGatewayMonthlyRateSetItem) SetCharge(v int64) *VpnGatewayMonthlyRateSetItem {
	s.Charge = &v
	return s
}

// SetType sets the Type field's value.
func (s *VpnGatewayMonthlyRateSetItem) SetType(v string) *VpnGatewayMonthlyRateSetItem {
	s.Type = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *VpnGatewayMonthlyRateSetItem) SetUnit(v string) *VpnGatewayMonthlyRateSetItem {
	s.Unit = &v
	return s
}

// SetValue sets the Value field's value.
func (s *VpnGatewayMonthlyRateSetItem) SetValue(v int64) *VpnGatewayMonthlyRateSetItem {
	s.Value = &v
	return s
}

type VpnGatewayNetworkInterfaceSetItem struct {
	_ struct{} `type:"structure"`

	DeviceIndex *int64 `locationName:"deviceIndex" type:"integer"`

	IpAddress *string `locationName:"ipAddress" type:"string"`

	NetworkId *string `locationName:"networkId" type:"string"`

	NiftyVpnGatewayName *string `locationName:"niftyVpnGatewayName" type:"string"`

	VpnGatewayId *string `locationName:"vpnGatewayId" type:"string"`
}

// String returns the string representation
func (s VpnGatewayNetworkInterfaceSetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s VpnGatewayNetworkInterfaceSetItem) GoString() string {
	return s.String()
}

// SetDeviceIndex sets the DeviceIndex field's value.
func (s *VpnGatewayNetworkInterfaceSetItem) SetDeviceIndex(v int64) *VpnGatewayNetworkInterfaceSetItem {
	s.DeviceIndex = &v
	return s
}

// SetIpAddress sets the IpAddress field's value.
func (s *VpnGatewayNetworkInterfaceSetItem) SetIpAddress(v string) *VpnGatewayNetworkInterfaceSetItem {
	s.IpAddress = &v
	return s
}

// SetNetworkId sets the NetworkId field's value.
func (s *VpnGatewayNetworkInterfaceSetItem) SetNetworkId(v string) *VpnGatewayNetworkInterfaceSetItem {
	s.NetworkId = &v
	return s
}

// SetNiftyVpnGatewayName sets the NiftyVpnGatewayName field's value.
func (s *VpnGatewayNetworkInterfaceSetItem) SetNiftyVpnGatewayName(v string) *VpnGatewayNetworkInterfaceSetItem {
	s.NiftyVpnGatewayName = &v
	return s
}

// SetVpnGatewayId sets the VpnGatewayId field's value.
func (s *VpnGatewayNetworkInterfaceSetItem) SetVpnGatewayId(v string) *VpnGatewayNetworkInterfaceSetItem {
	s.VpnGatewayId = &v
	return s
}

type VpnGatewaySetItem struct {
	_ struct{} `type:"structure"`

	AccountingType *string `locationName:"accountingType" type:"string"`

	Attachments []*AttachmentsSetItem `locationName:"attachments" locationNameList:"item" type:"list"`

	AvailabilityZone *string `locationName:"availabilityZone" type:"string"`

	BackupInformation *BackupInformation `locationName:"backupInformation" type:"structure"`

	CreatedTime *time.Time `locationName:"createdTime" type:"timestamp" timestampFormat:""`

	DeviceIndex *int64 `locationName:"deviceIndex" type:"integer"`

	GroupSet []*GroupSetItem `locationName:"groupSet" locationNameList:"item" type:"list"`

	IpAddress *string `locationName:"ipAddress" type:"string"`

	NetworkInterfaceSet []*NetworkInterfaceSetItem `locationName:"networkInterfaceSet" locationNameList:"item" type:"list"`

	NiftyRedundancy *bool `locationName:"niftyRedundancy" type:"boolean"`

	NiftyVpnGatewayDescription *string `locationName:"niftyVpnGatewayDescription" type:"string"`

	NiftyVpnGatewayName *string `locationName:"niftyVpnGatewayName" type:"string"`

	NiftyVpnGatewayType *string `locationName:"niftyVpnGatewayType" type:"string"`

	RouteTableAssociationId *string `locationName:"routeTableAssociationId" type:"string"`

	RouteTableId *string `locationName:"routeTableId" type:"string"`

	State *string `locationName:"state" type:"string"`

	TagSet []*TagSetItem `locationName:"tagSet" locationNameList:"item" type:"list"`

	Type *string `locationName:"type" type:"string"`

	VersionInformation *VersionInformation `locationName:"versionInformation" type:"structure"`

	VpnGatewayId *string `locationName:"vpnGatewayId" type:"string"`
}

// String returns the string representation
func (s VpnGatewaySetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s VpnGatewaySetItem) GoString() string {
	return s.String()
}

// SetAccountingType sets the AccountingType field's value.
func (s *VpnGatewaySetItem) SetAccountingType(v string) *VpnGatewaySetItem {
	s.AccountingType = &v
	return s
}

// SetAttachments sets the Attachments field's value.
func (s *VpnGatewaySetItem) SetAttachments(v []*AttachmentsSetItem) *VpnGatewaySetItem {
	s.Attachments = v
	return s
}

// SetAvailabilityZone sets the AvailabilityZone field's value.
func (s *VpnGatewaySetItem) SetAvailabilityZone(v string) *VpnGatewaySetItem {
	s.AvailabilityZone = &v
	return s
}

// SetBackupInformation sets the BackupInformation field's value.
func (s *VpnGatewaySetItem) SetBackupInformation(v *BackupInformation) *VpnGatewaySetItem {
	s.BackupInformation = v
	return s
}

// SetCreatedTime sets the CreatedTime field's value.
func (s *VpnGatewaySetItem) SetCreatedTime(v time.Time) *VpnGatewaySetItem {
	s.CreatedTime = &v
	return s
}

// SetDeviceIndex sets the DeviceIndex field's value.
func (s *VpnGatewaySetItem) SetDeviceIndex(v int64) *VpnGatewaySetItem {
	s.DeviceIndex = &v
	return s
}

// SetGroupSet sets the GroupSet field's value.
func (s *VpnGatewaySetItem) SetGroupSet(v []*GroupSetItem) *VpnGatewaySetItem {
	s.GroupSet = v
	return s
}

// SetIpAddress sets the IpAddress field's value.
func (s *VpnGatewaySetItem) SetIpAddress(v string) *VpnGatewaySetItem {
	s.IpAddress = &v
	return s
}

// SetNetworkInterfaceSet sets the NetworkInterfaceSet field's value.
func (s *VpnGatewaySetItem) SetNetworkInterfaceSet(v []*NetworkInterfaceSetItem) *VpnGatewaySetItem {
	s.NetworkInterfaceSet = v
	return s
}

// SetNiftyRedundancy sets the NiftyRedundancy field's value.
func (s *VpnGatewaySetItem) SetNiftyRedundancy(v bool) *VpnGatewaySetItem {
	s.NiftyRedundancy = &v
	return s
}

// SetNiftyVpnGatewayDescription sets the NiftyVpnGatewayDescription field's value.
func (s *VpnGatewaySetItem) SetNiftyVpnGatewayDescription(v string) *VpnGatewaySetItem {
	s.NiftyVpnGatewayDescription = &v
	return s
}

// SetNiftyVpnGatewayName sets the NiftyVpnGatewayName field's value.
func (s *VpnGatewaySetItem) SetNiftyVpnGatewayName(v string) *VpnGatewaySetItem {
	s.NiftyVpnGatewayName = &v
	return s
}

// SetNiftyVpnGatewayType sets the NiftyVpnGatewayType field's value.
func (s *VpnGatewaySetItem) SetNiftyVpnGatewayType(v string) *VpnGatewaySetItem {
	s.NiftyVpnGatewayType = &v
	return s
}

// SetRouteTableAssociationId sets the RouteTableAssociationId field's value.
func (s *VpnGatewaySetItem) SetRouteTableAssociationId(v string) *VpnGatewaySetItem {
	s.RouteTableAssociationId = &v
	return s
}

// SetRouteTableId sets the RouteTableId field's value.
func (s *VpnGatewaySetItem) SetRouteTableId(v string) *VpnGatewaySetItem {
	s.RouteTableId = &v
	return s
}

// SetState sets the State field's value.
func (s *VpnGatewaySetItem) SetState(v string) *VpnGatewaySetItem {
	s.State = &v
	return s
}

// SetTagSet sets the TagSet field's value.
func (s *VpnGatewaySetItem) SetTagSet(v []*TagSetItem) *VpnGatewaySetItem {
	s.TagSet = v
	return s
}

// SetType sets the Type field's value.
func (s *VpnGatewaySetItem) SetType(v string) *VpnGatewaySetItem {
	s.Type = &v
	return s
}

// SetVersionInformation sets the VersionInformation field's value.
func (s *VpnGatewaySetItem) SetVersionInformation(v *VersionInformation) *VpnGatewaySetItem {
	s.VersionInformation = v
	return s
}

// SetVpnGatewayId sets the VpnGatewayId field's value.
func (s *VpnGatewaySetItem) SetVpnGatewayId(v string) *VpnGatewaySetItem {
	s.VpnGatewayId = &v
	return s
}

type WebProxy struct {
	_ struct{} `type:"structure"`

	BypassInterface *BypassInterface `locationName:"bypassInterface" type:"structure"`

	Description *string `locationName:"description" type:"string"`

	ListenInterface *ListenInterface `locationName:"listenInterface" type:"structure"`

	ListenPort *string `locationName:"listenPort" type:"string"`

	Option *Option `locationName:"option" type:"structure"`

	RouterId *string `locationName:"routerId" type:"string"`

	RouterName *string `locationName:"routerName" type:"string"`
}

// String returns the string representation
func (s WebProxy) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s WebProxy) GoString() string {
	return s.String()
}

// SetBypassInterface sets the BypassInterface field's value.
func (s *WebProxy) SetBypassInterface(v *BypassInterface) *WebProxy {
	s.BypassInterface = v
	return s
}

// SetDescription sets the Description field's value.
func (s *WebProxy) SetDescription(v string) *WebProxy {
	s.Description = &v
	return s
}

// SetListenInterface sets the ListenInterface field's value.
func (s *WebProxy) SetListenInterface(v *ListenInterface) *WebProxy {
	s.ListenInterface = v
	return s
}

// SetListenPort sets the ListenPort field's value.
func (s *WebProxy) SetListenPort(v string) *WebProxy {
	s.ListenPort = &v
	return s
}

// SetOption sets the Option field's value.
func (s *WebProxy) SetOption(v *Option) *WebProxy {
	s.Option = v
	return s
}

// SetRouterId sets the RouterId field's value.
func (s *WebProxy) SetRouterId(v string) *WebProxy {
	s.RouterId = &v
	return s
}

// SetRouterName sets the RouterName field's value.
func (s *WebProxy) SetRouterName(v string) *WebProxy {
	s.RouterName = &v
	return s
}

type WebProxySetItem struct {
	_ struct{} `type:"structure"`

	BypassInterface *BypassInterface `locationName:"bypassInterface" type:"structure"`

	Description *string `locationName:"description" type:"string"`

	ListenInterface *ListenInterface `locationName:"listenInterface" type:"structure"`

	ListenPort *string `locationName:"listenPort" type:"string"`

	Option *Option `locationName:"option" type:"structure"`

	RouterId *string `locationName:"routerId" type:"string"`

	RouterName *string `locationName:"routerName" type:"string"`
}

// String returns the string representation
func (s WebProxySetItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s WebProxySetItem) GoString() string {
	return s.String()
}

// SetBypassInterface sets the BypassInterface field's value.
func (s *WebProxySetItem) SetBypassInterface(v *BypassInterface) *WebProxySetItem {
	s.BypassInterface = v
	return s
}

// SetDescription sets the Description field's value.
func (s *WebProxySetItem) SetDescription(v string) *WebProxySetItem {
	s.Description = &v
	return s
}

// SetListenInterface sets the ListenInterface field's value.
func (s *WebProxySetItem) SetListenInterface(v *ListenInterface) *WebProxySetItem {
	s.ListenInterface = v
	return s
}

// SetListenPort sets the ListenPort field's value.
func (s *WebProxySetItem) SetListenPort(v string) *WebProxySetItem {
	s.ListenPort = &v
	return s
}

// SetOption sets the Option field's value.
func (s *WebProxySetItem) SetOption(v *Option) *WebProxySetItem {
	s.Option = v
	return s
}

// SetRouterId sets the RouterId field's value.
func (s *WebProxySetItem) SetRouterId(v string) *WebProxySetItem {
	s.RouterId = &v
	return s
}

// SetRouterName sets the RouterName field's value.
func (s *WebProxySetItem) SetRouterName(v string) *WebProxySetItem {
	s.RouterName = &v
	return s
}
